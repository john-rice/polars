var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_and_args","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_as_series","max_as_series","max_as_series","max_as_series","mean","mean","median","median","median","median_as_series","median_as_series","median_as_series","min","min","min_as_series","min_as_series","min_as_series","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_as_series","std_as_series","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","sum_as_series","sum_as_series","sum_as_series","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","upstream_traits","value_unchecked","var","var_as_series","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","PolarsAsRef","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Flat","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Nested","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Structure","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_as_series","merge_dtypes","merge_map","microseconds","milliseconds","min_as_series","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","performance","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_lengths","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","AggregationContext","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","BatchedCsvReaderMmap","BatchedCsvReaderRead","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","Context","Count","Count","Cross","CrossJoin","CsvEncoding","CsvParserOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","FLOAT_RE","FLOAT_RE_DECIMAL","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Flat","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","GetAnyValue","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HashMap","HashMap","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinDispatch","JoinOptions","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Nested","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Outer","Output","Over","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetWriteOptions","ParquetWriter","PartitionedAggregation","PathIterator","Physical","Physical","PhysicalExpr","PhysicalIoHelper","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","RevMapping","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingGroupOptions","RollingOptions","RollingOptionsFixedWindow","RollingOptionsImpl","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIter","RowGroups","Saturday","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","StartBy","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","Structure","SubPlan","Sum","Sum","SumHorizontal","Sunday","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","ToDummies","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_finish_left_join","_join_suffix_name","_left_join_from_series","_outer_join_from_series","_sum_as_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_comment_prefix","_with_eager","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_expression","as_fd","as_list","as_partitioned_aggregator","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_stats_evaluator","as_stats_evaluator","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","by","by","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","center","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","df","df","diff","diff","diff","div","div","divide","dot","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","finalize","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_path","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_null","full_null","fun","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_header","has_header","has_validity","has_validity","has_window_function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_series","into_series","into_thrift","into_vec","is_between","is_between","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_literal","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_as_series","max_as_series","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_as_series","median_as_series","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merges_join_keys","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_as_series","min_as_series","min_max","min_periods","min_periods","min_periods","min_periods","minute","minute","minute","minute","minutes","minutes","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next_batches","next_batches","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","null","null","null","null","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","outer_join","outer_join","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parsed_int","partial_cmp","partial_cmp","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_as_series","product","profile","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","raise_if_empty","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_mean","rolling_mean","rolling_median","rolling_min","rolling_min","rolling_quantile","rolling_quantile","rolling_std","rolling_std","rolling_sum","rolling_sum","rolling_var","rolling_var","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_as_series","std_as_series","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_as_series","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dot","to_dummies","to_dummies","to_field","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_ragged_lines","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","tu","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","tz","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_as_series","var_as_series","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","weights","weights","when","when","when","window_size","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtypes","with_dtypes_slice","with_encoding","with_encoding","with_end_of_line_char","with_end_of_line_char","with_extension","with_extension","with_float_precision","with_fractional_seconds","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","coalesce","data_type","high","low","error","error","msg","msg","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptions","RollingOptionsImpl","SeriesOpsTime","StringMethods","TimeMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","borrow","borrow_mut","by","by","center","center","clone","clone_into","closed_window","closed_window","day","day","days","default","deref","deref_mut","drop","eq","fmt","fn_params","fn_params","from","hour","hour","hours","init","into","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_mean","rolling_min","rolling_quantile","rolling_std","rolling_sum","rolling_var","second","second","seconds","string","to_owned","try_from","try_into","tu","type_id","tz","vzip","warn_if_unsorted","week","week","weekday","weekday","weights","weights","window_size","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Flat","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Nested","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Structure","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_as_series","mean","mean_as_series","median","median_as_series","min","min_as_series","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_as_series","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[864,"polars::chunked_array::arithmetic"],[892,"polars::chunked_array::builder"],[1149,"polars::chunked_array::builder::list"],[1166,"polars::chunked_array::collect"],[1180,"polars::chunked_array::float"],[1182,"polars::chunked_array::iterator"],[1252,"polars::chunked_array::iterator::par"],[1254,"polars::chunked_array::object"],[1325,"polars::chunked_array::object::builder"],[1348,"polars::chunked_array::object::registry"],[1376,"polars::chunked_array::ops"],[1575,"polars::chunked_array::ops::arity"],[1610,"polars::chunked_array::ops::float_sorted_arg_max"],[1612,"polars::chunked_array::ops::gather"],[1615,"polars::chunked_array::ops::search_sorted"],[1644,"polars::chunked_array::ops::sort"],[1651,"polars::chunked_array::ops::sort::arg_bottom_k"],[1652,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1659,"polars::chunked_array::ops::sort::options"],[1672,"polars::chunked_array::temporal"],[1679,"polars::chunked_array::temporal::conversion"],[1682,"polars::chunked_array::upstream_traits"],[1683,"polars::datatypes"],[3019,"polars::datatypes::categorical"],[3036,"polars::datatypes::categorical::revmap"],[3042,"polars::datatypes::categorical::string_cache"],[3061,"polars::docs"],[3064,"polars::error"],[3150,"polars::error::PolarsError"],[3154,"polars::error::constants"],[3157,"polars::frame"],[3412,"polars::frame::explode"],[3441,"polars::frame::group_by"],[3677,"polars::frame::group_by::GroupByMethod"],[3678,"polars::frame::group_by::GroupsProxy"],[3680,"polars::frame::group_by::aggregations"],[3693,"polars::frame::group_by::expr"],[3696,"polars::frame::row"],[3803,"polars::functions"],[3805,"polars::prelude"],[8503,"polars::prelude::AggExpr"],[8510,"polars::prelude::BooleanFunction"],[8513,"polars::prelude::DslPlan"],[8565,"polars::prelude::Expr"],[8599,"polars::prelude::FunctionExpr"],[8619,"polars::prelude::GroupByMethod"],[8620,"polars::prelude::GroupsProxy"],[8622,"polars::prelude::JoinType"],[8623,"polars::prelude::LiteralValue"],[8626,"polars::prelude::PolarsError"],[8630,"polars::prelude::aggregations"],[8643,"polars::prelude::arity"],[8678,"polars::prelude::array"],[8697,"polars::prelude::binary"],[8713,"polars::prelude::cat"],[8714,"polars::prelude::chunkedarray"],[8807,"polars::prelude::chunkedarray::string"],[8845,"polars::prelude::chunkedarray::string::infer"],[8875,"polars::prelude::cloud"],[8922,"polars::prelude::cloud::options"],[8930,"polars::prelude::datatypes"],[9193,"polars::prelude::datatypes::categorical"],[9210,"polars::prelude::datatypes::categorical::revmap"],[9216,"polars::prelude::datatypes::categorical::string_cache"],[9220,"polars::prelude::datetime"],[9223,"polars::prelude::default_arrays"],[9229,"polars::prelude::dt"],[9281,"polars::prelude::expr"],[9284,"polars::prelude::fixed_size_list"],[9304,"polars::prelude::float_sorted_arg_max"],[9306,"polars::prelude::gather"],[9309,"polars::prelude::mode"],[9310,"polars::prelude::nan_propagating_aggregate"],[9314,"polars::prelude::null"],[9344,"polars::prelude::search_sorted"],[9350,"polars::prelude::series"],[9372,"polars::prelude::slice"],[9375,"polars::prelude::sort"],[9382,"polars::prelude::sort::arg_bottom_k"],[9383,"polars::prelude::sort::arg_sort_multiple"],[9390,"polars::prelude::sort::options"],[9403,"polars::prelude::strings"],[9456,"polars::prelude::udf"],[9462,"polars::prelude::utf8"],[9466,"polars::series"],[9867,"polars::series::arithmetic"],[9888,"polars::series::arithmetic::checked"],[9894,"polars::series::ops"],[9920,"polars::series::unstable"],[9944,"dyn_clone::sealed"],[9945,"num_traits"],[9946,"num_traits::cast"],[9947,"core::result"],[9948,"core::option"],[9949,"polars_arrow::array"],[9950,"alloc::boxed"],[9951,"core::iter::traits::iterator"],[9952,"polars_core::chunked_array::list::iterator"],[9953,"core::ops::function"],[9954,"core::marker"],[9955,"alloc::borrow"],[9956,"core::ops::function"],[9957,"core::slice::iter"],[9958,"core::iter::adapters::map"],[9959,"alloc::vec"],[9960,"core::iter::traits::double_ended"],[9961,"polars_arrow::offset"],[9962,"core::iter::traits::collect"],[9963,"core::fmt"],[9964,"core::fmt"],[9965,"core::convert"],[9966,"polars_arrow::bitmap::immutable"],[9967,"core::borrow"],[9968,"rayon::iter"],[9969,"core::marker"],[9970,"core::iter::traits::exact_size"],[9971,"bitflags::iter"],[9972,"bitflags::iter"],[9973,"rayon::iter"],[9974,"core::marker"],[9975,"ahash::random_state"],[9976,"polars_utils::hashing"],[9977,"ndarray"],[9978,"ndarray::dimension::dim"],[9979,"ndarray"],[9980,"either"],[9981,"core::any"],[9982,"core::ops::function"],[9983,"core::clone"],[9984,"polars_core::series::implementations::null"],[9985,"polars_arrow::array::boolean"],[9986,"polars_arrow::array::fixed_size_list"],[9987,"core::any"],[9988,"polars_arrow::bitmap::utils::zip_validity"],[9989,"core::hash"],[9990,"core::error"],[9991,"polars_arrow::array::primitive"],[9992,"polars_row::row"],[9993,"chrono::naive::datetime"],[9994,"chrono_tz::timezones"],[9995,"chrono::naive::time"],[9996,"bytemuck::zeroable"],[9997,"core::convert"],[9998,"polars_arrow::types"],[9999,"chrono::time_delta"],[10000,"chrono::naive::date"],[10001,"smartstring::config"],[10002,"smartstring"],[10003,"core::cmp"],[10004,"polars_arrow::datatypes::physical_type"],[10005,"simdutf8::basic"],[10006,"std::io::error"],[10007,"planus::errors"],[10008,"polars_parquet::parquet::error"],[10009,"alloc::collections"],[10010,"core::fmt"],[10011,"core::ops::range"],[10012,"polars_utils::idx_vec"],[10013,"rayon::iter::plumbing"],[10014,"polars_plan::logical_plan::aexpr"],[10015,"core::iter::adapters::copied"],[10016,"core::iter::adapters::zip"],[10017,"polars_utils::float"],[10018,"polars_arrow::types::native"],[10019,"polars_io::mmap"],[10020,"core::alloc"],[10021,"polars_plan::logical_plan::visitor"],[10022,"std::io"],[10023,"std::os::fd::owned"],[10024,"std::os::fd::owned"],[10025,"polars_io::predicates"],[10026,"core::mem::maybe_uninit"],[10027,"polars_io::csv::write::writer"],[10028,"std::io"],[10029,"polars_io::parquet::write::batched_writer"],[10030,"hashbrown::map"],[10031,"core::cmp"],[10032,"std::path"],[10033,"core::default"],[10034,"polars_plan::dot"],[10035,"alloc::sync"],[10036,"core::iter::traits::collect"],[10037,"polars_lazy::physical_plan::state"],[10038,"crossterm::command"],[10039,"polars_io::predicates"],[10040,"polars_plan::dsl::function_expr::list"],[10041,"polars_plan::dsl::function_expr::range"],[10042,"polars_plan::dsl::function_expr::binary"],[10043,"polars_plan::dsl::function_expr::array"],[10044,"polars_plan::dsl::function_expr::cat"],[10045,"polars_plan::dsl::function_expr::struct_"],[10046,"polars_plan::dsl::function_expr::strings"],[10047,"polars_plan::dsl::function_expr::datetime"],[10048,"std::path"],[10049,"std::ffi::os_str"],[10050,"alloc::ffi::c_str"],[10051,"polars_arrow::array::growable::structure"],[10052,"polars_arrow::array::struct_::mutable"],[10053,"polars_arrow::buffer::immutable"],[10054,"polars_arrow::array::list"],[10055,"polars_plan::logical_plan::options"],[10056,"core::cmp"],[10057,"polars_io::mmap"],[10058,"polars_arrow::array::struct_::iterator"],[10059,"parquet_format_safe::parquet_format"],[10060,"polars_io::parquet::read::read_impl"],[10061,"polars_plan::logical_plan::alp"],[10062,"polars_utils::arena"],[10063,"polars_plan::logical_plan::aexpr"],[10064,"core::error"],[10065,"parquet_format_safe::thrift::varint::decode"],[10066,"std::io"],[10067,"std::io"],[10068,"core::alloc"],[10069,"core::num::nonzero"],[10070,"alloc::collections::btree::map"],[10071,"std::io"],[10072,"polars_arrow::array::utf8"],[10073,"polars_arrow::array::binary"]],"if":"``````{{}b}`````````{{}d}```````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}e}{}l{nA`}}{{{j{Ab}}{j{Ab}}}}{{{j{Ad}}Af}}{{{j{Ad}}{j{Ad}}}}30{{{j{c}}{j{c}}}{}l}{{{j{Ah}}{j{Ah}}}}410{{{j{Ah}}{Al{Aj}}}}{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{{Bf{c}}}}Bh}AnBj}{{{j{h}}Bh}An}{{{j{Ah}}Bh}An}{{{j{Ab}}Bh}An}{{{j{Bl}}Bh}An}{{{j{Ad}}Bh}An}{{{j{c}}Bh}Anl}{{{j{Ab}}}d}{{}Bn}{{{j{Ab}}}{{C`{d}}}}{{{j{Bl}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{Bl}}Af}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{j{h}}Af}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}64{{{j{c}}{j{c}}}b{{D`{}{{Cl{Cn}}}}}}{{{j{Ab}}c}{{j{Ab}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}Df}}{{{j{Ah}}c}{{j{Ah}}}{{Dd{{C`{{Al{Aj}}}}}{{Db{{C`{{Dh{{Al{Aj}}}}}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{{C`{An}}}{{Db{{C`{An}}}}}}Df}}{{{j{c}}e}{{j{c}}}l{{Dd{C`}{{Db{C`}}}}Df}}{{{j{Ad}}c}{{j{Ad}}}{{Dd{{C`{Af}}}{{Db{{C`{{Dh{Af}}}}}}}}Df}}{{{j{{Bf{c}}}}e}{{j{{Bf{c}}}}}Bj{{Dd{{C`{c}}}{{Db{{C`{c}}}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{h}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}e}{{j{g}}}{}{{Dl{{C`{Dj}}}{{Db{{C`{c}}}}}}Df}D`}{{{j{Bl}}c}{{j{Bl}}}{{Dl{Dj}{{Db{An}}}}}}{{{j{Dn}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{E`}}c}An{{Dd{An}{{Db{An}}}}}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{C`}{{Db{{C`{e}}}}}}}D`}{{{j{c}}e}{{j{c}}}l{{Dd{}{{Db{}}}}Df}}{{{j{Ad}}Dd}{{j{Ad}}}}{{{j{Ab}}Dd}{{j{Ab}}}}{{{j{Ah}}Dd}{{j{Ah}}}}{{{j{c}}Dd}{{j{c}}}l}{{{j{Ab}}Dd}{{j{c}}}D`}{{{j{Ad}}Dd}{{j{c}}}D`}{{{j{Ah}}Dd}{{j{c}}}D`}{{{j{c}}Dd}{{j{e}}}lD`}{{{j{Ah}}c}{{j{Ah}}}{{Dl{{Al{Aj}}}{{Db{{Al{Aj}}}}}}}}{{{j{c}}e}bl{{Dd{}{{Db{}}}}Df}}{{{j{Ad}}c}{{j{Ad}}}{{Dl{Af}{{Db{Af}}}}}}{{{j{c}}Ebg}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{Ad}}c}{{j{Ad}}}{{Dl{AfEd}}}}{{{j{h}}Dd}{{Bb{{j{h}}B`}}}}{{{j{Bl}}Dd}{{Bb{{j{Bl}}B`}}}}{{{j{c}}g{Al{e}}}bl{}{{Dd{C`e}{{Db{e}}}}}}{{{j{Ab}}e{Al{c}}}b{}{{Dd{{C`{d}}c}{{Db{c}}}}}}{{{j{Ah}}e{Al{c}}}b{}{{Dd{{C`{{Al{Aj}}}}c}{{Db{c}}}}}}{{{j{Ad}}e{Al{c}}}b{}{{Dd{{C`{Af}}c}{{Db{c}}}}}}{{{j{{Bf{c}}}}g{Al{e}}}bBj{}{{Dd{{C`{c}}e}{{Db{e}}}}}}{{{j{h}}e{Al{c}}}b{}{{Dd{{C`{An}}c}{{Db{c}}}}}}{{{j{c}}e}{{j{c}}}l{{Dd{}{{Db{}}}}Df}}{{{j{{Bf{c}}}}e}{{j{{Bf{c}}}}}Bj{{Dd{c}{{Db{c}}}}Df}}{{{j{h}}c}{{j{h}}}{{Dd{An}{{Db{An}}}}Df}}{{{j{Ah}}c}{{j{Ah}}}{{Dd{{Al{Aj}}}{{Db{{Dh{{Al{Aj}}}}}}}}Df}}{{{j{Ab}}c}{{j{Ab}}}{{Dd{d}{{Db{d}}}}Df}}{{{j{Ad}}c}{{j{Ad}}}{{Dd{Af}{{Db{{Dh{Af}}}}}}Df}}{{{j{c}}g}{{j{i}}}D`{}{{Dl{}{{Db{e}}}}}D`}{{{j{c}}Ef}{{j{Eh}}}l}{{{j{Ej}}Ef}{{j{Eh}}}}{{{j{Ah}}Ef}{{j{Eh}}}}{{{j{Ad}}Ef}{{j{Eh}}}}{{{j{Ab}}Ef}{{j{Eh}}}}{{{j{c}}{Al{An}}El}{{Bb{{j{Eh}}B`}}}l}{{{j{Ah}}{Al{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ad}}{Al{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ab}}{Al{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ej}}{Al{An}}El}{{Bb{{j{Eh}}B`}}}}{{{j{Ab}}}{{Bb{{j{Eh}}B`}}}}{{{j{{Bf{c}}}}}{{Bb{{j{Eh}}B`}}}Bj}{{{j{c}}}{{Bb{{j{Eh}}B`}}}l}{{{j{Ah}}}{{Bb{{j{Eh}}B`}}}}{{{j{Ad}}}{{Bb{{j{Eh}}B`}}}}`{{{j{Bl}}}{{j{Bl}}}}{{{j{Ad}}}{{j{Ah}}}}{{{j{Ah}}}{{j{Ah}}}}{{{j{h}}}{{j{h}}}}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}EbD`}{{{j{Ad}}}{{j{Ad}}}}0{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}D`D`{{Dl{{C`{Dj}}C`C`}{{Db{{C`{An}}}}}}}}{{{j{Ab}}{j{Ab}}}}{{{j{c}}{j{c}}}{}En}1{{BnBn}Bn}{{BnBn}b}33210{BnAj}043421{ce{}{}}00000``{{{j{h}}Eb}{{Bb{AnB`}}}}{{{j{c}}Eb}{{Bb{AnB`}}}l}{{{j{Ad}}Eb}{{Bb{AnB`}}}}{{{j{Ej}}Eb}{{Bb{AnB`}}}}{{{j{Ah}}Eb}{{Bb{AnB`}}}}{{{j{Ab}}Eb}{{Bb{AnB`}}}}{{{j{Bl}}Eb}{{Bb{AnB`}}}}{{{j{c}}e}{{j{g}}}l{{Dd{}{{Db{}}}}Df}l}2356174{{{j{c}}An}{{Bb{AnB`}}}F`}{{{j{c}}e}{{Bb{AnB`}}}F`A`}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}D`}{{{j{c}}}{{Fj{{Cf{Cd}}}}}D`}0{{{j{c}}}{{j{c}}}D`}0{BnBn}{{ce}b{}{}}0``1{{{j{c}}}{{Bb{AlB`}}}l}{{BnBn}d}{{{j{c}}}{{`{Fl}}}l}{{}{{j{c}}}D`}{{}Bn}{Fdc{}}00000{{BnBn}Bn}{{{j{c}}e}{}l{nA`}}{{{j{c}}{j{c}}}{}l}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{c}}}bD`}{Fdb}00{{{j{c}}}EbD`}8;{{{j{h}}{j{h}}}{{j{Ab}}}}{{{j{c}}{j{c}}}{{j{Ab}}}l}{{{j{Ah}}{j{Ah}}}{{j{Ab}}}}{{{j{Ad}}Af}{{j{Ab}}}}{{{j{Ad}}{j{Ad}}}{{j{Ab}}}}{{{j{Ab}}{j{Ab}}}{{j{Ab}}}}{{{j{Bl}}{j{Bl}}}{{j{Ab}}}}{{{j{c}}e}{{j{Ab}}}lA`}{{{j{Ah}}{Al{Aj}}}{{j{Ab}}}}407183265{{{j{Bl}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{Ad}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{h}}}{{Bb{{Gb{An{G`{Fn}}}}B`}}}}{{{j{c}}{j{c}}}bl}{{Bnc}b{{Gd{}{{Cb{Bn}}}}}}{{{j{Ab}}d}{{Bb{{j{Ab}}B`}}}}{{{j{Ah}}{Al{Aj}}}{{Bb{{j{Ah}}B`}}}}{{{j{c}}}{{Bb{{j{c}}B`}}}l}{{{j{{Bf{c}}}}{j{Ab}}}{{Bb{{j{{Bf{c}}}}B`}}}Bj}{{{j{Ad}}{j{Ab}}}{{Bb{{j{Ad}}B`}}}}{{{j{Ab}}{j{Ab}}}{{Bb{{j{Ab}}B`}}}}{{{j{Bl}}{j{Ab}}}{{Bb{{j{Bl}}B`}}}}{{{j{c}}{j{Ab}}}{{Bb{{j{c}}B`}}}l}{{{j{Ej}}{j{Ab}}}{{Bb{{j{Ej}}B`}}}}{{{j{Ah}}{j{Ab}}}{{Bb{{j{Ah}}B`}}}}{{{j{h}}{j{Ab}}}{{Bb{{j{h}}B`}}}}{{{j{c}}}{{C`{Fd}}}D`}`{{{j{Bl}}Gf}{{Bb{bGh}}}}{{{j{h}}Gf}{{Bb{bGh}}}}{{{j{c}}Gf}{{Bb{bGh}}}l}{{{j{Ad}}Gf}{{Bb{bGh}}}}{{{j{Ab}}Gf}{{Bb{bGh}}}}{{{j{Ah}}Gf}{{Bb{bGh}}}}{{{j{{Bf{c}}}}Gf}{{Bb{bGh}}}Bj}{{BnGf}{{Bb{bGh}}}}0000{{{j{c}}e}bD`{{Dl{C`}}}}{{{j{h}}c}b{{Dl{{C`{Dj}}}}}}{{{j{Bl}}c}b{{Dl{{C`{Dj}}}}}}{cc{}}{c{{j{e}}}Cd{{D`{}{{Gj{c}}}}}}11{Aj{{C`{Bn}}}}{AjBn}00{{Afc}{{j{e}}}Gd{{D`{}{{Gj{}}}}D`}}{{{j{c}}e}{{j{c}}}{{D`{}{{Gj{}}}}D`}Gd}{{Af{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{Af{Fj{{Cf{Cd}}}}Eb}{{j{c}}}D`}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}0{e{{j{Ah}}}{{Gn{{Al{Aj}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{{Bf{c}}}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{e}}}{{Gd{}{{Cb{{Gb{Fj{C`{H`}}}}}}}}}l}{c{{j{Ab}}}{{Gd{}{{Cb{d}}}}}}{c{{j{h}}}{{Gd{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{c{{j{Ab}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{c{{j{e}}}{{Gd{}{{Cb{C`}}}}}l}{e{{j{h}}}{{Hb{An}}}{{Gd{}{{Cb{c}}}}}}{e{{j{Ah}}}{{Hd{{Al{Aj}}}}}{{Gd{}{{Cb{c}}}}}}{e{{j{Ad}}}{{Hd{Af}}}{{Gd{}{{Cb{c}}}}}}{e{{j{Ad}}}{{Gn{Af}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{h}}}{{Gd{}{{Cb{{C`{An}}}}}}}}{cBn{{Gd{}{{Cb{Bn}}}}}}{{cFdFd{C`{Eb}}Af}{{j{Bl}}}{{Gd{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{{Afe}{{j{{Bf{c}}}}}Bj{{Ch{}{{Cb{{C`{c}}}}}}}}{{Afe}{{j{Ah}}}{{Gn{{Al{Aj}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Afc}{{j{e}}}{{Ch{}{{Cb{C`}}}}}l}{{Afc}{{j{Ab}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{Afe}{{j{Ad}}}{{Gn{Af}}}{{Ch{}{{Cb{{C`{c}}}}}}}}9{e{{j{Ah}}}{{Gn{{Al{Aj}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}>{e{{j{Ej}}}{{Gn{{Al{Aj}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{c{{j{Ab}}}{{Gd{}{{Cb{d}}}}}}{e{{j{{Bf{c}}}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{e{{j{Ej}}}{{Hd{{Al{Aj}}}}}{{Gd{}{{Cb{c}}}}}}<{e{{j{h}}}{{Hb{An}}}{{Gd{}{{Cb{c}}}}}}{c{{j{e}}}{{Gd{}{{Cb{C`}}}}}l}{e{{j{Ah}}}{{Hd{{Al{Aj}}}}}{{Gd{}{{Cb{c}}}}}}{e{{j{Ad}}}{{Gn{Af}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{{Afc}{{j{Ab}}}{{Ch{}{{Cb{d}}}}}}{{Afe}{{j{{Bf{c}}}}}Bj{{Ch{}{{Cb{c}}}}}}{{Afe}{{j{Ad}}}{{Gn{Af}}}{{Ch{}{{Cb{c}}}}}}{{Afc}{{j{e}}}{{Ch{}{{Cb{}}}}}l}{{Afe}{{j{Ah}}}{{Gn{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}{Af{{C`{Bn}}}}{c{{j{e}}}{{Hf{}{{Cb{C`}}}}}l}{c{{j{h}}}{{Hf{}{{Cb{{C`{An}}}}}}}}{e{{j{Ad}}}{{Gn{Af}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{c{{j{Ab}}}{{Hf{}{{Cb{{C`{d}}}}}}}}{c{{j{Ab}}}{{Hf{}{{Cb{d}}}}}}{e{{j{Ah}}}{{Hd{{Al{Aj}}}}HhHj}{{Hf{}{{Cb{c}}}}}}{e{{j{Ah}}}{{Gn{{Al{Aj}}}}HhHj}{{Hf{}{{Cb{{C`{c}}}}}}}}{e{{j{Ad}}}{{Hd{Af}}HhHj}{{Hf{}{{Cb{c}}}}}}{{AfAl}{{j{c}}}l}{{Af{Al{c}}}{{j{Ad}}}{{Gn{Af}}}}{{Af{Al{d}}}{{j{Ab}}}}{{Af{Al{c}}}{{j{{Bf{c}}}}}Bj}{{Af{Al{c}}}{{j{Ah}}}{{Gn{{Al{Aj}}}}}}{{Af{Al{{C`{c}}}}}{{j{Ad}}}{{Gn{Af}}}}{{Af{Al{{C`{d}}}}}{{j{Ab}}}}{{Af{Al{{C`{c}}}}}{{j{{Bf{c}}}}}Bj}{{Af{Al{C`}}}{{j{c}}}l}{{Af{Al{{C`{c}}}}}{{j{Ah}}}{{Gn{{Al{Aj}}}}}}{c{{j{Ab}}}{{Hl{}{{Cb{{C`{d}}}}}}}}{c{{j{e}}}{{Hl{}{{Cb{C`}}}}}l}{{AfFj}{{j{c}}}l}{{AfFj{C`{H`}}}{{j{c}}}l}{{AfAnFd}{{j{Bl}}}}{{Af{Al{Aj}}Fd}{{j{Ej}}}}{{AfAfFd}{{j{Ad}}}}{{AfdFd}{{j{Ab}}}}{{AfcFd}{{j{{Bf{c}}}}}Bj}{{AfAnFd}{{j{h}}}}{{Af{Al{Aj}}Fd}{{j{Ah}}}}{{AfFd}{{j{c}}}l}{{AfFd}{{j{h}}}}{{AfFd}{{j{Ah}}}}{{AfFd}{{j{Ad}}}}{{AfFd}{{j{Ab}}}}4{{AfFd}{{j{{Bf{c}}}}}Bj}{{AfFd}{{j{Ej}}}}{{AfFd}{{j{Bl}}}}{{{j{c}}Fd}{{j{c}}}D`}{{AfFdEbFd}{{j{Bl}}}}{{AfFdEb}{{j{h}}}}{{{j{c}}Fd}C`D`}{{{j{c}}Fd}{{Bb{HnB`}}}l}{{{j{Ab}}Fd}{{Bb{HnB`}}}}{{{j{h}}Fd}{{Bb{HnB`}}}}{{{j{{Bf{c}}}}Fd}{{Bb{HnB`}}}Bj}{{{j{Ej}}Fd}{{Bb{HnB`}}}}{{{j{Bl}}Fd}{{Bb{HnB`}}}}{{{j{Ah}}Fd}{{Bb{HnB`}}}}{{{j{Ad}}Fd}{{Bb{HnB`}}}}{{{j{Ej}}Fd}Hn}{{{j{Ah}}Fd}Hn}{{{j{Ad}}Fd}Hn}{{{j{Bl}}Fd}Hn}{{{j{c}}Fd}Hnl}{{{j{{Bf{c}}}}Fd}HnBj}{{{j{h}}Fd}Hn}{{{j{Ab}}Fd}Hn}{{{j{Bl}}Fd}{{C`{An}}}}{{{j{h}}Fd}{{C`{An}}}}{{{j{c}}}BnD`}{{{j{Bl}}}An}{{{j{h}}}An}{{{j{{Bf{c}}}}Fd}{{C`{I`}}}Bj}0{BnIb}{{{j{c}}Fd}C`D`}{{{j{Bl}}}Fd}{{{j{Ad}}}Fd}{{{j{h}}}Fd}{{{j{Ej}}}Fd}{{{j{Bl}}dd}{{Bb{BhB`}}}}{{{j{h}}dd}{{Bb{BhB`}}}}{{{j{Ej}}dd}{{Bb{BhB`}}}}{{{j{{Bf{c}}}}dd}{{Bb{BhB`}}}Bj}{{{j{Ah}}dd}{{Bb{BhB`}}}}{{{j{c}}dd}{{Bb{BhB`}}}l}{{{j{Ab}}dd}{{Bb{BhB`}}}}{{{j{Ad}}dd}{{Bb{BhB`}}}}{{{j{c}}FddFd}BhEn}{{{j{Ad}}{j{Ad}}}{{j{Ab}}}}{{{j{h}}{j{h}}}{{j{Ab}}}}{{{j{Ah}}{j{Ah}}}{{j{Ab}}}}{{{j{Ad}}Af}{{j{Ab}}}}{{{j{c}}{j{c}}}{{j{Ab}}}l}{{{j{Ab}}{j{Ab}}}{{j{Ab}}}}{{{j{Bl}}{j{Bl}}}{{j{Ab}}}}{{{j{c}}e}{{j{Ab}}}lA`}{{{j{Ah}}{Al{Aj}}}{{j{Ab}}}}763148052{{{j{c}}}dD`}{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{}Fd}00{{FdId{C`{If}}}{{j{c}}}l}{{{j{h}}}Eb}{{{j{Bl}}}Eb}{{BnBn}b}{{BnBn}Bn}{{BnBn}d}{ce{}{}}00{{{j{Ih}}}{{Il{IjIh}}}}{{{j{In}}J`{C`{Ed}}}{{Il{JbIn}}}}{{{j{Jd}}{C`{Fd}}Fd}{{Bb{{Il{JfJd}}B`}}}}{{{j{Jd}}{C`{Fd}}Fd}{{Il{JfJd}}}}{{{j{In}}J`}{{Il{JhIn}}}}{{{j{Ad}}}}{{{j{Ah}}}}{{{j{{Bf{c}}}}}{}Bj}{{{j{Ej}}}}{{{j{h}}}}{{{j{c}}}{}l}{{{j{Ab}}}}{{{j{Bl}}}}{Bn}{{{j{c}}}{{`{HhHjJjFlHl}}}l}{{{j{Jd}}}An}{{{j{c}}}AnD`}{{{j{In}}}{{Il{JlIn}}}}{Bnd}{{{j{c}}}dD`}1{{{j{c}}}{{j{Ab}}}Jn}000{{{j{c}}}{{j{Ab}}}D`}02{{{j{c}}}IbD`}{{{j{c}}}{{`{K`}}}D`}{Bn{{Kb{Bn}}}}{Bn{{Kd{Bn}}}}{{{j{c}}}{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{{C`{H`}}}}}}}}}D`}`{{{j{c}}}C`D`}{{{j{c}}}{{C`{Fd}}}D`}{{{j{c}}}{{Kf{c}}}D`}{{{j{c}}{j{c}}}{}l}0{{{j{c}}}{}l}000{{{j{c}}}FdD`}{{{j{c}}e}{{j{c}}}l{nKh}}00{{{j{c}}Fd}{{j{c}}}D`}{{{j{Ah}}{Al{Aj}}}{{j{Ab}}}}{{{j{Ad}}{j{Ad}}}{{j{Ab}}}}{{{j{h}}{j{h}}}{{j{Ab}}}}{{{j{Ab}}{j{Ab}}}{{j{Ab}}}}{{{j{Bl}}{j{Bl}}}{{j{Ab}}}}{{{j{Ad}}Af}{{j{Ab}}}}{{{j{c}}{j{c}}}{{j{Ab}}}l}{{{j{c}}e}{{j{Ab}}}lA`}{{{j{Ah}}{j{Ah}}}{{j{Ab}}}}302476815{{{j{Ab}}}{{C`{d}}}}{{{j{c}}}C`l}{{{j{Ab}}}An}{{{j{c}}}Anl}{{{j{Ah}}}An}{{{j{Ad}}}An}{{{j{Ab}}}{{C`{Kj}}}}{{{j{c}}}{{C`{Kj}}}l}{{{j{E`}}}{{C`{Kj}}}}{{{j{c}}}{{C`{Kj}}}En}{{{j{Dn}}}{{C`{Id}}}}{{{j{c}}}AnEn}{{{j{Dn}}}An}{{{j{E`}}}An}=<;98:{{{j{c}}}{{C`{Gb}}}l}{{AfAl}{{j{c}}}l}{{Af{Al{Aj}}FdFd}{{j{Ab}}}}{{{j{c}}{j{c}}}{}l}{{{j{c}}e}{}l{nA`}}10{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{Ah}}}{{Bb{FdB`}}}}{{{j{Ad}}}{{Bb{FdB`}}}}{{{j{c}}}{{Bb{FdB`}}}l}{{{j{c}}}AfD`}{{Af{Kl{Fn}}}{{j{In}}}}{{Afc}{{j{Ad}}}{{Gn{{Al{{C`{Ed}}}}}}}}{{Afc}{{j{Ad}}}{{Gn{{Al{{Dh{Af}}}}}}}}{{Afc}{{j{Kn}}}{{Gn{{Al{Aj}}}}}}{{Afc}{{j{L`}}}{{Gn{{Al{If}}}}}}{{Af{Al{c}}}{{j{{Bf{c}}}}}Bj}{{Afc}{{j{Ad}}}{{Gn{{Al{Ed}}}}}}{{Afc}{{j{Lb}}}{{Gn{{Al{{C`{Ld}}}}}}}}{{Afe}{{j{{Bf{c}}}}}Bj{{Gn{{Al{{C`{c}}}}}}}}{{Afc}{{j{Lf}}}{{Gn{{Al{{C`{Lh}}}}}}}}{{Afc}{{j{Dn}}}{{Gn{{Al{Id}}}}}}{{Afc}{{j{Ab}}}{{Gn{{Al{{C`{d}}}}}}}}{{Afc}{{j{Ab}}}{{Gn{{Al{d}}}}}}{{Afc}{{j{Ah}}}{{Gn{{Al{{Fj{Aj}}}}}}}}{{Afc}{{j{Ah}}}{{Gn{{Al{{Al{Aj}}}}}}}}{{Afc}{{j{Ah}}}{{Gn{{Al{{C`{{Dh{{Al{Aj}}}}}}}}}}}}{{Afc}{{j{E`}}}{{Gn{{Al{{C`{Kj}}}}}}}}{{Afc}{{j{Ah}}}{{Gn{{Al{{C`{{Al{Aj}}}}}}}}}}{{Afc}{{j{Eh}}}{{Gn{{Al{{C`{Lj}}}}}}}}{{Afc}{{j{Ih}}}{{Gn{{Al{{C`{Ll}}}}}}}}{{Afc}{{j{Ad}}}{{Gn{{Al{{C`{{Dh{Af}}}}}}}}}}{{Afc}{{j{Ih}}}{{Gn{{Al{Ll}}}}}}{{Afc}{{j{Ad}}}{{Gn{{Al{Af}}}}}}{{Af{Kl{If}}}{{j{L`}}}}{{Afc}{{j{Eh}}}{{Gn{{Al{Lj}}}}}}{{Afc}{{j{L`}}}{{Gn{{Al{{C`{If}}}}}}}}{{Afc}{{j{Lb}}}{{Gn{{Al{Ld}}}}}}{{Afc}{{j{Kn}}}{{Gn{{Al{{C`{Aj}}}}}}}}{{Afc}{{j{Lf}}}{{Gn{{Al{Lh}}}}}}{{Afc}{{j{E`}}}{{Gn{{Al{Kj}}}}}}{{Afc}{{j{Ln}}}{{Gn{{Al{M`}}}}}}{{Af{Kl{Lj}}}{{j{Eh}}}}{{Afc}{{j{Dn}}}{{Gn{{Al{{C`{Id}}}}}}}}{{Afc}{{j{Ah}}}{{Gn{{Al{{Dh{{Al{Aj}}}}}}}}}}{{Afc}{{j{Ad}}}{{Gn{{Al{{C`{Af}}}}}}}}{{Af{Kl{Ll}}}{{j{Ih}}}}{{Afc}{{j{In}}}{{Gn{{Al{Fn}}}}}}{{Afc}{{j{Ln}}}{{Gn{{Al{{C`{M`}}}}}}}}{{Afc}{{j{In}}}{{Gn{{Al{{C`{Fn}}}}}}}}{{Afc}{{j{Ah}}}{{Gn{{Al{{C`{{Fj{Aj}}}}}}}}}}{Af{{j{{Bf{c}}}}}Bj}{{{j{Bl}}FdFd}{{j{Bl}}}}{{{j{Ej}}FdFd}{{j{Ej}}}}{{{j{Ah}}FdFd}{{j{Ah}}}}{{{j{Ad}}FdFd}{{j{Ad}}}}{{{j{c}}FdFd}{{j{c}}}l}{{{j{{Bf{c}}}}FdFd}{{j{{Bf{c}}}}}Bj}{{{j{h}}FdFd}{{j{h}}}}{{{j{Ab}}FdFd}{{j{Ab}}}}{{Af{Fj{c}}}{{j{{Bf{c}}}}}Bj}{{Af{Fj{c}}H`}{{j{{Bf{c}}}}}Bj}{{AfFj}{{j{c}}}l}{{{j{c}}}{{j{c}}}Jn}{{{j{Ab}}}}0{BnBn}{{{j{Ad}}Af}{{j{Ab}}}}{{{j{h}}{j{h}}}{{j{Ab}}}}{{{j{c}}e}{{j{Ab}}}lA`}{{{j{Ad}}{j{Ad}}}{{j{Ab}}}}{{{j{c}}{j{c}}}{{j{Ab}}}l}{{{j{Ab}}{j{Ab}}}{{j{Ab}}}}{{{j{Ah}}{j{Ah}}}{{j{Ab}}}}{{{j{Ah}}{Al{Aj}}}{{j{Ab}}}}{{{j{Bl}}{j{Bl}}}{{j{Ab}}}}8{{{j{Bl}}{j{Bl}}}}2853746{{{j{c}}}FdD`}`{{{j{h}}}{{Bb{{G`{Fn}}B`}}}}{{{j{Bl}}}{{Bb{{G`{Fn}}B`}}}}{{{j{Ad}}}{{Bb{{G`{Fn}}B`}}}}`{{{j{h}}}{{`{{Mb{}{{Cb{{C`{An}}}}}}}}}}{{{j{Ad}}}{{`{{Mb{}{{Cb{{C`{Af}}}}}}}}}}{{{j{h}}}{{`{Md}}}}{{{j{Ad}}}{{`{Md}}}}{{{j{c}}}Anl}{{{j{c}}}bD`}{{{j{Dn}}KjMf}{{Bb{{C`{Id}}B`}}}}{{{j{c}}KjMf}{{Bb{{C`{Kj}}B`}}}En}{{{j{E`}}KjMf}{{Bb{{C`{Kj}}B`}}}}{{{j{E`}}KjMf}{{Bb{AnB`}}}}{{{j{c}}KjMf}{{Bb{AnB`}}}En}{{{j{Dn}}KjMf}{{Bb{AnB`}}}}{{AfFdKj}{{Bb{{j{Ab}}B`}}}}{{AfFdKjKj}{{Bb{{j{c}}B`}}}l}{{AfFd}{{j{c}}}l}{{AfFdKjKj}{{j{c}}}l}{{{j{c}}}{{j{c}}}D`}{{{j{c}}}MhD`}{{{j{L`}}}An}{{{j{Lb}}}An}{{{j{Ln}}}An}{{{j{Ih}}}An}{{{j{E`}}}An}{{{j{Dn}}}An}{{{j{Lf}}}An}{{{j{h}}}An}{{{j{Eh}}}An}{{{j{In}}}An}{{{j{Kn}}}An}981630427:5{{{j{c}}e}{}l{nA`}}0{{{j{c}}{j{c}}}{}l}0{{{j{c}}An}{{Bb{AnB`}}}Bd}{{BnBn}b}{{{j{c}}Af}bD`}{{{j{Ad}}}{{j{Ad}}}}{{{j{Ab}}}{{j{Ab}}}}{{{j{h}}}{{j{h}}}}{{{j{Ah}}}{{j{Ah}}}}{{{j{Bl}}}{{j{Bl}}}}{{{j{{Bf{c}}}}}{{j{{Bf{c}}}}}Bj}{{{j{c}}}{{j{c}}}l}{{{j{Ej}}}{{j{Ej}}}}{{{j{c}}DdMj}{{Bb{AnB`}}}l}{{{j{c}}Fde}{{Bb{{j{c}}B`}}}Jn{{Dl{{j{c}}}{{Db{C`}}}}}}{{{j{c}}Kjdd{C`{If}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}Fddd{C`{If}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}{Al{Lj}}e}{{Bb{AnB`}}}Ml{{Gd{}{{Cb{C`}}}}}}{{{j{Ad}}{Al{Lj}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{Af}}}}}}}}{{{j{Ab}}{Al{Lj}}c}{{Bb{AnB`}}}{{Gd{}{{Cb{{C`{d}}}}}}}}{{{j{Ad}}c{C`{Af}}}{{Bb{{j{Ad}}B`}}}{{Gd{}{{Cb{Lj}}}}}}{{{j{Ah}}c{C`{{Al{Aj}}}}}{{Bb{{j{Ah}}B`}}}{{Gd{}{{Cb{Lj}}}}}}{{{j{c}}eC`}{{Bb{{j{c}}B`}}}l{{Gd{}{{Cb{Lj}}}}}}{{{j{Ab}}c{C`{d}}}{{Bb{{j{Ab}}B`}}}{{Gd{}{{Cb{Lj}}}}}}{{{j{c}}eg}{{Bb{{j{c}}B`}}}l{{Gd{}{{Cb{Lj}}}}}{{Dd{C`}{{Db{C`}}}}}}{{{j{Ad}}ce}{{Bb{{j{Ad}}B`}}}{{Gd{}{{Cb{Lj}}}}}{{Dd{{C`{Af}}}{{Db{{C`{Ed}}}}}}}}{{{j{Ah}}ce}{{Bb{{j{Ah}}B`}}}{{Gd{}{{Cb{Lj}}}}}{{Dd{{C`{{Al{Aj}}}}}{{Db{{C`{{Fj{Aj}}}}}}}}}}{{{j{Ab}}ce}{{Bb{{j{Ab}}B`}}}{{Gd{}{{Cb{Lj}}}}}{{Dd{{C`{d}}}{{Db{{C`{d}}}}}}}}{{{j{Ab}}{j{Ab}}{C`{d}}}{{Bb{{j{Ab}}B`}}}}{{{j{Ad}}{j{Ab}}{C`{Af}}}{{Bb{{j{Ad}}B`}}}}{{{j{Ah}}{j{Ab}}{C`{{Al{Aj}}}}}{{Bb{{j{Ah}}B`}}}}{{{j{c}}{j{Ab}}C`}{{Bb{{j{c}}B`}}}l}{{BnBnd}b}{{{j{h}}}b}{{{j{h}}Eb}b}{{{j{c}}Lj}bD`}{{{j{c}}Ib}bD`}{{BnIb}b}{{{j{h}}Fn}{{j{h}}}}{{{j{c}}Fn}{{j{c}}}l}{{{j{Bl}}Fn}{{j{Bl}}}}{{{j{Ah}}Fn}{{j{Ah}}}}{{{j{Ab}}Fn}{{j{Ab}}}}{{{j{{Bf{c}}}}Fn}{{j{{Bf{c}}}}}Bj}{{{j{Ad}}Fn}{{j{Ad}}}}{{{j{Ej}}Fn}{{j{Ej}}}}{{{j{c}}FnC`}{{j{c}}}l}{{{j{h}}Fn{C`{An}}}{{j{h}}}}{{{j{Ad}}Fn{C`{Af}}}{{j{Ad}}}}{{{j{Ab}}Fn{C`{d}}}{{j{Ab}}}}{{{j{Bl}}Fn{C`{An}}}{{j{Bl}}}}{{{j{Ej}}Fn{C`{{Al{Aj}}}}}{{j{Ej}}}}{{{j{Ah}}Fn{C`{{Al{Aj}}}}}{{j{Ah}}}}{{{j{{Bf{c}}}}Fn{C`{{Bf{c}}}}}{{j{{Bf{c}}}}}Bj}{{{j{c}}}bD`}{{{j{c}}FnFd}{{j{c}}}D`}{{{j{Ej}}d}{{j{Ej}}}}{{{j{Ad}}d}{{j{Ad}}}}{{{j{c}}d}{{j{c}}}l}{{{j{Ab}}d}{{j{Ab}}}}{{{j{Ah}}d}{{j{Ah}}}}{{{j{Ad}}Ef}{{j{Ad}}}}{{{j{c}}Ef}{{j{c}}}l}{{{j{Ej}}Ef}{{j{Ej}}}}{{{j{Ab}}Ef}{{j{Ab}}}}{{{j{Ah}}Ef}{{j{Ah}}}}{{{j{c}}Aj}{{C`{Kj}}}l}{{{j{c}}Aj}AnEn}{{{j{Dn}}Aj}An}{{{j{E`}}Aj}An}{{{j{c}}e}{}l{nA`}}{{{j{c}}{j{c}}}{}l}10{{BnBn}Bn}{{BnBn}b}{{{j{c}}An}{{Bb{AnB`}}}Bd}{{{j{Ab}}}{{C`{Lj}}}}{{{j{c}}}C`l}{{{j{Ab}}}An}{{{j{c}}}Anl}{{{j{Ad}}}An}{{{j{Ah}}}An}8{{{j{c}}{C`{Fd}}}{{j{c}}}D`}{{{j{c}}e}{{Bb{{j{c}}B`}}}D`{{Gn{{Al{Lj}}}}Mn}}{{{j{c}}{j{Eh}}}{{Bb{{j{c}}B`}}}D`}{{{j{c}}{Al{N`}}Ib}{{j{c}}}D`}{{{j{c}}{Al{N`}}}{{j{c}}}D`}{{{j{c}}e}{{j{c}}}D`{{Gn{{Al{Lj}}}}Mn}}{{{j{c}}{j{Eh}}}{{j{c}}}{D`Nb}}{{{j{Ah}}{j{Eh}}}{{j{Ah}}}}{{{j{Ad}}{j{Eh}}}{{j{Ad}}}}`{{{j{c}}dNd}{{Fj{{Fj{Nf}}}}}D`}{{{j{c}}}{{j{c}}}Jn}{{{j{Ad}}Fd}{{Bb{AnB`}}}}{{{j{h}}Eb}b}{{{j{Bl}}Eb}b}{{{j{c}}}{{Bb{{Nn{Nh{Nl{{Nj{Fd}}}}}}B`}}}l}{{{j{h}}}{{Bb{{Nn{O`{Nl{{Nj{Fd}}}}}}B`}}}}{ce{}{}}0{{{j{Ah}}}{{j{Ad}}}}{{{j{c}}}{{Fj{C`}}}l}{{{j{c}}}{{Ob{Fj{Fj{C`}}}}}l}{{BnBn}b}{{{j{c}}{j{c}}}{}l}0{{{j{c}}}{}l}000{{{j{h}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{Bl}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{h}}e}{{Bb{{j{g}}B`}}}{}{{Dl{{C`{Dj}}}{{Db{{Bb{{C`{c}}B`}}}}}}Df}D`}{{{j{Bl}}c}{{Bb{{j{Bl}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{Bl}}c}{{Bb{{j{h}}B`}}}{{Dl{Dj}{{Db{{Bb{AnB`}}}}}}}}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}Df}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{c{{Bb{e}}}{}{}}00{{Afg}{{Bb{{j{i}}e}}}Cd{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{{D`{}{{Gj{c}}}}D`}}111{{{j{h}}{j{c}}e}{{Bb{{j{h}}B`}}}D`{{Dl{{C`{Dj}}C`}{{Db{{Bb{{C`{An}}B`}}}}}}}}{cOd{}}00{{BnBn}Bn}{{{j{Ad}}}{{Bb{{j{Ad}}B`}}}}{{{j{Ab}}}{{Bb{{j{Ab}}B`}}}}{{{j{Ah}}}{{Bb{{j{Ah}}B`}}}}{{{j{c}}}{{Bb{{j{c}}B`}}}l}{{{j{{Bf{c}}}}}{{Bb{{j{{Bf{c}}}}B`}}}Bj}{{{j{c}}An}{{Bb{{j{c}}B`}}}D`}{{{j{c}}}bD`}`{{{j{c}}Fd}{}D`}{{{j{c}}Aj}{{C`{Kj}}}l}{{{j{E`}}Aj}An}{{{j{Dn}}Aj}An}{{{j{c}}Aj}AnEn}{{{j{Ih}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Jd}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Eh}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Kn}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{E`}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Lf}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{{Bf{c}}}}Nd{Fj{If}}}{{Bb{bB`}}}Bj}{{{j{In}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Dn}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ad}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Lb}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{L`}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ej}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ah}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ab}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ln}}Nd{Fj{If}}}{{Bb{bB`}}}}{{{j{Ad}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Dn}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Kn}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Eh}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Lf}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Ln}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Lb}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{{Bf{c}}}}Nd{Al{If}}}{{Bb{bB`}}}Bj}{{{j{Jd}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{In}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Ah}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{E`}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Ej}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Ab}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{Ih}}Nd{Al{If}}}{{Bb{bB`}}}}{{{j{L`}}Nd{Al{If}}}{{Bb{bB`}}}}{ce{}{}}00{{{j{Bl}}}Fd}{{Afc}{{j{e}}}Cd{{D`{}{{Gj{c}}}}D`}}{{{j{c}}{Fj{{Cf{Cd}}}}}{{j{c}}}D`}{{{j{c}}Af}{{j{c}}}D`}{{{Al{Of}}e}c{}{{Oh{{j{Eh}}}{{Db{c}}}}}}{{{j{c}}Ib}{{j{c}}}D`}{{{j{c}}}{}l}0{{{j{c}}{j{c}}}{}l}011001111001111001111001111001111{{{j{h}}{j{c}}e}{{j{h}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{Bl}}{j{c}}e}{{j{Bl}}}D`{{Dl{{C`{Dj}}C`}{{Db{{C`{An}}}}}}}}{{{j{c}}{j{Ab}}{j{c}}}{{Bb{{j{c}}B`}}}D`}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````````````{{cf}b{}}000{{A@bCd}b}{A@bb}{A@db}{{A@fc}b{{Ch{}{{Cb{{C`{d}}}}}}Hl}}{{{A@h{c}}e}bl{{Ch{}{{Cb{C`}}}}Hl}}{{{A@h{c}}e}bl{{Ch{}{{Cb{}}}}Hl}}{A@jb}{A@lb}65{A@nb}{AA`b}{A@fb}{AAbb}{{{A@h{c}}}bl}{{{AAd{c}}}b{AAfMn}}{AAhb}{AAjb}{{{AAl{c}}}bl}{{A@b{C`{Cd}}}b}{{A@b{C`{An}}}{{Bb{bB`}}}}{{A@j{C`{An}}}{{Bb{bB`}}}}{{{A@h{c}}{C`{Al}}}bl}{{{AAd{c}}{C`{e}}}b{AAfMn}{{Gn{c}}}}{{A@l{C`{c}}}b{}}{{A@jAn}{{Bb{bB`}}}}{{A@bAn}{{Bb{bB`}}}}{{A@dAn}{{Bb{bB`}}}}{{A@nAn}{{Bb{bB`}}}}{{AA`An}{{Bb{bB`}}}}{{A@fAn}{{Bb{bB`}}}}{{AAbAn}{{Bb{bB`}}}}{{{A@h{c}}An}{{Bb{bB`}}}l}{{{A@h{c}}Al}bl}{{A@nc}b{{Ch{}{{Cb{{C`{Af}}}}}}Hl}}{{AA`c}b{{Ch{}{{Cb{{C`{{Al{Aj}}}}}}}}Hl}}{{A@lc}b{}}{{{AAd{c}}e}b{AAfMn}{{Gn{c}}}}{{AAhd}b}{{{AAl{c}}}bl}{{A@nc}b{{Ch{}{{Cb{Af}}}}}}{{AA`c}b{{Ch{}{{Cb{{Al{Aj}}}}}}}}{ce{}{}}000000000000000000000`{{{AAd{c}}}{{AAd{c}}}{AAfMn}}{AAhAAh}{AAjAAj}{{{AAl{c}}}{{AAl{c}}}{AAnl}}{{ce}b{}{}}000{{}A@b}{{}A@d}{Fdc{}}000000000000000000000{Fdb}0000000000{A@nd}{AA`d}{A@fd}{{{A@h{c}}}dl}{A@jd}{A@nMh}{AA`Mh}{A@fMh}{{{A@h{c}}}Mhl}{A@jMh}{A@l{{j{c}}}D`}{A@b{{j{h}}}}{A@d{{j{h}}}}{AAb{{j{h}}}}{A@j{{j{h}}}}{{{AAd{{Al{Aj}}}}}{{j{Ah}}}}{{{AAd{Af}}}{{j{Ad}}}}{AAh{{j{Ab}}}}{AAjAB`}{{{AAl{c}}}{{j{c}}}l}`{cc{}}0000000000{{Afe}ABb{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{Afe}ABb{}{{Ch{}{{Cb{c}}}}}}{{Af{Al{c}}}ABb{}}{{Af{Al{{C`{c}}}}}ABb{}}{{EbFdFdAf}{{Bb{{Cf{A@j}}B`}}}}{{}Fd}0000000000{A@n{{Cf{Cd}}}}{AA`{{Cf{Cd}}}}{A@f{{Cf{Cd}}}}{{{A@h{c}}}{{Cf{Cd}}}l}{A@j{{Cf{Cd}}}}{ce{}{}}0000000000`{{AfFd{C`{Eb}}}A@b}{{AfFd{C`{Eb}}}A@d}{{AfFdFd}A@n}{{AfFdFd}AA`}{{AfFdFd}A@f}{{AfFd}AAb}{{AfFdFdEb}{{A@h{c}}}l}{{AfFd}{{AAd{c}}}{AAfMn}}{{AfFd}AAh}{{AfFd}AAj}{{AfFd}{{AAl{c}}}l}{{AfFdFdEbEb}{{A@h{c}}}l}{A@lb}{AAhb}{AAjb}{{{AAl{c}}}bl}{ce{}{}}000{c{{Bb{e}}}{}{}}000000000000000000000{cOd{}}000000000022222222222````````{A@jb}{{A@j{C`{An}}}{{Bb{bB`}}}}{{A@jAn}{{Bb{bB`}}}}`{A@jd}{A@jMh}{A@j{{j{h}}}}{{EbFdFdAf}{{Bb{{Cf{A@j}}B`}}}}{A@j{{Cf{Cd}}}}``{{ABdAf}{{j{c}}}D`}{{ABf{j{c}}}{{j{c}}}D`}10{{ABfAfEb}{{j{c}}}D`}0{{ABdAf}{{Bb{{j{c}}e}}}D`{}}{{ABf{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABfAfEb}{{Bb{{j{c}}e}}}D`{}}0`{ABhABh}`````{ce{}{}}0000000{Fdc{}}0000000{Fdb}000{cc{}}000{{}Fd}00044444444{ABjABl}{{ABnEb}AC`}{ABlC`}{AC`C`}{ACbC`}{{{ACd{c}}}C`Ch}32{{{ACd{c}}}C`Fl}`{ABl{{Gb{Fd{C`{Fd}}}}}}{AC`{{Gb{Fd{C`{Fd}}}}}}{{{ACd{c}}}{{Gb{Fd{C`{Fd}}}}}Ch}{c{{Bb{e}}}{}{}}0000000{cOd{}}000{ce{}{}}000``````{{cf}b{}}{e{{ACf{c}}}Bj{{Gd{}{{Cb{c}}}}}}{e{{ACf{c}}}Bj{{Gd{}{{Cb{{C`{c}}}}}}}}{{AChe}g{}{{Gd{}{{Cb{c}}}}}{}}0{I`ACj}{{{ACf{c}}}ACjBj}066`{{{ACf{c}}}{{ACf{c}}}{AAnBj}}{{ce}b{}{}}{{{ACf{c}}}AChBj}{Fdc{}}0{Fdb}{{I`I`}d}0{{{ACf{c}}Gf}{{Bb{bGh}}}{AClBj}}{cc{}}{{FdACh}{{ACf{c}}}Bj}{{{ACf{c}}Fd}{{C`{c}}}Bj}{{}ACh}{{H`{ACf{c}}{ACf{c}}}{{ACf{c}}}Bj}{{AChH`}{{ACf{c}}}Bj}{{H`{ACf{c}}}{{ACf{c}}}Bj}0{{}Fd}{ce{}{}}{{{ACf{c}}}{}Bj}{{{ACf{c}}Fd}dBj}0{{cFd}d{}}{{{ACf{c}}}{{AD`{ACn}}}Bj}{{{ACf{c}}}{{AD`{c{Fb{c}}ACn}}}Bj}{{{ACf{c}}}FdBj}0`{{{ACf{c}}{C`{H`}}}bBj}{{{ACf{c}}FdFd}bBj}{{cFdFd}e{}{}}01{I`{{Cf{I`}}}}{{{ACf{c}}}{{Cf{Cd}}}Bj};{g{{Bb{{ACf{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}{g{{Bb{{ACf{c}}e}}}Bj{}{{Gd{}{{Cb{{Bb{{C`{c}}e}}}}}}}}{{AChg}{{Bb{ie}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}{}}0{c{{Bb{e}}}{}{}}0{cOd{}}{I`Af}{{}Af}{{{ACf{c}}}{{C`{H`}}}Bj}{{{ACf{c}}Fd}cBj}0{{{ACf{c}}Fd}{}Bj}{{{ACf{c}}}{{ADb{{Fj{c}}}}}Bj}{{{ACf{c}}}{{Fb{c}}}Bj}{{{ACf{c}}}{}Bj}{ce{}{}}{{{ACf{c}}{C`{H`}}}{{ACf{c}}}Bj}{{{ACf{c}}{C`{H`}}}{{Cf{Cd}}}Bj}1`{{{ADd{c}}}bBj}0{{{ADd{c}}{C`{c}}}bBj}{{{ADd{c}}c}bBj}{{{ADd{c}}ACj}bBj}{{{ADd{c}}ACj}{{Bb{bB`}}}Bj}77{{}{{ADd{c}}}Bj}{Fdc{}}0{Fdb}{{{ADd{c}}}{{j{{Bf{c}}}}}Bj}{cc{}}{{}Fd}={{AfFd}{{ADd{c}}}Bj}{{{ADd{c}}}AnBj}{c{{Bb{e}}}{}{}}0{cOd{}}{ce{}{}}````{ADfb}{{ADf{C`{ACj}}}b}{{ADfACj}b}33`<<;{{ADhGf}{{Bb{bGh}}}}:{{AfFd}{{Cf{ADf}}}}{{}{{ADb{Dd}}}}{{}ACh}<7{{}d}`{{{Cf{Dd}}{ADb{Dd}}ACh}b}{ADfAn}<<;:``````````````````````````````````````````````{{cf}b{}}00{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{ADnDd}ADn}{{ADnDd}{{j{c}}}D`}{{{ADl{}{{ADj{c}}}}i{Al{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{AE`Ef}{{j{Eh}}}}{{AE`{Al{An}}El}{{Bb{{j{Eh}}B`}}}}{AEb{{Bb{{j{Eh}}B`}}}}`{ce{}{}}00000{{AEdEb}{{Bb{AnB`}}}}0{EfEf}{ElEl}{AEfAEf}{{ce}b{}{}}00{{}Ef}{{}El}{Fdc{}}00000``{Fdb}00{{EfEf}d}{{ElEl}d}{{AEfAEf}d}{{{AEh{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000{AEj{{Bb{AnB`}}}}{AEj{{Bb{{Gb{An{G`{Fn}}}}B`}}}}`{{AElc}{{Bb{AElB`}}}{}}{{AEn{j{Ab}}}{{Bb{{j{c}}B`}}}D`}`{{EfGf}{{Bb{bGh}}}}{{ElGf}{{Bb{bGh}}}}{{AEfGf}{{Bb{bGh}}}}{ElEf}{cc{}}{EfEl}11`{{AfcFd}AF`{}}{{AfFd}AFb}`{{AFdFd}{{Bb{HnB`}}}}{{AFdFd}Hn}??{{Efc}bAFf}{{Elc}bAFf}{{AEfc}bAFf}{{}Fd}00{ce{}{}}00{AFh{{Bb{{j{Ab}}B`}}}}{AFj{{Bb{{j{Ab}}B`}}}}{{{AEh{}{{Cb{c}}}}e}c{}{}}0``{AFl{{C`{c}}}{}}{AFl{{C`{Kj}}}}{AFn{{C`{c}}}{}}2{AFl{{C`{{Gb{cc}}}}}{}}``{AEb{{Bb{FdB`}}}}{{}Ef}{{}El}{{AG`FdFd}{{j{c}}}D`}88``{AEj{{Bb{{G`{Fn}}B`}}}}{{AFnKjMf}{{Bb{{C`{c}}B`}}}{}}{AGbAn}0{AGdAGd}{{AGfDdMj}{{Bb{AnB`}}}}{{AGhc{C`{e}}}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lj}}}}}{}}{{AGhci}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lj}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}`{{AGh{j{Ab}}{C`{c}}}{{Bb{AGhB`}}}{}}{{AGjFn}{{j{c}}}D`}{{AGlFnc}{{j{e}}}{}D`}{{AGnFdFd}AGn}0`{{AE`d}{{j{c}}}D`}{{AE`Ef}{{j{c}}}D`}{{AH`Aj}{{C`{Kj}}}}{AFl{{C`{c}}}{}}{{AHbc}{{Bb{AHbB`}}}Mn}{{AHdc}AHdMn}{AHf{{Fj{{Al{Aj}}}}}}{ce{}{}}00{c{{Bb{e}}}{}{}}00000{cOd{}}00{AEb{{Bb{{j{c}}B`}}}D`}8333{{Efd}Ef}{{Eld}El}101010{{Elc}El{{Gd{}{{Cb{d}}}}}}{ElEl}`{{AHh{j{Ab}}{j{c}}}{{Bb{{j{c}}B`}}}D`}``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AHj{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAf}{{j{k}}}D`D`{CdAHl}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAf}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AHn{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAf}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AI`{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAHl}AI`{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AIb{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIbD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAHl}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}}Fdl}0{{IbIb}Ib}{{{j{Eh}}Lj}{{Bb{bB`}}}}{{{AId{Lj}}Lj}{{Bb{bB`}}}}````{{cf}b{}}{{AIfcd}LjAHl}{ce{}{}}0{AIfAIf}{{ce}b{}{}}{{}AIf}{Fdc{}}0{Fdb}{{AIfAIf}d}{{ce}d{}{}}00{{AIfGf}{{Bb{bGh}}}}{cc{}}{{AIfc}bAFf}{{}Fd};{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}<{c{{Bb{e}}}{}{}}0{cOd{}}>`{{Fd{Fj{d}}}b}```{{AGnFdFd}AGn}0{{Fd{Al{An}}El}{{Bb{{AIh{{j{Eh}}}}B`}}}}{{{Al{An}}{Al{d}}d}{{Bb{AIjB`}}}}{{Af{Al{An}}{Al{d}}d}{{Bb{{j{Ej}}B`}}}}{{Af{Al{An}}}{{Bb{{j{Ej}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Al{An}}}{{Bb{AIjB`}}}}{{{Al{An}}}{{Bb{{j{Ej}}B`}}}}0```````````77`{AIlFn}00{Af{{Bb{EdB`}}}}{Af{{Bb{AInB`}}}}{AJ`Fn}333```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}00000000000000000000000000000000{{AJbc}AJb{{Dl{An}{{Db{An}}}}}}{AJdd}{Hn{{`{{Ch{}{{Cb{Hn}}}}}}}}{{Hn{Fj{Hn}}}b}{{{Il{JfJd}}{Il{JfJd}}}}{{HnHn}Hn}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{j{Ad}}An}{{Bb{AnB`}}}}{{{j{Ah}}An}{{Bb{AnB`}}}}{{{j{Ab}}An}{{Bb{AnB`}}}}{{AJbBh}An}{{AJf{C`{Af}}}b}{{AJdAJd}{{Bb{bB`}}}}{AJfb}{{AJfAf}b}{{AJdEf}{{j{Eh}}}}{eAJh{}{{Gd{}{{Cb{c}}}}}}0{{AChe}AJj{}{{Gd{}{{Cb{c}}}}}}0{HnHn}{{{Il{IjIh}}}{{`{Hl}}}}{{{Il{JbIn}}}{{`{Hl}}}}{EbEb}{MhEb}{AJlEb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{{Al{c}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Il{JlIn}}}{{`{Hl}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{Eb{{Cf{Eb}}}}{{{AKh{Af}}}AKj}{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKnEb}{{Bb{AnB`}}}}{{{Il{JbIn}}Eb}{{Bb{AnB`}}}}{{{Il{JhIn}}Eb}{{Bb{AnB`}}}}{{{Il{JfJd}}Eb}{{Bb{AnB`}}}}{{{Il{IjIh}}Eb}{{Bb{AnB`}}}}{{{Il{JlIn}}Eb}{{Bb{AnB`}}}}{{AJdEb}{{Bb{AnB`}}}}{{AJbEb}{{Bb{AnB`}}}}{{HnEb}Hn}{{{Il{JhIn}}J`}{{Il{JhIn}}}}{{{Il{JbIn}}J`}{{Il{JbIn}}}}`{{{j{c}}An}{{Bb{AnB`}}}{}}00000000{{{j{Dn}}An}{{Bb{AnB`}}}}{{{j{E`}}An}{{Bb{AnB`}}}}{AJb{{Fj{{Cf{Cd}}}}}}{{{Il{ce}}}{{Il{ce}}}D`D`}{AL`AL`}{AKjAKj}{AJdAJd}{AJbAJb}{ALbALb}{HnHn}{ALdALd}{EbEb}{MhMh}{J`J`}{KnKn}{LfLf}{EhEh}{L`L`}{LnLn}{LbLb}{IhIh}{InIn}{DnDn}{E`E`}{IjIj}{JlJl}{AdAd}{AhAh}{EjEj}{AbAb}{JfJf}{JbJb}{JhJh}{ALfALf}{AChACh}{ALhALh}{{ce}b{}{}}00000000000000000000000000000000{{MhEb}b}{ALje{}{{AJh{c}}AHl}}0{{ALjACh}e{}{{AJj{c}}AHl}}0{Ebd}00{{{AKh{Af}}}Eb}{MhEb}{{{Il{JhIn}}}{{j{In}}}}{{}ALl}{{}AL`}{{}AKj}{{}Hn}{{}ALd}{{}Eb}{{}ACh}{Fdc{}}00{{{Il{ce}}}{}D`D`}1111111111111111111111111111111111111111110111111111111111111111111111111111111111{{{Il{JfJd}}{Il{JfJd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJfc}AJd{{Gd{}{{Cb{{C`{Af}}}}}}}}{Fdb}0000000000000{AJbb}1111111111111111111111111111{AKnEb}{{{Il{JhIn}}}Eb}{{{Il{JfJd}}}Eb}{{{Il{JlIn}}}Eb}{{{Il{JbIn}}}Eb}{{{Il{IjIh}}}Eb}{AJdEb}{AJbEb}{HnEb}`{{AL`AL`}d}{{HnHn}d}{{ALdALd}d}{{EbEb}d}{{EbACh}d}{{MhMh}d}{{J`J`}d}{{AChACh}d}{{ALhALh}d}{{HnHnd}d}{{AJd{j{Ad}}}}{{AJdAJd}}{{AJdAf}}{{AJbAJb}{{j{Ab}}}}3210{{ce}d{}{}}00000000000000000000{{{Il{ce}}}MhD`D`}{{AJbAf}{{Bb{AnB`}}}}{AJb{{Al{An}}}}{AJb{{Fj{An}}}}{{AKjAf}{{C`{Lj}}}}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{AJfAJd}{ALl{{ADb{AKj}}}}{{AL`Gf}{{Bb{bGh}}}}{{AKjGf}{{Bb{bGh}}}}{{ALbGf}{{Bb{bGh}}}}{{HnGf}{{Bb{bGh}}}}0{{ALdGf}{{Bb{bGh}}}}{{EbGf}{{Bb{bGh}}}}0{{MhGf}{{Bb{bGh}}}}{{J`Gf}{{Bb{bGh}}}}0{{AChGf}{{Bb{bGh}}}}{{ALhGf}{{Bb{bGh}}}}{cc{}}0{{{j{Ih}}}{{Il{IjIh}}}}1{{{j{In}}}{{Il{JlIn}}}}222222222222{cHnALn}{{{C`{c}}}Hn{{AM`{Hn}}}}44{HnEb}5{AChEb}16{AMbMh}{HnMh}8{ALhJ`}99999999999999999999{AMdACh}{AMfACh};;{{AChd}Eb}{{{j{Eh}}{ADb{AKj}}dAL`}AJd}{{AfcJ`}{{Il{JhIn}}}{{Gd{}{{Cb{AMh}}}}}}{{AfcJ`}{{Il{JhIn}}}{{Gd{}{{Cb{{C`{AMh}}}}}}}}{{{j{Eh}}AL`}AJd}{{Afc}{{Il{IjIh}}}{{Gd{}{{Cb{AMj}}}}}}{{Afc}{{Il{IjIh}}}{{Gd{}{{Cb{{C`{AMj}}}}}}}}{{AfcJ`}{{Il{JbIn}}}{{Gd{}{{Cb{AIl}}}}}}{{AfcJ`}{{Il{JbIn}}}{{Gd{}{{Cb{{C`{AIl}}}}}}}}{{Afc}{{Il{JlIn}}}{{Gd{}{{Cb{AJ`}}}}}}{{Afc}{{Il{JlIn}}}{{Gd{}{{Cb{{C`{AJ`}}}}}}}}{{{AMn{AMl}}Eb}Mh}{{{j{Ad}}{AKh{Af}}AL`}{{Bb{AJdB`}}}}{{{Fj{c}}ACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Fj{c}}ACh}{{AHl{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}AAn{{Fl{}{{Cb{e}}}}HlHhHj}}{{FdcACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{FdACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AfdFdAL`}AJd}{{AfFd}AJb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AKjLj}Af}{{{Il{JbIn}}Fd}{{Bb{HnB`}}}}{{{Il{IjIh}}Fd}{{Bb{HnB`}}}}{{{Il{JhIn}}Fd}{{Bb{HnB`}}}}{{{Il{JfJd}}Fd}{{Bb{HnB`}}}}{{{Il{JlIn}}Fd}{{Bb{HnB`}}}}{{AKnFd}{{Bb{HnB`}}}}{{AJdFd}{{Bb{HnB`}}}}{{AJbFd}{{Bb{HnB`}}}}{{{Il{JhIn}}Fd}Hn}{{{Il{JfJd}}Fd}Hn}{{{Il{JbIn}}Fd}Hn}{{{Il{JlIn}}Fd}Hn}{{{Il{IjIh}}Fd}Hn}{{AKnFd}Hn}{{AJdFd}Hn}{{AJbFd}Hn}{AKj{{AKh{Af}}}}{{}Eb}000000000000000000000000{{AKjLj}{{C`{Af}}}}{AJd{{ADb{AKj}}}}{Hn{{C`{Af}}}}{{AN`Fd}Hn}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AJd{j{Ad}}}}{{AJdAJd}}{{AJdAf}}{{AJbAJb}{{j{Ab}}}}1320{{Hnc}bAFf}{{ALdc}bAFf}{{Ebc}bAFf}{{J`c}bAFf}{{AChc}bAFf}{{ALhc}bAFf}{{Hncd}bAFf}{{{Il{JlIn}}}{{j{Ln}}}}{{{Il{JhIn}}}{{j{In}}}}{{}Fd}00000000000000000000000000000000000000000{Eb{{C`{Eb}}}}{ACh{{C`{ACh}}}}{ce{}{}}000000000000000000000000000000000000000000{AJb}{{{Il{JlIn}}}An}{{{Il{JhIn}}}An}{{{Il{JfJd}}}An}{{{Il{JbIn}}}An}{{{Il{IjIh}}}An}{AJdAn}{AJbAn}{Hn{{Bb{HnB`}}}}{Ebd}00{Hnd}11{AJdd}{AJbd}1323{AKjd}34440443434344443444434{AChd}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{AD`{cgACn}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{AJbACb}{AJdANb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{AKjFd}{AJdFd}{AJbFd}{{AJdAf}}{{AJdAJd}}{{AJd{j{Ad}}}}{{AJbAJb}{{j{Ab}}}}1320{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{dB`}}}}{AJdAn}{{EbEb}{{Bb{EbB`}}}}{{ALl{ADb{AKj}}}{{Bb{bB`}}}}{{{Il{JhIn}}}{{j{In}}}}03{{{Il{JlIn}}}{{j{Ln}}}}1{{{Il{IjIh}}{C`{AIn}}}{{Bb{{Il{IjIh}}B`}}}}{{{Il{JbIn}}{C`{AIn}}}{{Bb{{Il{JbIn}}B`}}}}10{{{Il{JfJd}}{Il{JfJd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{AJd{{Bb{FdB`}}}}{AJdAf}{AJb{{AMn{AMl}}}}{Mh{{AMn{AMl}}}}`{{{Il{JlIn}}}{{j{Ih}}}}:{{}c{}}0{{AfFdAL`}AJf}{{Afc}{{Il{JlIn}}}{{Gn{{Al{AJ`}}}}}}{{Afc}{{Il{JlIn}}}{{Gn{{Al{{C`{AJ`}}}}}}}}{{Afc}{{Il{IjIh}}}{{Gn{{Al{AMj}}}}}}{{Afc}{{Il{JbIn}}}{{Gn{{Al{{C`{AIl}}}}}}}}{{Afc}{{Il{JbIn}}}{{Gn{{Al{AIl}}}}}}{{Afc}{{Il{IjIh}}}{{Gn{{Al{{C`{AMj}}}}}}}}{{Afc}{{Il{JhIn}}}{{Gn{{Al{{C`{AMh}}}}}}}}{{Afc}{{Il{JhIn}}}{{Gn{{Al{AMh}}}}}}{{{ADb{AKj}}}ALl}{{Af{Al{An}}}{{Bb{AJbB`}}}}{{AfEb}Mh}{ANbC`}{{AJdAf}}{{AJdAJd}}{{AJd{j{Ad}}}}{{AJbAJb}{{j{Ab}}}}1320{AJdFd}{AJbFd}{{Af{Al{Af}}Af}{{Il{IjIh}}}}{{Af{Al{Af}}Af}{{Il{JlIn}}}}{{HnHn}{{C`{ANd}}}}{{J`J`}{{C`{ANd}}}}{AJd{{j{Eh}}}}{{{Il{JfJd}}}{{C`{Fd}}}}{AJbb}{AJbMh}{{AJfAf}{{Gb{Ljd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{AJbAf}b}{{{Il{JbIn}}ANfANf{C`{AIn}}}{{Bb{{Il{JbIn}}B`}}}}{{{Il{IjIh}}ANfANf{C`{AIn}}}{{Bb{{Il{IjIh}}B`}}}}{AJb{{Bb{{j{Ej}}B`}}}}{{AKjAKj}d}{{{Il{JfJd}}}Fd}{{{Il{JlIn}}}{{j{Ln}}}}{{{Il{JhIn}}}{{j{In}}}}{{Mh{AMn{AMl}}}b}{{{Il{JbIn}}J`}b}{{{Il{JhIn}}J`}b}{{{Il{JbIn}}Ed}{{Bb{bB`}}}}{ANb{{Gb{Fd{C`{Fd}}}}}}{{AJdd}AJd}{{AJdEf}AJd}{{{Il{JbIn}}Af}{{Bb{{j{Ad}}B`}}}}{{{Il{IjIh}}Af}{{j{Ad}}}}{{{Il{JlIn}}Af}{{j{Ad}}}}{{HnEb}{{Bb{HnB`}}}}{{{Il{JfJd}}{Il{JfJd}}}}{{{j{c}}An}{{Bb{AnB`}}}{}}0000000000{{{Il{JhIn}}}J`}{{{Il{JbIn}}}J`}{{{Il{JbIn}}}{{C`{Ed}}}}{{AJddd}{{Cf{Cd}}}}{{Ebd}ACh}{{Mhd}AMb}{J`ALh}{{EbAfd}AMb}{J`Af}{{AJd{AKh{Af}}ANh}AJd}{AJd{{Bb{AJdB`}}}}{AJdAJd}{AChACh}{ce{}{}}00000000000000000000000000000000{EbEb}{AChANj}{{{Il{JbIn}}Af}{{Bb{{j{Ad}}B`}}}}{{{Il{IjIh}}Af}{{j{Ad}}}}{{{Il{JlIn}}Af}{{j{Ad}}}}{cEd{}}00{AJbFd}{{{Il{JbIn}}{C`{AIn}}{j{Ad}}Af}{{Bb{{Il{JbIn}}B`}}}}{{{Il{IjIh}}{C`{AIn}}{j{Ad}}Af}{{Bb{{Il{IjIh}}B`}}}}{g{{Bb{AJhe}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{AChg}{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALj{{Bb{eg}}}{}{{AJh{c}}AHl}{}}0{{ALjACh}{{Bb{eg}}}{}{{AJj{c}}AHl}{}}0{Hn{{Bb{cB`}}}Kh}{c{{Bb{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{{Ebd}{{Bb{AChB`}}}}{cOd{}}00000000000000000000000000000000000000000{AChACh}{AJd{{Bb{AJdB`}}}}{AJbANl}{AJdd}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}cAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{AJd{{Bb{ANlB`}}}}1{{EbHn}d}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}gAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{ce{}{}}00000000000000000000000000000000000000000{Fdc{}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{C`{H`}}}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}```````````{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}`````````66{{}ANn}66{{}b}{Fdb}{ANnb}2{cc{}}4{{}Fd}<{c{{Bb{e}}}{}{}}0{cOd{}}{{}d}?`````````````````````````{AO`Af}{ce{}{}}00000`{{B`AO`}B`}{B`B`}{Fdc{}}{AO`}11111<<<`{{AObGf}{{Bb{bGh}}}}{{AO`Gf}{{Bb{bGh}}}}0{{B`Gf}{{Bb{bGh}}}}0=={cAO`{{AM`{{Dh{Af}}}}}}>{AOdB`}{AOfB`}{AOhB`}{AOjB`}{AOlB`}{AOnB`}{{}{{Ff{AfAOb}{{Db{b}}}}}}{{}Fd}00{ce{}{}}00{cB`AI`}````{{{Ff{AfAOb}{{Db{b}}}}}b}{cB`B@`}{cEd{}}0{c{{Bb{e}}}{}{}}00000{cOd{}}00666```````````````````{{cf}b{}}00{{ANl{Fj{An}}B@b}{{Bb{bB`}}}}{{ANlDd}{{Fj{An}}}}0{{ANl{j{Ab}}}{{Bb{ANlB`}}}}{{ANl{Al{{AMn{AMl}}}}}{{Bb{ANlB`}}}}0{{ANlFnFd}ANl}{ANlANl}0{{ANlAfe}{{Bb{ANlB`}}}B@d{{Oh{An}{{Db{c}}}}}}{{ANlFde}{{Bb{ANlB`}}}B@d{{Oh{An}{{Db{c}}}}}}22??????????2{B@fB@f}{B@hB@h}4{{ce}b{}{}}00{{ANlAf}{{Bb{AnB`}}}}{{ANle}{{Bb{{Fj{An}}B`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{}B@h}{{}ANl}{Fdc{}}000000000{Fdb}0000{{ANlAf}{{Bb{ANlB`}}}}6{{ANl{Al{c}}}ANl{{Gn{Af}}}}{{ANl{B@j{AfNd}}}ANl}{{ANl{C`{{Al{c}}}}}{{Bb{ANlB`}}}{{Gn{Af}}}}{ANl{{Fj{Eb}}}}7{{B@hB@h}d}{{ANlANl}d}00{{ce}d{}{}}00{ANlFd}`{{ANle}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{ANl{Fj{An}}}{{Bb{ANlB`}}}}{{ANlANl}{{Bb{bB`}}}}{ANl{{Fj{Mh}}}}{{ANlAEf}{{Bb{ANlB`}}}}{{ANl{j{Ab}}}{{Bb{ANlB`}}}}{{B@fGf}{{Bb{bGh}}}}{{B@hGf}{{Bb{bGh}}}}{{ANlGf}{{Bb{bGh}}}}0{cc{}}000{AJbANl}1{B@bANl}{B@lANl}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cANl{{Gd{}{{Cb{An}}}}}}{{{Al{B@n}}}{{Bb{ANlB`}}}}{{{Al{B@n}}B@b}{{Bb{ANlB`}}}}{{cB@b}{{Bb{ANlB`}}}{{Ch{}{{Cb{B@n}}}}}}{{ANlFd}{{C`{{Fj{Hn}}}}}}{{ANlAf}{{C`{Fd}}}}{ANl{{Fj{Af}}}}{ANl{{Fj{{AMn{AMl}}}}}}{ANl{{Al{An}}}}{ANl{{Fj{An}}}}{{ANlFd}{{Bb{B@nB`}}}}{{ANlFdB@n}{{Bb{bB`}}}}{{ANlFdB@n}b}{ANl{{C`{{Bb{EbB`}}}}}}`{{ANle}{{Bb{BA`B`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{ANl{Fj{An}}BAb}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}1{{ANl{Fj{An}}dd}{{Bb{BA`B`}}}}{{B@hc}bAFf}{{ANl{C`{Fd}}}ANl}{ANlFd}{{ANl{Al{An}}}{{Bb{ANlB`}}}}0{{ANl{Al{An}}}ANl}{{ANlBAd}}{{ANlFd}}{{ANl{BAf{Fd}}}}{{ANl{BAh{Fd}}}}{{ANl{BAj{Fd}}}}{{ANl{Kl{Fd}}}}{{ANlAf}}{{ANl{BAl{Fd}}}}{{}Fd}0000{{ANlFdc}{{Bb{ANlB`}}}B@d}{ce{}{}}000000{{ANlAf}AJb}{ANl{{Bb{{j{Ab}}B`}}}}{ANld}1{ANl{{Fb{An}}}}{{ANld}BAn}{ANlBB`}{ANlBBb}{ANl{{Bb{{C`{An}}B`}}}}{{ANlB@f}{{Bb{{C`{An}}B`}}}}{{ANlce}{{Bb{ANlB`}}}{{BBd{{AMn{AMl}}}}}{{BBd{{AMn{AMl}}}}}}{{ANlBBf}{{Bb{ANlB`}}}}3{ANlFd}{{{Fj{c}}}{{Bb{ANlB`}}}B@d}{{{Fj{An}}}ANl}{{{Fj{An}}}{{Bb{ANlB`}}}}{BAnC`}{BB`C`}{ANlANl}{{ANle}{{Bb{cB`}}}{}{{Dd{ANl}{{Db{{Bb{cB`}}}}}}}}0{{ANlgc}{{Bb{eB`}}}{}{}{{Dd{ANlc}{{Db{{Bb{eB`}}}}}}}}{ANl{{C`{An}}}}{{ANlANl}d}{{ANlAfAf}{{Bb{ANlB`}}}}{{ANlAfc}{{Bb{ANlB`}}}B@d}{{ANlFdc}{{Bb{ANlB`}}}B@d}17{{ANl{Fj{An}}BBh}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}`{{ANlAndd{C`{If}}}{{Bb{ANlB`}}}}0{{ANlFddd{C`{If}}}{{Bb{ANlB`}}}}{ANlB@b}{{ANlANl}{{Bb{bB`}}}}{{ANle}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{ANlFd}{{C`{An}}}}{{ANlc}{{Bb{ANlB`}}}{{BBj{Fd}}}}2{{ANlc}{{Bb{{Fj{An}}B`}}}{{BBd{{AMn{AMl}}}}}}{{ANle{ADb{B@b}}}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{ANleB@b}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{ANl{Al{c}}}{{Bb{bB`}}}{{Gn{Af}}}}{ANl{{Gb{FdFd}}}}{{ANlFn}ANl}{ANld}{ANlb}{BAn{{Gb{Fd{C`{Fd}}}}}}{BB`{{Gb{Fd{C`{Fd}}}}}}{{ANlFnFd}ANl}0{{ANlcEl}{{Bb{ANlB`}}}{{BBd{{AMn{AMl}}}}}}0{ANl{{`{{Ch{}{{Cb{ANl}}}}}}}}{{ANlFdd}{{Fj{ANl}}}}{{ANlB@f}{{Bb{{C`{An}}B`}}}}{{ANl{C`{Fd}}}ANl}{{ANl{j{Eh}}}{{Bb{ANlB`}}}}{{ANl{j{Eh}}}ANl}{{ANl{j{Eh}}d}ANl}{ANlANl}{{ANlBBl}{{Bb{{Nn{O`{Nl{{Nj{Fd}}}}}}B`}}}}{ce{}{}}00{cEd{}}{{ANlFdcEl}{{Bb{ANlB`}}}{{BBd{{AMn{AMl}}}}}}{{ANl{C`{Af}}{C`{{Ob{Ed{Fj{Ed}}}}}}}{{Bb{ANlB`}}}}{{ANlAfe}{{Bb{ANlB`}}}B@d{{Oh{An}{{Db{{Bb{cB`}}}}}}}}{{ANlFde}{{Bb{ANlB`}}}B@d{{Oh{An}{{Db{{Bb{cB`}}}}}}}}{c{{Bb{e}}}{}{}}000{BBn{{Bb{ANlB`}}}}1{{{Gb{{BC`{{Cf{Cd}}}}{Al{AMb}}}}}{{Bb{ANlB`}}}}{{cB@b}{{Bb{ANlB`}}}{{Ch{}{{Cb{{Bb{B@nB`}}}}}}}}{{ANlAf}{{Bb{FdB`}}}}44444{cOd{}}0000{{ANl{C`{{Al{Ed}}}}B@h{C`{{Gb{FnFd}}}}}{{Bb{ANlB`}}}}{{ANld{C`{{Al{Ed}}}}B@h{C`{{Gb{FnFd}}}}}{{Bb{ANlB`}}}}1{{ANlc}{{Bb{ANlB`}}}{{BBd{Ed}}}}{{ANlcAfANfANf}{{Bb{ANlB`}}}{{BBd{Ed}}}}0{{ANlANl}{{Bb{ANlB`}}}}0{ce{}{}}0000{ANlFd}{{ANlc}{{Bb{ANlB`}}}B@d}{{ANlcB@b}{{Bb{ANlB`}}}B@d}{{ANlAn}ANl}{{ANlAf{C`{Lj}}}{{Bb{ANlB`}}}}{{ANlAf{C`{Lj}}}ANl}`{{cf}b{}}77{BBfBBf}{{ce}b{}{}}{{}BBf}{Fdc{}}0{Fdb}{{BBfBBf}d}{{ce}d{}{}}00{{BBfGf}{{Bb{bGh}}}}{cc{}}{{BBfc}bAFf}`{{}Fd}{ce{}{}}`0{c{{Bb{e}}}{}{}}0{cOd{}}```2````````````````````````````````>>>>{BA`{{Bb{ANlB`}}}}`{BCb{{Al{{BCd{Lj}}}}}}{{BA`c}{{Bb{ANlB`}}}{{Dl{ANl}{{Db{{Bb{ANlB`}}}}}}HhHj}}{Bh{{j{h}}}}6666666666666666{BCbBCb}{BhBh}{BA`BA`}{BCfBCf}{{ce}b{}{}}0008{{}BCb}{{}Bh}{Fdc{}}00{BCh}1111111111111`{{BCjc}{}BCl}{Fdb}000{BCbb}1111{{BCbBCb}d}{{BhBh}d}{{ce}d{}{}}00000`{BCnLj}{BCb{{Al{Lj}}}}{BA`{{Bb{ANlB`}}}}{BCb{{Fj{Lj}}}}{{BCbGf}{{Bb{bGh}}}}{{BhGf}{{Bb{bGh}}}}{{BA`Gf}{{Bb{bGh}}}}{{BCfGf}{{Bb{bGh}}}}0{{AfBCf}Ed}{cc{}}000{{{Fj{{Gb{Lj{BCd{Lj}}}}}}}BCb}{{{Fj{{Gb{{Fj{Lj}}{Fj{{BCd{Lj}}}}}}}}}BCb}{{{Fj{{Fj{{Gb{Lj{BCd{Lj}}}}}}}}}BCb}3{BCbBh}444{BD`BCf}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cBCb{{Gd{}{{Cb{{Gb{Lj{BCd{Lj}}}}}}}}}}{cBCb{{Hf{}{{Cb{{Gb{Lj{BCd{Lj}}}}}}}}}}{{BhFd}BCn}{BA`Bh}0{Bh{{j{Eh}}}}{{BhAf}{{j{Eh}}}}{{BDbdd}{{Bb{BhB`}}}}{BA`{{Bb{ANlB`}}}}{BhBCb}{{}Fd}0000000{ce{}{}}000000020{BCb}0100{BCnd}{Bhd}{BCbd}{BCb{{BDf{{BDd{{Fb{Lj}}}}{Fb{{BCd{Lj}}}}}}}}{BhBDh}{BA`{{Fj{An}}}}{{BA`{C`{{Gb{FnFd}}}}}{{Fj{An}}}};{BCnFd}{BhFd}====={{{Fj{Lj}}{Fj{{BCd{Lj}}}}d}BCb}{{ANl{Fj{An}}Bh{C`{{Fj{Ed}}}}}BA`}{BDhC`}{{BDhFd}C`}{{BA`c}{{Bb{ANlB`}}}{{Dd{ANl}{{Db{{Bb{ANlB`}}}}}}HhHj}}{c{}{}}{BhBCj}{{BA`KjMf}{{Bb{ANlB`}}}}{{BA`e}BA`{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{BhFnFd}BCh}{BCbb}{Bhb}{{BA`Aj}{{Bb{ANlB`}}}}{BA`{{Bb{ANlB`}}}}{Bh{{Fj{Lj}}}}0{BA`Bh}0{ce{}{}}000{cEd{}}{c{{Bb{e}}}{}{}}000000000000000{cOd{}}0000000{BhBh}{BhBCb}{Bh{{Fj{{Nj{Lj}}}}}}:66666666`````{{BCbc}An{{Dd{{Gb{Lj{BCd{Lj}}}}}{{Db{C`}}}}HhHj}}{{BCbc}An{{Dd{{Gb{Lj{BCd{Lj}}}}}{{Db{}}}}HhHj}}{{{Al{{Nj{Lj}}}}c}An{{Dd{{Nj{Lj}}}{{Db{C`}}}}HhHj}}{{{Al{{Nj{Lj}}}}c}An{{Dd{{Nj{Lj}}}{{Db{}}}}HhHj}}{{{Al{c}}e{C`{{ADb{ACj}}}}}{{AId{c}}}{BDjBDl}{{Ch{}{{Cb{{Gb{LjLj}}}}}}Hl}}{{{Al{c}}H`e{C`{{ADb{ACj}}}}}{{AId{c}}}{BDjBDl}{{Ch{}{{Cb{{Gb{LjLj}}}}}}Hl}}{{{j{c}}LjLj}{{j{c}}}D`}{{{Fj{{Nj{Lj}}}}{Al{{Cf{Cd}}}}}d}{{BDnBh}An}{{BE`BE`}BE`}0`{{BEbANlBh}{{Bb{AnB`}}}}{BEb{{Bb{AfB`}}}}````````````````````````````````````{{cf}b{}}00{{BEdHn}{{C`{b}}}}{{BEfHn}b}0{ce{}{}}00000{BEdBEd}{BEfBEf}{B@nB@n}{{ce}b{}{}}00{{{Al{c}}}Eb{{Hb{Eb}}}}{{}B@n}{Fdc{}}00000{Fdb}00{{B@nB@n}d}{{ce}d{}{}}00{{B@nGf}{{Bb{bGh}}}}{cc{}}{{{Gb{EbFd}}}BEd}{{{Gb{EbFd}}}BEf}22{{eFd}B@b{{AM`{Eb}}}{{Ch{}{{Cb{{Fj{{Gb{Edc}}}}}}}}}}{{}Fd}00{ce{}{}}00{BEdAn}{BEfAn}{{EbFd}BEd}{{EbFd}BEf}{{{Fj{Hn}}}B@n}{{BEdFd}An}{{BEfFd}An}{{{Al{B@n}}{C`{Fd}}}{{Bb{B@bB`}}}}0{{{Al{B@n}}{C`{Fd}}}{{Bb{{Fj{Eb}}B`}}}}999{c{{Bb{e}}}{}{}}00000{cOd{}}00;;;{{{Al{ANl}}}{{Bb{ANlB`}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000{{ANl{Al{Af}}{Al{Af}}{C`{Af}}ANl}ANl}{{BEh{Al{Lj}}dd}ANl}{{BEh{Gb{{Ob{{Fj{Lj}}{Fj{N`}}}}{Ob{{Fj{Of}}{Fj{N`}}}}}}ANlBEj}{{Bb{ANlB`}}}}{{AfAf}Ed}{{BEhANlAnAnBEjd{C`{{Al{Af}}}}}{{Bb{ANlB`}}}}{{BEhANlAnAnBEj}{{Bb{ANlB`}}}}{BEl{{Bb{AnB`}}}}{{BEn{Al{N`}}Ib}ANl}0{{BEn{Al{N`}}}ANl}0{{BF`{C`{{Fj{Af}}}}{C`{Af}}d}{{Bb{ANlB`}}}}{{{BFb{c}}{C`{BFd}}}{{BFb{c}}}BFf}{{BBbd}BBb}{An{{Bb{AnB`}}}}{BFhBFh}{{{BFj{}{{Db{c}}}}An}c{}}{{BFhBFh}}{{ANfFn{C`{AIn}}}{{Bb{FnB`}}}}0{{BFlAn}{{Bb{AnB`}}}}1{{BFnc}BBb{{Gn{{Al{BFh}}}}}}5`{{BFhAf}BFh}{{}BFh}{{BFhd}BFh}{c{{Bb{BFhB`}}}{{Gn{{Al{BFh}}}}}}{{{ADb{ce}}}e{}BG`}{{BGbd}BGb}`{BGdd}0{BGfd}1`{{BFhc}BFh{{AM`{BFh}}}}{{{ADb{BGd}}BGh}{{Bb{BBbB`}}}}76{{BFhcd}BFh{{AM`{BFh}}}}{A@jb}{A@lb}{{A@j{C`{An}}}{{Bb{bB`}}}}{{A@l{C`{c}}}b{}}{{A@jAn}{{Bb{bB`}}}}{{A@lc}b{}}{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{c}}}}}}Df}}{{BFnc{ADb{B@b}}}BBb{{Dd{ANl}{{Db{{Bb{ANlB`}}}}}}HhHj}}{{BFhc{BGl{{ADb{BGj}}}}}BFh{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFhBFhc{BGl{{ADb{BGj}}}}}BFh{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFhc}{{Bb{BGnB`}}}{{Dl{BFh}{{Db{{Bb{BGnB`}}}}}}}}{{ADnDd}ADn}{{ADnDd}{{j{c}}}D`}{{BFhc{Al{BFh}}{BGl{{ADb{BGj}}}}}BFh{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFhBH`{Al{BFh}}dd}BFh}{{ce{BGl{{ADb{BGj}}}}d}BFh{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{Gn{{Al{BFh}}}}}}{{{ADl{}{{ADj{c}}}}i{Al{g}}}b{}{}{}{{Dd{{C`{e}}g}{{Db{g}}}}}}{{{ADl{}{{ADj{c}}}}g}{{ADl{}{{ADj{c}}}}}{}{}{{Dd{e}{{Db{c}}}}Df}}{{BFhBFhFnEb}BFh}{BBn{{ADb{Cd}}}}{BHb{{C`{Fd}}}}{BHdBFh}{BHfBFh}{BFhBFh}3210{{AE`Ef}{{j{Eh}}}}{{BFhEf}BFh}{{BElEf}{{j{Eh}}}}{{cEl}BFh{{Gn{{Al{BFh}}}}}}{{AE`{Al{An}}El}{{Bb{{j{Eh}}B`}}}}{AEb{{Bb{{j{Eh}}B`}}}}6{BEl{{Bb{{j{Eh}}B`}}}}{cBFh{{AM`{BFh}}}}``{BFhBHd}{eAJh{}{{Gd{}{{Cb{c}}}}}}0{{AChe}AJj{}{{Gd{}{{Cb{c}}}}}}0`{{{BHh{c}}}{{Bb{B@lB`}}}BHj}{BGdACj}{BElACj}{BHlACj}{BGfACj}{BBnACj}30{BHn{{j{Ah}}}}{{BI`{C`{Af}}d}{{Bb{{Il{IjIh}}B`}}}}{{BI`{C`{Af}}}{{Bb{{Il{IjIh}}B`}}}}{{BI`{C`{Af}}J`dd{C`{Ed}}{j{Ad}}}{{Bb{{Il{JbIn}}B`}}}}{{BI`{C`{Af}}J`d{C`{Ed}}{j{Ad}}}{{Bb{{Il{JbIn}}B`}}}}{BIb{{C`{BFh}}}}{{{ADb{c}}}BId{BIfMn}}{BIh{{j{h}}}}{BIb{{C`{BIj}}}}{{{ADb{ce}}}{}MnBG`}{{{ADb{c}}}LlBIl}{BInBFh}{{{ADb{ce}}}cMnBG`}{AJlEb}{BJ`An}{BEl{{Bb{FdB`}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{{Al{c}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{BIb{{C`{BJb}}}}{BJd{{C`{BJb}}}}{BJf{{j{Ad}}}}{{{Fj{BFh}}}BFh}{{BI`{C`{Af}}d}{{Bb{{Il{JlIn}}B`}}}}{{{ADb{{Al{{BJh{c}}}}e}}}{{ADb{{Al{c}}e}}}{}BG`}{{{ADb{{BJh{c}}e}}}{{ADb{ce}}}{}BG`}{AfBFh}{{BFh{C`{Lj}}}BFh}{BJj{{Bb{{j{Ad}}B`}}}}{BJj{{j{Ad}}}}{{{Il{JbIn}}J`AIn}{{Il{JhIn}}}}`{{{BJl{c}}B@b}{{Bb{{BJn{c}}B`}}}BK`}{{{BKb{c}}B@b}{{Bb{{BKd{c}}B`}}}BK`}{{{BKf{c}}Fd}{{Bb{BKhB`}}}BFf}{{{BKj{c}}B@b}{{Bb{{BKl{c}}B`}}}BK`}{{{BFb{c}}}{{Bb{BKnB`}}}BFf}{{{BFb{c}}}{{Bb{BL`B`}}}BFf}{{{BFb{{Cf{BFf}}}}{C`{{ADb{B@b}}}}}{{Bb{BLbB`}}}}{{{BFb{{Cf{BFf}}}}{C`{{ADb{B@b}}}}}{{Bb{BLdB`}}}}`{BFhBLf}{{BFhBLhBFh}BFh}{{BElAn}{{Bb{AnB`}}}}00{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{ADb{ce}}}cMnBG`}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{BBbLjcEl}BBb{{Gn{{Al{BFh}}}}}}{BBn{{Cf{Cd}}}}```{BBbBBb}```{{BLjAf}{{Bb{EdB`}}}}{{BLl{Fj{BFh}}}{{Bb{BFhB`}}}}{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{BHl{Al{An}}}{{Bb{{C`{An}}B`}}}}{{BLnAnAn}{{Bb{AnB`}}}}{{BLl{Fj{BFh}}}BFh}{BM`b}{{BFhEb}BFh}{{AEdEb}{{Bb{AnB`}}}}{{AKnEb}{{Bb{AnB`}}}}{{BElEb}{{Bb{AnB`}}}}{{BBb{BMb{AfEbNd}}d}BBb}4{{BBbEbd}BBb}4`{BFhBMd}{{{ADb{c}}}{{C`{AI`}}}{AI`Mn}}{BFhBFh}{BMf{{Bb{AnB`}}}}1```{BMh{{Bb{{j{Ih}}B`}}}}{{B@lB@l{C`{{Al{Ed}}}}Af}{{Bb{bB`}}}}{{B@bB@b{C`{{Al{Ed}}}}Af}{{Bb{bB`}}}}0``{{BMjAn}{{Bb{AnB`}}}}{{BElAn}{{Bb{AnB`}}}}{{BMjc}{{Bb{AnB`}}}A`}{BEl{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}`{BEl{{Fj{{Cf{Cd}}}}}}0{{AnAnAn}{{Bb{AnB`}}}}{{BFhBFhBFh}BFh}{{AnAn}{{Bb{AnB`}}}}{{BFhBFh}BFh}10{BMlBMl}{BAbBAb}{BBhBBh}{BMnBMn}{ANfANf}{BN`BN`}{BNbBNb}{BNdBNd}{BNfBNf}{OfOf}{N`N`}{BNhBNh}{BNjBNj}{BNlBNl}{BM`BM`}{BBbBBb}{BFdBFd}{BFnBFn}{BNnBNn}{BO`BO`}{BObBOb}{BOdBOd}{BOfBOf}{BOhBOh}{BEjBEj}{BOjBOj}{BOlBOl}{BOnBOn}{C@`C@`}{C@bC@b}{C@dC@d}{C@fC@f}{C@hC@h}{C@jC@j}{C@lC@l}{C@nC@n}{BGhBGh}{CA`CA`}{CAbCAb}{CAdCAd}{CAfCAf}{CAhCAh}{CAjCAj}{CAlCAl}{BGfBGf}{CAnCAn}{CB`CB`}{CBbCBb}{CBdCBd}{CBfCBf}{CBhCBh}{CBjCBj}{BInBIn}{BFhBFh}{CBlCBl}{BLhBLh}{{{BGl{c}}}{{BGl{c}}}AAn}{CBnCBn}{BH`BH`}{CC`CC`}{CCbCCb}{CCdCCd}{CCfCCf}{CChCCh}{CCjCCj}{CClCCl}{BLlBLl}{CCnCCn}{CD`CD`}{CDbCDb}{{{ADb{ce}}}{{ADb{ce}}}Mn{BG`AAn}}{CDdCDd}{MjMj}{BBlBBl}{B@bB@b}{BBnBBn}{AMbAMb}{B@lB@l}{MfMf}{CDfCDf}{CDhCDh}{CDjCDj}{BEl{{ADb{BEl}}}}{{ce}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000`````{CDl{{C`{CDn}}}}``{{ANfANf}ANd}{{{ADb{ce}}{ADb{ce}}}ANd{CE`Mn}BG`}{{{Al{BFh}}}BFh}{{{Al{An}}}{{Bb{AnB`}}}}{AfBFh}{BBb{{Bb{ANlB`}}}}{c{{Bb{{Fj{ANl}}B`}}}{{Hf{}{{Cb{BBb}}}}}}{ALje{}{{AJh{c}}AHl}}0{{ALjACh}e{}{{AJj{c}}AHl}}0{{ABdAf}{{j{c}}}D`}{{ABf{j{c}}}{{j{c}}}D`}10{{ABfAfEb}{{j{c}}}D`}0{BBb{{Bb{BM`B`}}}}{cBFh{{BBd{Ed}}}}{{CDdFd}CEb}`{{BF`{Fj{Af}}{C`{Af}}d}{{Bb{ANlB`}}}}`{{ce}ANd{}{}}0``{CBb{{Bb{{ADb{B@b}}B`}}}}{{cBNl}{{Bb{BBbB`}}}{{Gn{{Al{BBb}}}}}}{{BJj{j{Ad}}}{{j{Ad}}}}{{ed}{{Bb{BFhB`}}}{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}{{CDl{Fj{BBb}}}{{Bb{BBbB`}}}}{{CAd{Fj{BBb}}}{{Bb{BBbB`}}}}44{e{{Bb{BFhB`}}}{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}{{cAfd}BFh{{Gn{{Al{BFh}}}}}}{{BHdc}BFh{{AM`{BFh}}}}{{CEd{Al{Aj}}}{{j{Ab}}}}{{BJjAfd}{{Bb{{j{Ab}}B`}}}}{{BHfc}BFh{{AM`{BFh}}}}{{B@bAf}d}{{CEd{j{Ah}}}{{j{Ab}}}}{{BJj{j{Ad}}dd}{{Bb{{j{Ab}}B`}}}}{{BJjAf}{{Bb{{j{Ab}}B`}}}}{{CdACh}{{Cf{Cd}}}}{{AnFd}{{Bb{{j{Eh}}B`}}}}{BBbBBb}{BFhBFh}{{BJjAfd}{{Bb{{j{Eh}}B`}}}}{{BJj{j{Ad}}d}{{Bb{{j{Eh}}B`}}}}{{CEfAj{C`{Aj}}{C`{BFd}}Ajd}{{Bb{FdB`}}}}{{{AKh{Af}}}Eb}{{BEh{Al{N`}}d}ANl}{{CEhc}{{Cf{CEj}}}BK`}{{CElc}{{Cf{CEj}}}BK`}`{{CEnANl{C`{Af}}{C`{{Gb{FnFd}}}}}{{Bb{ANlB`}}}}{{BBbBBb}BBb}{{CEnANl{C`{{Gb{FnFd}}}}d}{{Bb{{Gb{ANlANl}}B`}}}}{{And}{{Bb{AnB`}}}}{{BFhd}BFh}{{BFhced}BFh{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Gn{{Al{BFh}}}}}}212121{{ce}BFh{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Gn{{Al{BFh}}}}}}32{{CF`BFhFdd}BFh}`{BBnACh}{AMbACh}```{{BFhBFhANfBN`{C`{J`}}{C`{Ed}}}BFh}`{CC`BFh}`11{AIlFn}00{CFb{{j{Ln}}}}{CFd{{j{Ln}}}}{BMh{{Bb{{j{Ln}}B`}}}}`{CFf{{j{In}}}}{ANfFn}`{ANfd}```{{}b}{cbBG`}{{}BMl}{{}CEh}{{}BAb}{{}BBh}{{}CEl}{{}BNd}{{}BNh}{{}BNj}{{}BNl}{{}BBb}{{}BO`}{{}BOb}{{}BOf}{{}BEj}{{}BOj}{{}BOn}{{}C@`}{{}C@b}{{}C@d}{{}C@f}{{}C@j}{{}C@l}{{}C@n}{{}BGh}{{}CA`}{{}CAf}{{}CAj}{{}CB`}{{}CBb}{{}BFh}{{}{{BGl{{ADb{BLn}}}}}}{{}{{BGl{{ADb{CFh}}}}}}{{}{{BGl{{ADb{BGj}}}}}}{{}CC`}{{}CCb}{{}CCf}{{}CCh}{{}CCj}{{}CCl}{{}CCn}{{}CDb}{{}{{ADb{c}}}CFj}{{}Mj}{{}BBl}{{}B@b}{{}AMb}{{}B@l}{{}Mf}`{{}{{Ob{{Fj{Of}}{Fj{N`}}}}}}{Fdc{}}0{{{AIh{c}}}{}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{BGl{c}}}{}{}}22222222222222{{{ADb{ce}}}cMnBG`}333333333333333233333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333```{CBbEd}{BBb{{Bb{EdB`}}}}0{BBbEd}02{{{ADb{c}}}Af{AI`Mn}}``{{AnFnCFl}{{Bb{AnB`}}}}{{BHfFnCFl}BFh}{{BFhFnCFl}BFh}{{{BFj{}{{Db{c}}}}An}c{}}{{BFhBFh}}{{BFlAn}{{Bb{AnB`}}}}{{CBbEd{Gb{FdFd}}CFn{BMb{EdEdNd}}}{{Bb{bGh}}}}{{BFhc}BFh{{AM`{BFh}}}}{{{ADb{ACjc}}}{{Bb{{ADb{ec}}{ADb{ACjc}}}}}BG`{ACjHhHj}}{{{ADb{ACjc}}}{{ADb{ec}}}BG`{ACjHhHj}}{{{ADb{ce}}}{{CG`{ce}}}Mn{AAnBG`}}{Fdb}00000{BLbb}1{BLdb}22222222222222222222222222222222222222{BM`b}3{{BBbe}BBb{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}444444444444444444444444444444444444444444444444444444444{{{ADb{ce}}}bMnBG`}555555555555{BFhBFh}{{BBb{C`{{Fj{BFh}}}}}BBb}1{BElAn}{{{Il{JbIn}}J`AIn}{{Il{JhIn}}}}`{BFhCGb}{AKnEb}{BElEb}`{EbBFh}{cBFh{{Gn{{Al{Eb}}}}}}{CCbBFh}``{ce{}{{CGf{CGd}}}}0`{{CEd{Al{Aj}}}{{j{Ab}}}}{{CEd{j{Ah}}}{{j{Ab}}}}{{ANfEbAf}{{Bb{bB`}}}}{{ANf{C`{Af}}Af}{{Bb{bB`}}}}`{{BAbBAb}d}{{BBhBBh}d}{{ANfANf}d}{{BN`BN`}d}{{BNbBNb}d}{{BNdBNd}d}{{OfOf}d}{{BNhBNh}d}{{BNjBNj}d}{{BFdBFd}d}{{BNnBNn}d}{{BO`BO`}d}{{BObBOb}d}{{BOdBOd}d}{{BOfBOf}d}{{BOhBOh}d}{{BEjBEj}d}{{BOjBOj}d}{{BOlBOl}d}{{BOnBOn}d}{{C@`C@`}d}{{C@bC@b}d}{{C@dC@d}d}{{C@fC@f}d}{{C@hC@h}d}{{C@jC@j}d}{{C@lC@l}d}{{C@nC@n}d}{{CA`CA`}d}{{CAbCAb}d}{{CAfCAf}d}{{CAhCAh}d}{{CAlCAl}d}{{CAnCAn}d}{{BInBIn}d}{{BFhBFh}d}{{BFhc}BFh{{AM`{BFh}}}}{{CBlCBl}d}{{BLhBLh}d}{{{BGl{{ADb{c}}}}{BGl{{ADb{c}}}}}dMn}{{{BGl{An}}{BGl{An}}}d}{{CBnCBn}d}{{BH`BH`}d}{{CCdCCd}d}{{CCfCCf}d}{{CChCCh}d}{{CCjCCj}d}{{CClCCl}d}{{CD`CD`}d}{{CDbCDb}d}{{{ADb{Cd}}Cd}d}{{{ADb{ce}}{ADb{ce}}}d{CGhMn}BG`}{{{ADb{CGj}}CGj}d}{{BBlBBl}d}{{B@bB@b}d}{{BBnBBn}d}{{BBnCd}d}{{AMbAMb}d}{{B@lB@l}d}{{MfMf}d}{{CDjCDj}d}{{BFhc}BFh{{AM`{BFh}}}}{{{AEh{}{{Cb{c}}}}e}c{}{}}0{{ce}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CGlBFhd}BFh}{{BIbANlCGn}{{Bb{AnB`}}}}{{BJdANl}{{Bb{AnB`}}}}{{BIbANlBhCGn}{{Bb{CH`B`}}}}{{BIjANlBhCGn}{{Bb{AnB`}}}}``{{BFhc}BFh{{BBd{Ed}}}}{{BFhc}BFh{{Gn{{Al{Eb}}}}}}{{ce}{{Bb{gAOh}}}{}CHb{}}{{BBbd}{{Bb{EdB`}}}}{AEj{{Bb{AnB`}}}}{{BBbe}BBb{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}{BFhBFh}{AEj{{Bb{{Gb{An{G`{Fn}}}}B`}}}}``{{BFhBFhBFh}BFh}{CEhCEf}{CElCEf}{{BJj{j{Ad}}Fd}{{Bb{{j{Ad}}B`}}}}{N`{{Gb{LjLj}}}}{{BJjAf}{{Bb{{j{h}}B`}}}}{{BJj{j{Ad}}}{{Bb{{j{h}}B`}}}}{{BJjAfEb}{{Bb{AnB`}}}}{A@jd}``{BM`{{C`{{Bb{ANlB`}}}}}}{{BBbFd}{{Bb{ANlB`}}}}{BM`{{Bb{ANlB`}}}}{A@jMh}{BEl{{Dh{Mh}}}}{{CHdFn}BFh}{{CHdAf}BFh}{BBn{{Al{AMb}}}}```{{BBbc}BBb{{AM`{BFh}}}}{{BFhc}BFh{{AM`{BFh}}}}`10{{BFhAEf}BFh}{{AElc}{{Bb{AElB`}}}{}}{{AEn{j{Ab}}}{{Bb{{j{c}}B`}}}D`}{{BEl{j{Ab}}}{{Bb{AnB`}}}}{{BBbBFh}BBb}5{{B@lc}B@l{{Dd{FdAMb}{{Db{d}}}}}}{{BIjAnBhCGn}{{Bb{AnB`}}}}{{BJjAfd}{{Bb{{j{Eh}}B`}}}}{{BJj{j{Ad}}dd}{{Bb{{j{Eh}}B`}}}}{{BJjAf}{{Bb{{j{Eh}}B`}}}}{CHf{{Bb{ANlB`}}}}{{CEjANl}{{Bb{bB`}}}}{A@l{{j{c}}}D`}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{BGbBBb}{{{BFb{c}}}{{Bb{ANlB`}}}BFf}{{{BJl{c}}ANl}{{Bb{bB`}}}BK`}{{{CHh{c}}}{{Bb{ANlB`}}}BFf}{{{BHh{c}}}{{Bb{ANlB`}}}BHj}{{{CHj{c}}ANl}{{Bb{bB`}}}BK`}{{{BKb{c}}ANl}{{Bb{bB`}}}BK`}{{{CHl{c}}ANl}{{Bb{bB`}}}BK`}{{{CHn{c}}}{{Bb{ANlB`}}}BFf}{{{CI`{c}}}{{Bb{ANlB`}}}BFf}{{{BKf{c}}}{{Bb{ANlB`}}}BFf}{{{BKj{c}}ANl}{{Bb{IfB`}}}BK`}{CDl{{Bb{BBbB`}}}}{A@j{{j{h}}}}1{CAd{{Bb{BBbB`}}}}{BGf{{Bb{BBbB`}}}}{{{CHh{c}}{C`{{ADb{CIb}}}}d}{{Bb{ANlB`}}}BFf}{{BKhFd}d}{{}BFh}{BHfBFh}{BBbBBb}{BFhBFh}`0``{{}{{BGl{{ADb{BGj}}}}}}{BMf{{Bb{AnB`}}}}2{{BFhBFh}BFh}{{AnAn}{{Bb{AnB`}}}}{{{ADb{CId}}}{{Bb{bAOh}}}}{{BHlGf}{{Bb{bGh}}}}{{BLnGf}{{Bb{bGh}}}}{{BLjGf}{{Bb{bGh}}}}{{BAbGf}{{Bb{bGh}}}}{{BBhGf}{{Bb{bGh}}}}{{BMnGf}{{Bb{bGh}}}}{{ANfGf}{{Bb{bGh}}}}0{{BN`Gf}{{Bb{bGh}}}}{{BNbGf}{{Bb{bGh}}}}{{BNdGf}{{Bb{bGh}}}}{{OfGf}{{Bb{bGh}}}}{{N`Gf}{{Bb{bGh}}}}{{BIbGf}{{Bb{bGh}}}}{{BGdGf}{{Bb{bGh}}}}{{CIfGf}{{Bb{bGh}}}}{{BNhGf}{{Bb{bGh}}}}{{BNjGf}{{Bb{bGh}}}}{{BFdGf}{{Bb{bGh}}}}{{BNnGf}{{Bb{bGh}}}}{{BO`Gf}{{Bb{bGh}}}}{{BObGf}{{Bb{bGh}}}}{{BOdGf}{{Bb{bGh}}}}{{CH`Gf}{{Bb{bGh}}}}{{BOfGf}{{Bb{bGh}}}}{{BOhGf}{{Bb{bGh}}}}{{BEjGf}{{Bb{bGh}}}}{{BOjGf}{{Bb{bGh}}}}{{BOlGf}{{Bb{bGh}}}}0{{BOnGf}{{Bb{bGh}}}}{{C@`Gf}{{Bb{bGh}}}}0{{C@bGf}{{Bb{bGh}}}}{{C@dGf}{{Bb{bGh}}}}{{C@fGf}{{Bb{bGh}}}}{{C@hGf}{{Bb{bGh}}}}{{C@jGf}{{Bb{bGh}}}}{{C@lGf}{{Bb{bGh}}}}{{C@nGf}{{Bb{bGh}}}}{{CA`Gf}{{Bb{bGh}}}}{{CAbGf}{{Bb{bGh}}}}{{CAfGf}{{Bb{bGh}}}}{{CAhGf}{{Bb{bGh}}}}{{CAlGf}{{Bb{bGh}}}}{{CAnGf}{{Bb{bGh}}}}{{CBbGf}{{Bb{bGh}}}}{{BFhGf}{{Bb{bGh}}}}0{{CBlGf}{{Bb{bGh}}}}{{BLhGf}{{Bb{bGh}}}}0{{{BGl{c}}Gf}{{Bb{bGh}}}{}}{{CBnGf}{{Bb{bGh}}}}0{{BH`Gf}{{Bb{bGh}}}}0{{CC`Gf}{{Bb{bGh}}}}{{CCbGf}{{Bb{bGh}}}}{{CCdGf}{{Bb{bGh}}}}{{CCfGf}{{Bb{bGh}}}}{{CChGf}{{Bb{bGh}}}}{{CCjGf}{{Bb{bGh}}}}{{CClGf}{{Bb{bGh}}}}{{BLlGf}{{Bb{bGh}}}}{{CCnGf}{{Bb{bGh}}}}{{CD`Gf}{{Bb{bGh}}}}{{CDbGf}{{Bb{bGh}}}}{{{ADb{ce}}Gf}{{Bb{bGh}}}{B@`Mn}BG`}{{{ADb{ce}}Gf}{{Bb{bGh}}}MnBG`}{{{ADb{ce}}Gf}{{Bb{bGh}}}{AClMn}BG`}{{CDdGf}{{Bb{bGh}}}}{{BBlGf}{{Bb{bGh}}}}{{B@bGf}{{Bb{bGh}}}}{{BBnGf}{{Bb{bGh}}}}{{AMbGf}{{Bb{bGh}}}}{{B@lGf}{{Bb{bGh}}}}{{MfGf}{{Bb{bGh}}}}{{CDfGf}{{Bb{bGh}}}}{{CDhGf}{{Bb{bGh}}}}{{CDjGf}{{Bb{bGh}}}}{{AfBCf}Ed}````{{BFhce}BFh{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Gn{{Al{BFh}}}}}}{{BGbd}BGb}``{{Afc}{{Bb{BFhB`}}}{{Gn{{Al{BFh}}}}}}{{BFh{C`{Lj}}}BFh}{cc{}}0000000000000000000000000000000000{LjOf}1111111111{CBbBBb}2{BFnBBb}333333333{BOlBEj}444444444444444444444444444444{BInBFh}{KjBFh}6{IdBFh}{AjBFh}{LhBFh}{AfBFh}{IfBFh}{dBFh}{LdBFh}{FnBFh}{M`BFh}{LjBFh}{LlBFh}{cc{}}0{CIh{{BGl{{ADb{BHl}}}}}}{CIj{{BGl{{ADb{BHl}}}}}}{BH`{{BGl{{ADb{BHl}}}}}}3{CIl{{BGl{{ADb{BHl}}}}}}{CIn{{BGl{{ADb{BHl}}}}}}{CJ`{{BGl{{ADb{BHl}}}}}}{CBn{{BGl{{ADb{BHl}}}}}}{CJb{{BGl{{ADb{BHl}}}}}}{CJd{{BGl{{ADb{BHl}}}}}}{CJf{{BGl{{ADb{BHl}}}}}}:{CJdBH`};{CJ`BH`}{CIlBH`}{CBnBH`}>>>>>{CClCCj}??????{{{Al{c}}}{{ADb{{Al{c}}}}}AAn}{CJhc{}}{CEf{{ADb{CJj}}}}{Ed{{ADb{Af}}}}{CJl{{ADb{CJl}}}}{CJn{{ADb{CJl}}}}{{{Dh{c}}}{{ADb{c}}}{CK`Mn}}{CKb{{ADb{CKb}}}}{Af{{ADb{Af}}}}{CJj{{ADb{CJj}}}}{c{{ADb{c}}}{}}{CKd{{ADb{CKb}}}}{{{Nj{c}}}{{ADb{{Al{c}}}}}{}}{{{Fj{ce}}}{{ADb{{Al{c}}e}}}{}{BG`AAn}}{{{Cf{ce}}}{{ADb{ce}}}MnBG`}{cc{}}{{{ADb{Af}}}{{ADb{{Al{Aj}}}}}}1111{B@lB@b}0{{{ADb{B@l}}}B@b}03{B@nB@b}{{{Al{An}}}B@b}{CKfBBn}6{CKhBBn}77{{{Fj{AMb}}}B@l}8888{{c{C`{H`}}}CKj{}}{{{CKl{Fn}}{CKl{Aj}}{C`{H`}}}CKn}{{{CKl{Fn}}{CKl{Aj}}{C`{H`}}}CL`}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}00{c{{AIh{{j{e}}}}}{{Gd{}{{Cb{}}}}}l}{c{{AIh{{j{Ab}}}}}{{Gd{}{{Cb{d}}}}}}{e{{ADb{{Al{c}}}}}{}{{Gd{}{{Cb{c}}}}}}{eB@b{{AM`{Mh}}}{{Gd{}{{Cb{c}}}}}}{{gFd}{{CLb{Fn}}}Gn{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}0{e{{CLb{Fn}}}{{Gd{}{{Cb{{C`{d}}}}}}}{{Gd{}{{Cb{{C`{c}}}}}}}}{{Afe}ABb{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gACh}{{CLb{Fn}}}BDl{{Gd{}{{Cb{{C`{c}}}}}}}{{Gd{}{{Cb{{C`{e}}}}}}}}763{{Afe}ABb{}{{Ch{}{{Cb{c}}}}}}{c{{AIh{{j{e}}}}}{{Hf{}{{Cb{}}}}}l}{e{{ADb{{Al{c}}}}}Hh{{Hf{}{{Cb{c}}}}}}{c{{Bb{{BFb{CId}}B`}}}{{AM`{CEf}}}}{c{{Bb{{CI`{CId}}B`}}}{{AM`{CEf}}}}{{}{{ADb{c}}}Mn}{c{{ADb{ec}}}BG`Mn}{{Af{Al{c}}}ABb{}}{{Af{Al{{C`{c}}}}}ABb{}}{Af{{Bb{CLd}}}}{c{{AIh{{j{e}}}}}{{Hl{}{{Cb{}}}}}l}{c{{AIh{{j{Ab}}}}}{{Hl{}{{Cb{d}}}}}}{Eb{{BGl{{ADb{BGj}}}}}}{{Afc}CLf{}}{{{Fj{c}}ACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Fj{c}}ACh}{{AHl{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}AAn{{Fl{}{{Cb{e}}}}HlHhHj}}`{{AfcFd}AF`{}}{{FdcACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AfFd}AFb}{{FdACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}`{{BFhc{BGl{{ADb{BGj}}}}CLh}BFh{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}`{{BFhc}BFh{{AM`{BFh}}}}{{BFhFdFd}BFh}{{{ADb{ce}}{ADb{ce}}}d{CLjMn}BG`}{{BElFd}{{Bb{HnB`}}}}{{BHdBFhd}BFh}{{BHfBFhd}BFh}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}6{{B@bAf}{{C`{Eb}}}}{{AFdFd}{{Bb{HnB`}}}}{{AKnFd}{{Bb{HnB`}}}}{{AFdFd}Hn}{{AKnFd}Hn}{{B@bFd}{{C`{{Gb{{AMn{AMl}}Eb}}}}}}0{BMdBFh}{BBbCCn}{CD`Eb}{{}Eb}{{BNfFnBN`{C`{AIn}}}{{Bb{BMnB`}}}}00{{CFhB@bCLlMhMh}{{C`{Mh}}}}{{BGjB@bCLl{Al{Mh}}}Mh}{{B@bAf}{{C`{Mh}}}}{ACh{{Al{AMb}}}}{CLnFd}{{B@bAf}{{C`{{Gb{Fd{AMn{AMl}}Eb}}}}}}{{{BKf{c}}}{{Bb{{ADb{CDd}}B`}}}BFf}{{{ADb{ce}}}{{C`{c}}}MnBG`}{{{ADb{ce}}}cMnBG`}{CM`{{Fj{Af}}}}{B@b{{Fj{Af}}}}{B@l{{Fj{Af}}}}{{BElFd}{{C`{I`}}}}{{BElFdFd}{{C`{I`}}}}{BHl{{C`{{BGl{{ADb{BGj}}}}}}}}{{BNfBMnBN`J`{C`{AIn}}BNd}{{Bb{CMbB`}}}}{c{{Bb{CMdB`}}}{BHjBFfMn}}{{CIfB@b}{{Bb{{ADb{B@b}}B`}}}}{{cFd}{{Fj{{Gb{FdFd}}}}}{{Ch{}{{Cb{Fd}}}}}}{{AN`Fd}Hn}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{BElFd}Hn}{{BBbe}BFn{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}{{CMf{Fj{An}}BAb}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}{{BBbBFhcBAb}BFn{{Gn{{Al{BFh}}}}}}2{{ANfANf{Al{Fn}}BN`J`{C`{AIn}}}{{Bb{{Fj{{Nj{Lj}}}}B`}}}}{{BNf{Al{Fn}}BN`J`{C`{Ed}}ddBNd}{{Gb{{Fj{{Nj{Lj}}}}{Fj{Fn}}{Fj{Fn}}}}}}{{BDbdd}{{Bb{BhB`}}}}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{BFhc}BFh{{AM`{BFh}}}}{{{ADb{ce}}{ADb{ce}}}d{CLjMn}BG`}21{{{BFb{c}}d}{{BFb{c}}}BFf}{{CAdd}CAd}`{BEld}{CMhd}`{{BAbc}bAFf}{{BBhc}bAFf}{{ANfc}bAFf}{{BN`c}bAFf}{{BNbc}bAFf}{{BNdc}bAFf}{{BNhc}bAFf}{{BNjc}bAFf}{{BFdc}bAFf}{{BNnc}bAFf}{{BO`c}bAFf}{{BObc}bAFf}{{BOdc}bAFf}{{BOfc}bAFf}{{BOhc}bAFf}{{BEjc}bAFf}{{BOjc}bAFf}{{BOlc}bAFf}{{BOnc}bAFf}{{C@`c}bAFf}{{C@bc}bAFf}{{C@dc}bAFf}{{C@fc}bAFf}{{C@hc}bAFf}{{C@jc}bAFf}{{C@lc}bAFf}{{C@nc}bAFf}{{CA`c}bAFf}{{CAbc}bAFf}{{CAfc}bAFf}{{CAhc}bAFf}{{CAlc}bAFf}{{CAnc}bAFf}{{BInc}bAFf}{{BFhc}bAFf}{{CBlc}bAFf}{{BLhc}bAFf}{{CBnc}bAFf}{{BH`c}bAFf}{{CCdc}bAFf}{{CCfc}bAFf}{{CChc}bAFf}{{CCjc}bAFf}{{CClc}bAFf}{{CD`c}bAFf}{{CDbc}bAFf}{{{ADb{ce}}g}b{CMjMn}BG`AFf}{{BBlc}bAFf}{{B@bc}bAFf}{{AMbc}bAFf}{{Mfc}bAFf}{{CDjc}bAFf}{{CMlAnC@`d}{{Bb{{Gb{{Gb{{Fj{Lj}}{Fj{Lj}}}}d}}B`}}}}{{CMlAnC@`d}{{Bb{{Gb{{AId{Lj}}{AId{Lj}}}}B`}}}}{{BHfBFh}BFh}{{BFn{C`{Fd}}}BBb}{{BFh{C`{Fd}}}BFh}{BJj{{Bb{{j{Ad}}B`}}}}{BJj{{j{Ad}}}}`{{{Al{{j{Ad}}}}Afd}{{Bb{{j{Ad}}B`}}}}{CMn{{j{Ln}}}}{CFd{{j{Ln}}}}{BMh{{Bb{{j{Ln}}B`}}}}`{CFf{{j{In}}}}`{{BGbBOl}BGb}``{OfLj}`{{{Il{JbIn}}{j{Ad}}CDj{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{{{Il{JbIn}}{C`{Af}}{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{BFhBFh}{AIld}{{{BJl{c}}d}{{BJl{c}}}BK`}``0`{{}b}{cb{AAnBG`}}``{{CM`Af}{{C`{Fd}}}}{{B@bAf}{{C`{Fd}}}}{{B@lAf}{{C`{Fd}}}}{{{Al{Lj}}}{{`{{Ch{}{{Cb{Fd}}}}}}}}{{CMdAj{C`{Fd}}d{C`{B@b}}FdFd{C`{BFd}}{C`{Aj}}Aj{C`{BNn}}dd{C`{Fd}}d}{{Bb{{Gb{B@bFdFd}}B`}}}}{{{BFb{c}}{C`{Fd}}}{{BFb{c}}}BFf}{{{CHn{c}}{C`{Fd}}}{{CHn{c}}}BFf}{{{CI`{c}}{C`{Fd}}}{{CI`{c}}}BFf}``{{}Fd}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{A@j{{Cf{Cd}}}}{{CN`ANlee}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{BBbBBbcc}BBb{{AM`{BFh}}}}{N`If}`{{B@bFd{AMn{AMl}}Eb}{{Bb{{C`{Eb}}B`}}}}{{BFhBFhFnEb}BFh}{{BFhBFhBFh}BFh}`{{AnBOd}An}{{BFhBOd}BFh}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBn{{Gb{{Fj{AMb}}{Fj{{Cf{Cd}}}}{C`{H`}}}}}}{{{AIh{c}}}c{}}{{{ADb{ce}}}{{C`{c}}}{}BG`}3{BFh}{B@b}{BBn}{CNbBHf}{BHfBHf}{{{ADb{ce}}}{}MnBG`}{B@dAn}{{{ADb{BEl}}}An}{CDdCNd}{BBd{{Fj{c}}}{}}{{AnAnAnC@l}{{Bb{{j{Ab}}B`}}}}{{BFhccC@l}BFh{{AM`{BFh}}}}{{{Al{Aj}}}d}{{ANf{C`{Af}}}d}{BEld}{B@bd}{B@ld}{BKhd}{BFhBFh}{An{{Bb{{j{Ab}}B`}}}}{AFh{{Bb{{j{Ab}}B`}}}}2{ANfd}{{AnAn}{{Bb{{j{Ab}}B`}}}}{{BFhc}BFh{{AM`{BFh}}}}54{AFj{{Bb{{j{Ab}}B`}}}}6{CFb{{j{Ab}}}}{CFd{{j{Ab}}}}{BMh{{Bb{{j{Ab}}B`}}}}{BIbd}:::{BEl{{j{Ab}}}};;0{N`d}<{Ofd}`{And}{{{ADb{CId}}}d}{{}d}{{CNfEf}{{Bb{dB`}}}}{cd{}}03?{CFb{{j{Ih}}}}{CFd{{j{Ih}}}}{BMh{{Bb{{j{Ih}}B`}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{AD`{cgACn}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{B@b{{`{{Ch{}{{Cb{{Gb{{AMn{AMl}}Eb}}}}}}}}}}{BBn{{AD`{{Fj{{Cf{CGj}}}}CNhACn}}}}{B@b{{`{Jj}}}}000{CDl{{Bb{{C`{{Cf{Ch}}}}B`}}}}{{BHdBFhd}BFh}{{BHfBFhd}BFh}{{CN`ANleeBEj}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{BBbBBbccBEj}BBb{{Gn{{Al{BFh}}}}}}{{CNjANlAfAfC@f{C`{Hn}}{C`{Ed}}}{{Bb{ANlB`}}}}{{CNlANlAfAfeeC@f{C`{Hn}}}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{BBbBGb}{{CNnAfd}{{Bb{{j{Ad}}B`}}}}{{CNn{j{Ad}}d}{{Bb{{j{Ad}}B`}}}}{{BGbd}BGb}`{CHdBFh}{CO`BFh}{CDd{{C`{{Fj{COb}}}}}}``{{}BFh}{BHfBFh}{BBbBBb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{BFhBFh}{COdBBb}3{{{ADb{ce}}{ADb{ce}}}d{CLjMn}BG`}`{{CN`ANlee}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{BBbBBbcc}BBb{{AM`{BFh}}}}{{BGbc}BGb{{Gn{{Al{BFh}}}}}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}<{BElFd}<9{B@bFd}{BBnFd}{B@lFd}{{BBbLj}BBb}{{BElFd}An}{BKhd}`{BFhBHf}{cBFhCOf}{COfBFh}{COhBFh}{CD`BFh}{{BFhc}BFh{{AM`{BFh}}}}0``{{{BFb{c}}d}{{BFb{c}}}BFf}{{{CI`{c}}d}{{CI`{c}}}BFf}{{CAdd}CAd}{{BGfd}BGf}```{BFhBFh}{CNn{{j{Eh}}}}0{{CNn{Al{An}}}{{Bb{{j{h}}B`}}}}{{CNnFnCFl}{{Bb{{j{h}}B`}}}}{{CNnFnd}{{Bb{AnB`}}}}{{CNn{j{Ad}}d}{{Bb{{j{Ad}}B`}}}}4{CNn{{Bb{AnB`}}}}{CNnAn}01{CNn{{Bb{{j{Eh}}B`}}}}{CNn{{j{h}}}}{{CNnAn}{{Bb{{j{h}}B`}}}}{{CNnFnFd}{{j{h}}}}{{CNnEf}{{Bb{{j{h}}B`}}}}{{CNnAj}An}7{CNn{{Bb{{j{h}}B`}}}}01{{{AEh{}{{Cb{c}}}}e}c{}{}}{{BFhc}BFh{{AM`{BFh}}}}{{{ADb{ce}}{ADb{ce}}}d{CLjMn}BG`}21``````{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{{ADb{ce}}}cAAn{BG`AAn}}{{CO`c}BFh{{Dd{Af}{{Db{{Bb{EdB`}}}}}}HhHj}}{{BBbcCCn{C`{{ADb{CIf}}}}{C`{Af}}}BBb{{Dd{ANl}{{Db{{Bb{ANlB`}}}}}}HhHj}}{{BFhc{BGl{{ADb{BGj}}}}}BFh{{Dd{An}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFhBFhc{BGl{{ADb{BGj}}}}}BFh{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFhc}{{Bb{BFhB`}}}{{Dl{BFh}{{Db{{Bb{BFhB`}}}}}}}}{{CLn{C`{Ed}}}{{Bb{MhB`}}}}{{CLnc}{{Bb{MhB`}}}{{Oh{Eb}{{Db{Eb}}}}}}{c{{BGl{{ADb{BGj}}}}}{{Dd{Eb}{{Db{Eb}}}}HhHj}}{c{{BGl{{ADb{BGj}}}}}{{Dd{{Al{Eb}}}{{Db{Eb}}}}HhHj}}{{BFhc}BFh{{Dl{BFh}{{Db{BFh}}}}}}{c{{BGl{{ADb{BGj}}}}}{{Dd{Mh}{{Db{Mh}}}}HhHj}}{{CO`{ADb{Dd}}}BFh}{c{{BGl{{ADb{BGj}}}}}{{Dd{{Al{Mh}}}{{Db{Mh}}}}HhHj}}:{{ce{BGl{{ADb{BGj}}}}}BFh{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}{{Gn{{Al{BFh}}}}}}{{BFhc{Al{BFh}}{BGl{{ADb{BGj}}}}}BFh{{Dd{{Al{An}}}{{Db{{Bb{{C`{An}}B`}}}}}}HhHj}}{{BFhBH`{Al{BFh}}dd}BFh}2{CLn{{Bb{MhB`}}}}0000{CD`CD`}{{{C`{{Al{Fd}}}}B@l{C`{{Al{An}}}}{C`{COj}}}ANl}{{{C`{{Al{Ed}}}}B@b{C`{{Al{An}}}}d}{{C`{{Fj{Fd}}}}}}{AfBFh}{BHdBFh}{BHfBFh}{AFl{{C`{c}}}{}}{BBbBBb}{BFhBFh}{COlAn}{BEl{{Bb{AnB`}}}}75{AFl{{C`{Kj}}}}43{BEl{{C`{Kj}}}}987{AFn{{C`{c}}}{}}651{COnAn}4{{BBbBBf}BBb}``{{{CHh{c}}d}{{CHh{c}}}BFf}{{B@bB@b}b}{{EbEb}{{Bb{EbB`}}}}{BOld}````{CFf{{j{In}}}}`{BMh{{Bb{{j{Ih}}B`}}}}1`{AfBFh}{BHdBFh}{BHfBFh}{AFl{{C`{c}}}{}}{BBbBBb}{BFhBFh}{COlAn}{BEl{{Bb{AnB`}}}}{AFl{{C`{{Gb{cc}}}}}{}}````{CMn{{j{Ln}}}}{CFd{{j{Ln}}}}{BMh{{Bb{{j{Ln}}B`}}}}`=``6{CFb{{j{Ln}}}}21`{{D@`{C`{AIn}}}{{Bb{D@`B`}}}}{{D@b{C`{AIn}}}{{Bb{D@bB`}}}}{ANfFn}{ANfd}{{{BFj{}{{Db{c}}}}An}c{}}{{ANfFn}ANf}{{BFhBFh}}{{BFlAn}{{Bb{AnB`}}}}``{BElFd}{CDl{{C`{Fd}}}}{CAd{{C`{Fd}}}}{BGf{{C`{Fd}}}}````{{{BJl{c}}Fd}{{BJl{c}}}BK`}`{BHdBFh}{BHfBFh}{AEb{{Bb{FdB`}}}}{BFhBFh}{BEl{{Bb{FdB`}}}}{BElAf}{BFhCO`}````33`{CMn{{j{Ih}}}}{CFd{{j{Ih}}}}{BMh{{Bb{{j{Ih}}B`}}}}{CFf{{j{In}}}}{ANfFn}`{{{ADb{ce}}{ADb{ce}}}d{CGhMn}BG`}{C@`d}{BFh}{An{{Bb{AnB`}}}}0{ANfd}{{D@dFd}{{C`{Fd}}}}{{BFhc}BFh{{AM`{BFh}}}}0{CLn{{Bb{MhB`}}}}{{}c{}}{cCHfBHj}{cCEjBK`}2{{Afc}D@f{}}{c{{AIh{c}}}{}}{BBbBGb}{c{{BFb{c}}}BFf}{{{Al{Mh}}}CLn}{c{{BJl{c}}}BK`}{c{{CHh{c}}}BFf}{c{{BHh{c}}}BHj}{c{{CHj{c}}}BK`}{{}CEh}{c{{BKb{c}}}BK`}{FnANf}{{}CEl}{c{{CHl{c}}}BK`}{c{{CHn{c}}}BFf}{{ANfANfANf}BNf}{c{{CI`{c}}}BFf}{{D@h{ADb{CDd}}{ADb{B@l}}Fd{C`{{Fj{Fd}}}}{C`{{ADb{CIb}}}}{C`{COj}}Fdd{C`{{Fj{An}}}}C@j}{{Bb{BKhB`}}}}{c{{BKf{c}}}BFf}{c{{BKj{c}}}{BK`BK`}}{BOlBEj}{cCAd{{Gn{CJj}}}}{cBGf{{Gn{CJj}}}}{c{{BGl{c}}}{}}{{BFhBFhBFh}CC`}{{}CCb}{{Af{Fj{Mh}}{BGl{{ADb{BGj}}}}c}BLlBHl}{c{{ADb{c}}}{}}{{}B@b}{{ACh{Fj{{Cf{Cd}}}}{C`{H`}}}BBn}{{cAChd}AMb{{AM`{Ed}}}}{e{{ADb{c}}}{}{{Oh{{CG`{c}}}{{Db{c}}}}}}{AChBBn}{{AG`FdFd}{{j{c}}}D`}{{BElFdFd}An}{{ce}{{ADb{ce}}}{}BG`}{{B@bFd{AMn{AMl}}Eb}{{Bb{B@bB`}}}}{{FnAf}{{Bb{AnB`}}}}{Ed{{C`{BFd}}}}{{AChFd}BBn}{{{ADb{{Al{CEf}}}}}CAd}{{{ADb{{Al{CEf}}}}}BGf}{AjBFd}{{}{{ADb{{BJh{c}}}}}{}}{c{{ADb{{BJh{e}}c}}}BG`{}}{Fd{{ADb{{Al{{BJh{c}}}}}}}{}}{{Fdc}{{ADb{{Al{{BJh{e}}}}c}}}BG`{}}3210{CMbC`}{{BKnFd}{{Bb{{C`{{Fj{ANl}}}}B`}}}}{{BLbFd}{{Bb{{C`{{Fj{ANl}}}}B`}}}}{{BL`Fd}{{Bb{{C`{{Fj{ANl}}}}B`}}}}{{BLdFd}{{Bb{{C`{{Fj{ANl}}}}B`}}}}{{BKhFd}{{Bb{{C`{{Fj{ANl}}}}B`}}}}{{BFh{BCd{BFh}}}b}0{BFhBFh}0{{{AEh{}{{Cb{c}}}}e}c{}{}}0`{{}Of}{{}N`}`{BElFd}{BBbBBb}5```{{{BKf{c}}}{{Bb{FdB`}}}BFf}````{AEj{{Bb{{G`{Fn}}B`}}}}{{BGbc}BGb{{Gn{{Al{BFh}}}}}}{{BBb{D@l{D@j}}{D@l{D@n}}}{{Bb{DA`B`}}}}`{{BFhc}BFh{{AM`{BFh}}}}{CFb{{j{Lb}}}}{CFd{{j{Lb}}}}{BMh{{Bb{{j{Lb}}B`}}}}{BMh{{Bb{{j{Ih}}B`}}}}{{CBfc}BFh{{AM`{BFh}}}}{{CBjc}BFh{{AM`{BFh}}}}{{CN`ANlee}{{Bb{ANlB`}}}{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{BBbBBbcc}BBb{{AM`{BFh}}}}`{{BFhe}BFh{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}{{BFheCCl}BFh{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}```{AfANf}{{Af{Al{Af}}Af}{{Il{IjIh}}}}{{Af{Al{Af}}Af}{{Il{JlIn}}}}{{Af{Al{Af}}AfJ`}{{Il{JbIn}}}}`{{ANfANf}{{C`{ANd}}}}{{{ADb{ce}}{ADb{ce}}}{{C`{ANd}}}{CLjMn}BG`}{CDlCJj}{CAdCJj}{BGfCJj}{CDl{{Al{CEf}}}}{CAd{{Al{CEf}}}}{BGf{{Al{CEf}}}}``{{}BFh}{c{{DAb{{ADb{c}}}}}{}}{{ce}{{DAb{{ADb{ce}}}}}{}BG`}````{{BFhc}BFh{{AM`{BFh}}}}```{{CO`Af}BFh}0{{ANlANld}{{Bb{{Gb{{Ob{{Fj{Lj}}{Fj{N`}}}}{Ob{{Fj{Of}}{Fj{N`}}}}}}B`}}}}`{COlAn}{BFhBFh}{BBb{{Bb{{Gb{ANlANl}}B`}}}}``{{{ADb{c}}DAd}b{AI`Mn}}{{{ADb{ce}}{ADb{ce}}}dMnBG`}{{AfBFhMf}BFh}{{AFnKjMf}{{Bb{{C`{c}}B`}}}{}}{{BBbBFhMf}BBb}{{BFhBFhMf}BFh}{{COnKjMf}{{Bb{AnB`}}}}{{BElKjMf}{{Bb{AnB`}}}}{CFb{{j{Ln}}}}{CFd{{j{Ln}}}}{BMh{{Bb{{j{Ln}}B`}}}}{{ce}{{Bb{gAOh}}}{}CHb{}}```{{{BFb{c}}d}{{BFb{c}}}BFf}{{CAdd}CAd}`{{DAfCAf{C`{If}}}An}{{BFhCAf{C`{If}}}BFh}{{{ADb{CId}}{Al{Aj}}}{{Bb{FdAOh}}}}{{{ADb{CId}}DAh}{{Bb{bAOh}}}}{{{BKf{c}}C@j}{{BKf{c}}}BFf}{{{ADb{CId}}{Fj{Aj}}}{{Bb{FdAOh}}}}{{{ADb{CId}}Ed}{{Bb{FdAOh}}}}{c{{Bb{eAOh}}}{}DAj}{{{ADb{CId}}{Al{DAl}}}{{Bb{FdAOh}}}}{CDld}{BElAn}{CAdd}{BGfd}```{{ce}BFh{{Dd{AnAn}{{Db{{Bb{{C`{An}}B`}}}}}}HhHjAAn}{{Gn{{Al{BFh}}}}}}{AGbAn}0{{{BFj{}{{Db{c}}}}An}c{}}{{BFhBFh}}{{BFlAn}{{Bb{AnB`}}}}{{B@bAf}{{C`{Eb}}}}{{BElAf}b}{{BBbei}BBb{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}{{Gn{Af}}}{{Gd{}{{Cb{g}}}}}}{{B@bAf{AMn{AMl}}}{{C`{{AMn{AMl}}}}}}{{CHd{Fj{Ed}}}BFh}{{cBFh}BFh{{AM`{BFh}}}}{{An{j{Eh}}}{{Bb{{j{h}}B`}}}}{{BFhc}BFh{{AM`{BFh}}}}{{AnAnAnAn{C`{Eb}}}{{Bb{AnB`}}}}{{BJjAfAf}{{Bb{{j{Ad}}B`}}}}{{BFhcc{C`{c}}{C`{Eb}}}BFh{{AM`{BFh}}}}1{{CLn{C`{Eb}}}{{Bb{MhB`}}}}{{BJjAfAfFd}{{Bb{{j{Ad}}B`}}}}3{{{Il{JbIn}}{C`{Af}}{j{Ad}}CDj}{{Bb{{Il{JbIn}}B`}}}}{{BFh{Al{Fn}}}BFh}{CJjCEf}`{AGdAGd}{BElAn}{BHdBFh}{BHfBFh}{BBbBBb}{BFhBFh}`{{BGbc}BGb{{Gn{{Al{BFh}}}}}}{{CMf{Fj{An}}BBh}{{Bb{{Gb{An{Fj{An}}Bh}}B`}}}}{{BBbBFhcBBh}BFn{{Gn{{Al{BFh}}}}}}{{BFhBBh}BFh}{{AGfDdMj}{{Bb{AnB`}}}}{{BFh{ADb{Dd}}{BGl{{ADb{BGj}}}}Mj}BFh}{{BElDdMj}{{Bb{AnB`}}}}{{BFhFdc}BFh{{Dl{{j{E`}}}{{Db{{C`{Kj}}}}}}HhHjDf}}{{DAnBMl}{{Bb{AnB`}}}}{{BFhDB`}BFh}100101{{BFhMfKjDB`}BFh}212121{{DBbANfANf{C`{AIn}}}{{Bb{DBbB`}}}}{{BMfLj}{{Bb{AnB`}}}}{{BFhLj}BFh}{{BNfFn{C`{AIn}}}{{Bb{FnB`}}}}0{{BMfLl}{{Bb{AnB`}}}}{{BFhLl}BFh}2````{CDl{{C`{COj}}}}{CAd{{C`{COj}}}}{BGf{{C`{COj}}}}`````{{CNn{j{h}}}{{j{h}}}}{{}{{BGl{{ADb{BGj}}}}}}{{BFhBFhdd{C`{If}}}BFh}0{{{BFb{c}}Fd}{{BFb{c}}}BFf}{{BGdDBd}{{Bb{ANlB`}}}}{{BGfDBd}{{Bb{ANlB`}}}}{{cCAj}{{Bb{BBbB`}}}{{Gn{CJj}}}}{{{ADb{{Al{CEf}}}}CAj}{{Bb{BBbB`}}}}{{cCB`}{{Bb{BBbB`}}}{{Gn{CJj}}}}{{{ADb{{Al{CEf}}}}CB`}{{Bb{BBbB`}}}}{{DBf{Al{Lj}}e}{{Bb{AnB`}}}Df{{Gd{}{{Cb{{C`{c}}}}}}}}{{AGhc{C`{e}}}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lj}}}}}{}}{{AGhci}{{Bb{AGhB`}}}{{Gd{}{{Cb{Lj}}}}}{}{}{{Dd{{C`{e}}}{{Db{{C`{g}}}}}}}}{{{CHh{c}}}{{Bb{{ADb{B@l}}B`}}}BFf}{{{BHh{c}}}{{Bb{B@bB`}}}BHj}{BKh{{ADb{B@l}}}}{{{BKf{c}}}{{Bb{{ADb{B@l}}B`}}}BFf}{{BGd{C`{Fd}}}{{Bb{{ADb{B@b}}B`}}}}{BBb{{Bb{{ADb{B@b}}B`}}}}{{BGf{C`{Fd}}}{{Bb{{ADb{B@b}}B`}}}}{CDdDBh}``````{CMn{{j{Ln}}}}{CFd{{j{Ln}}}}{BMh{{Bb{{j{Ln}}B`}}}}`{CFf{{j{In}}}}`{{{ADb{CId}}DBj}{{Bb{IfAOh}}}}{{BBbc}BBb{{Gn{{Al{BFh}}}}}}0````{{AGh{j{Ab}}{C`{c}}}{{Bb{AGhB`}}}{}}{{B@bAfEb}{{C`{Eb}}}}{{B@bFdEb}{{C`{Eb}}}}{{{BKf{c}}d}{{BKf{c}}}BFf}{{{BKj{c}}d}{{BKj{c}}}BK`}{{{CHh{c}}d}{{CHh{c}}}BFf}{{{BHh{c}}d}{{BHh{c}}}BHj}{{{CHn{c}}d}{{CHn{c}}}BFf}4{{CHfd}CHf}{{BFhIb}BFh}{{BBn{C`{H`}}}b}{{AGjFn}{{j{c}}}D`}{{BElFn}An}{{BHdBFh}BFh}{{BHfBFh}BFh}{{BBbc}BBb{{AM`{BFh}}}}{{BFhBFh}BFh}{{AGlFnc}{{j{e}}}{}D`}{{BBbce}BBb{{AM`{BFh}}}{{AM`{BFh}}}}{{BFhce}BFh{{AM`{BFh}}}{{AM`{BFh}}}}{{B@bAf}{{C`{Eb}}}}{{B@bFd}{{C`{{Gb{{AMn{AMl}}Eb}}}}}}{BFhBFh}{A@lb}{BElb}{{BFh{C`{If}}}BFh}``{{BBbCEfBO`}{{Bb{bB`}}}}{{BBbCEfBOj}{{Bb{bB`}}}}{{BBbCEfC@b}{{Bb{bB`}}}}{{BBbCEfC@n}{{Bb{bB`}}}}`````{{BElFnFd}An}{{BHfBFhBFh}BFh}{{BBbFnLj}BBb}={{BBnFdFd}b}0```{{AGnFdFd}AGn}{{cFdFd}e{}{}}1022{{BBnFdFd}BBn}0`{{AE`d}{{j{c}}}D`}{{BHdEf}BFh}{{BHfEf}BFh}{{BBbcEl}BBb{{BBd{{AMn{AMl}}}}}}{{BFhEf}BFh}{{BFheEl}BFh{{AM`{BFh}}AAn}{{Gn{{Al{c}}}}}}{{BBbcEl}BBb{{Gn{{Al{BFh}}}}}}{{AE`Ef}{{j{c}}}D`}{{BElEf}{{Bb{AnB`}}}}{{{ADb{c}}}{{C`{AI`}}}{AI`Mn}}{{BJj{j{Ad}}}{{j{h}}}}{{BJj{j{Ad}}Fd}{{Bb{AJbB`}}}}0{{{j{Ad}}{j{Ad}}e}{{j{h}}}{{Ch{}{{Cb{Af}}}}}{{Dd{AfAf}{{Db{c}}}}}}2{{{j{Ad}}{j{Ad}}Fde}{{Bb{AJbB`}}}{{Ch{}{{Cb{Af}}}}}{{Dd{AfAf}{{Db{c}}}}}}2{BFhBFh}`{{CEd{Al{Aj}}}{{j{Ab}}}}{{CEd{j{Ah}}}{{j{Ab}}}}`{{BHdAj}BFh}{{BHfAj}BFh}{{AH`Aj}{{C`{Kj}}}}{{BBbAj}BBb}{{BFhAj}BFh}{{BElAj}{{C`{Kj}}}}{{DBlAj}An}{{BElAj}{{Bb{AnB`}}}}{{LjLj}N`}{BFhDBn}{{{j{Ad}}Afd}{{j{Ad}}}}{{BJjAn}{{Bb{{j{Ad}}B`}}}}{BJj{{j{Eh}}}}0{BJj{{j{Ad}}}}{{BJjAnAn}{{Bb{{j{Ad}}B`}}}}3````{{BMhAf}{{Bb{AnB`}}}}`{{BFhEb}BFh}`{{{j{Ad}}{j{Ad}}}{{j{Ad}}}}606060{{BJj{j{Ad}}}{{j{Ad}}}}10{{{ADb{ce}}}FdMnBG`}{BFhCHd}{{{BFj{}{{Db{c}}}}An}c{}}{{BFhBFh}}{{BFlAn}{{Bb{AnB`}}}}{{BGbc}BGb{{Gn{Af}}}}{{CO`Af}BFh}{BEjAf}`1{AfBFh}{BHdBFh}{BHfBFh}{AFl{{C`{c}}}{}}{BBbBBb}{BFhBFh}{COlAn}{{}{{BGl{{ADb{BGj}}}}}}{{ci}{{Bb{gAOh}}}{}{}{}{{Oh{e}{{Db{g}}}}}}{{BHfBFh}BFh}{{BBbLj}BBb}{{BFn{C`{Fd}}}BBb}{{BFh{C`{Fd}}}BFh}{{AHbc}{{Bb{AHbB`}}}Mn}{{BEl{j{Eh}}}{{Bb{AnB`}}}}{{DC`{Al{N`}}Ib}DC`}{{DC`{Al{N`}}}DC`}{{BEl{Al{Lj}}}{{Bb{AnB`}}}}{{BEl{Al{Lj}}}An}{{AHdc}AHdMn}{{BEl{j{Eh}}}An}{BBn{{C`{H`}}}}{{BFhBFhBFh}BFh}{{CBdc}CBf{{AM`{BFh}}}}{{CBhc}CBj{{AM`{BFh}}}}`{{BFhBFhANfBN`}BFh}```{{BMhJ`}{{Bb{{j{In}}B`}}}}{BBb{{Bb{{Gb{DA`{D@l{D@j}}{D@l{D@n}}}}B`}}}}{CBb{{Bb{{Gb{DA`{D@l{D@j}}{D@l{D@n}}}}B`}}}}1{CD`{{C`{Hn}}}}{{BHfFd}BFh}{{B@bd}B@l}{BBn{{Cf{Cd}}}}{AHf{{Fj{{Al{Aj}}}}}}{{BBbd}{{Bb{EdB`}}}}{BFh{{Bb{EdB`}}}}{{DCb{C`{Af}}d}{{Bb{ANlB`}}}}{{BF`{C`{Af}}d}{{Bb{ANlB`}}}}{{BIbB@b}{{Bb{MhB`}}}}{{BFhB@bCLl}{{Bb{MhB`}}}}{{BJj{j{Eh}}d}{{Bb{{j{In}}B`}}}}{BHdBFh}{BJj{{j{Ad}}}}{CO`BFh}{Of{{C`{Lj}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000{BFhBFh}{CLn{{Bb{MhB`}}}}{{BMhAf}{{Bb{AnB`}}}}{cEd{}}0000000{{B@bB@b}{{Bb{dB`}}}}`887``{{BBbLjcEl}BBb{{Gn{{Al{BFh}}}}}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{DCd{C`{AIn}}{j{Ad}}Af}{{Bb{DCdB`}}}}{{ANfFn{C`{AIn}}ceg}{{Bb{FnB`}}}{{Dd{Fn}{{Db{Fn}}}}}{{Dd{Fn}{{Db{AIl}}}}}{{Dd{AIl}{{Db{Fn}}}}}}{{ANfFn{C`{AIn}}}{{Bb{FnB`}}}}{{BNfFn{C`{AIn}}}{{Bb{FnB`}}}}00010{{{BFb{c}}d}{{BFb{c}}}BFf}{{CAdd}CAd}`32{g{{Bb{AJhe}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{AChg}{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALj{{Bb{eg}}}{}{{AJh{c}}AHl}{}}0{{ALjACh}{{Bb{eg}}}{}{{AJj{c}}AHl}{}}0{{ABdAf}{{Bb{{j{c}}e}}}D`{}}{{ABf{j{c}}}{{Bb{{j{c}}e}}}D`{}}10{{ABfAfEb}{{Bb{{j{c}}e}}}D`{}}0{c{{Bb{e}}}{}{}}00000000000000{DB`{{Bb{BMlB`}}}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111{Hn{{Bb{CD`B`}}}}22{{{ADb{{Al{c}}e}}}{{Bb{{ADb{{Nj{c}}e}}}}}{}BG`}333{BMl{{Bb{MjB`}}}}4444444444{CNd{{Bb{CDdAOl}}}}{{B@bAf}{{Bb{EbB`}}}}{{B@bFd}{{Bb{{Gb{{AMn{AMl}}Eb}}B`}}}}{{B@bAf}{{Bb{MhB`}}}}{{B@bAf}{{Bb{{Gb{Fd{AMn{AMl}}Eb}}B`}}}}3{{CM`Af}{{Bb{FdB`}}}}:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::{{CLnc}{{Bb{MhB`}}}{{Oh{Eb}{{Db{{Bb{EbB`}}}}}}}}{{CLnc}{{Bb{MhB`}}}{{Oh{{Al{Eb}}}{{Db{{Bb{EbB`}}}}}}}}{{BFhc}{{Bb{BFhB`}}}{{Dl{BFh}{{Db{{Bb{BFhB`}}}}}}}}{{CLnc}{{Bb{MhB`}}}{{Oh{Mh}{{Db{{Bb{MhB`}}}}}}}}{{D@dFd}{{Bb{FdB`}}}}{Aj{{Bb{CAhB`}}}}{Lj{{Bb{CAlB`}}}}{Ll{{Bb{CAnB`}}}}{c{{Bb{{ADb{c}}DCf}}}{}}{{ACh{Fj{{Cf{Cd}}}}{C`{H`}}}{{Bb{BBnB`}}}}{{ce}{{Bb{{ADb{ce}}DCf}}}{}BG`}{{}{{Bb{{ADb{{BJh{c}}}}DCf}}}{}}{c{{Bb{{ADb{{BJh{e}}c}}DCf}}}BG`{}}10`{c{{Bb{{DAb{{ADb{c}}}}DCf}}}{}}{{ce}{{Bb{{DAb{{ADb{ce}}}}DCf}}}{}BG`}{{BHl{Fj{Aj}}}{{Bb{bB`}}}}{{{ADb{ce}}}{{Bb{c{ADb{ce}}}}}{}BG`}```{cOd{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Af}``{AEb{{Bb{{j{c}}B`}}}D`}{BHdBFh}{BHfBFh}{{BBb{C`{{Fj{Ed}}}}B@h}BBb}{BFhBFh}{BEl{{Bb{AnB`}}}}4321{{BBbe}BBb{{Gn{Af}}}{{Gd{}{{Cb{c}}}}}}{{{ADb{{DCh{c}}}}}{{Bb{cb}}}Hh}{{{ADb{ce}}}cAAn{BG`AAn}}4{{DCjcAfANfANf}{{Bb{ANlB`}}}{{BBd{Ed}}}}0{{{BKf{c}}d}{{BKf{c}}}BFf}```{{BGbC@`}BGb}`{BBn{{C`{H`}}}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}cAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{CNfdd}{{Bb{ANlB`}}}}{{BFhdd}BFh}`2`{BBn{{Al{{Cf{Cd}}}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}gAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{BBnCNh}{{BHdAj}BFh}{{BHfAj}BFh}{{AH`Aj}{{C`{Kj}}}}{{BBbAj}BBb}{{BFhAj}BFh}{{BElAj}{{C`{Kj}}}}{{DBlAj}An}{{BElAj}{{Bb{AnB`}}}}`{{DClNd{Fj{If}}}{{Bb{bB`}}}}{{DClNd{Al{If}}}{{Bb{bB`}}}}`{{{ADb{{DCh{c}}}}g}{{Bb{eb}}}Hh{}{{Oh{c}{{Db{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{ADb{ce}}}FdMnBG`}{CFb{{j{Ln}}}}{CFd{{j{Ln}}}}{BMh{{Bb{{j{Ln}}B`}}}}210{BNd{{C`{Lj}}}}{ANfFn}`{ANfd}```{cCBd{{AM`{BFh}}}}{{CBfc}CBh{{AM`{BFh}}}}{{CBjc}CBh{{AM`{BFh}}}}````{{BGbBBb}BGb}{{CC`BFh}CC`}{{{BJl{c}}{DCn{Fd}}}{{BJl{c}}}BK`}{{{CHn{c}}{DCn{Fd}}}{{CHn{c}}}BFf}{{BGf{C`{{DCn{Fd}}}}}BGf}{{CAdd}CAd}{Fdc{}}0{FdB@b}{{{BFb{c}}Fd}{{BFb{c}}}BFf}{{{CI`{c}}{C`{{DCn{Fd}}}}}{{CI`{c}}}BFf}{{BBbBFh}BBb}{{B@b{AMn{AMl}}Eb}{{C`{Eb}}}}{{{BFb{c}}{C`{{Fj{Ed}}}}}{{BFb{c}}}BFf}{{{CHh{c}}{C`{{Fj{Ed}}}}}{{CHh{c}}}BFf}{{{BHh{c}}{C`{{Fj{Ed}}}}}{{BHh{c}}}BHj}{{{BKf{c}}{C`{{Fj{Ed}}}}}{{BKf{c}}}BFf}{{BBbc}BBb{{Gn{{Al{BFh}}}}}}`0{{{BFb{c}}{C`{Af}}}{{BFb{c}}}BFf}{{CAd{C`{Af}}}CAd}{{{CHj{c}}{C`{BOn}}}{{CHj{c}}}{}}{{CEh{C`{BOn}}}CEh}{{{BKb{c}}{C`{BOn}}}{{BKb{c}}}BK`}{{CEl{C`{BOn}}}CEl}{{{BKj{c}}CA`}{{BKj{c}}}BK`}{{BBbc}BBb{{Gn{{Al{BBb}}}}}}{{{BKj{c}}{C`{Fd}}}{{BKj{c}}}BK`}{{{BJl{c}}{C`{Ed}}}{{BJl{c}}}BK`}0{{CC`BFh}CC`}{{CCbBFh}CCb}{{{BFb{c}}d}{{BFb{c}}}BFf}{{CAdd}CAd}{{CLnEb}{{Bb{MhB`}}}}{{CAd{C`{{ADb{B@b}}}}}CAd}{{{BFb{c}}{C`{{ADb{B@b}}}}}{{BFb{c}}}BFf}{{{BFb{c}}{C`{{Al{Eb}}}}}{{BFb{c}}}BFf}{{{BFb{c}}BNj}{{BFb{c}}}BFf}{{CAdBNj}CAd}{{{BFb{c}}Aj}{{BFb{c}}}BFf}{{CAdAj}CAd}{{CEhCEf}CEh}{{CElCEf}CEl}{{{BJl{c}}{C`{Fd}}}{{BJl{c}}}BK`}{{CCbBFhBFhBFh}CCb}{{{BKf{c}}{C`{{Fj{An}}}}}{{BKf{c}}}BFf}{{CC`BFhBFhBFh}CC`}2{{CC`BFh}CC`}{{CCbBFh}CCb}{{{BFb{c}}d}{{BFb{c}}}BFf}{{{CHn{c}}d}{{CHn{c}}}BFf}{{{CI`{c}}d}{{CI`{c}}}BFf}{{CAdd}CAd}{{BGfd}BGf}{{CAd{C`{Fd}}}CAd}{{BGf{C`{Fd}}}BGf}{{{CHl{c}}DD`}{{CHl{c}}}BK`}{{{CHn{c}}DD`}{{CHn{c}}}BFf}{{{BJl{c}}Ed}{{BJl{c}}}BK`}{{AMb{DDb{EdEd}}}AMb}{{B@l{DDb{EdEd}}}B@l}=<<=<;8={{CDlc}CDl{{AM`{{C`{Fd}}}}}}{{{BFb{c}}{C`{Fd}}}{{BFb{c}}}BFf}{{{CHh{c}}{C`{Fd}}}{{CHh{c}}}BFf}{{{BHh{c}}{C`{Fd}}}{{BHh{c}}}BHj}{{{CI`{c}}{C`{Fd}}}{{CI`{c}}}BFf}{{{BKf{c}}{C`{Fd}}}{{BKf{c}}}BFf}<{{CAdc}CAd{{AM`{{C`{Fd}}}}}}<{{BGfc}BGf{{AM`{{C`{Fd}}}}}}63{{CCbBFh}CCb};{{{BFb{c}}{C`{BNn}}}{{BFb{c}}}BFf}{{CAd{C`{BNn}}}CAd}{{BBbCCn}BBb}{{CDlCEf}CDl}{{{BFb{c}}{C`{e}}}{{BFb{c}}}BFf{{AM`{CEf}}}}{{{CI`{c}}{C`{e}}}{{CI`{c}}}BFf{{AM`{CEf}}}}{{CAdCEf}CAd}{{BGfCEf}BGf}{{CDl{ADb{{Al{CEf}}}}}CDl}{{CAd{ADb{{Al{CEf}}}}}CAd}{{BGf{ADb{{Al{CEf}}}}}BGf}{{{CHj{c}}d}{{CHj{c}}}{}}{{{BKb{c}}d}{{BKb{c}}}BK`}{{{BFb{c}}{C`{{ADb{CIb}}}}}{{BFb{c}}}BFf}{{{BKf{c}}{C`{{ADb{CIb}}}}}{{BKf{c}}}BFf}{{BBbd}BBb}{{{BFb{c}}{C`{{Fj{Fd}}}}}{{BFb{c}}}BFf}{{{CHh{c}}{C`{{Fj{Fd}}}}}{{CHh{c}}}BFf}{{{BHh{c}}{C`{{Fj{Fd}}}}}{{BHh{c}}}BHj}{{{CHn{c}}{C`{{Fj{Ed}}}}}{{CHn{c}}}BFf}{{{BKf{c}}{C`{{Fj{Fd}}}}}{{BKf{c}}}BFf}5{{{BFb{c}}{C`{Aj}}}{{BFb{c}}}BFf}{{{BJl{c}}Aj}{{BJl{c}}}BK`}{{CAd{C`{Aj}}}CAd}{{{BJl{c}}BOf}{{BJl{c}}}BK`}{{CDld}CDl}{{{BFb{c}}d}{{BFb{c}}}BFf}{{{CI`{c}}d}{{CI`{c}}}BFf}{{CAdd}CAd}{{BGfd}BGf}>{{{BKj{c}}{C`{Fd}}}{{BKj{c}}}BK`}{{CDlc}CDl{{AM`{{C`{COj}}}}}}{{{BFb{c}}{C`{COj}}}{{BFb{c}}}BFf}{{{CHh{c}}{C`{COj}}}{{CHh{c}}}BFf}{{{BHh{c}}{C`{COj}}}{{BHh{c}}}BHj}{{{BKf{c}}{C`{COj}}}{{BKf{c}}}BFf}{{BBbAf{C`{Lj}}}BBb}{{CAd{C`{COj}}}CAd}{{CAdc}CAd{{AM`{{C`{COj}}}}}}{{BGfc}BGf{{AM`{{C`{COj}}}}}}{{BGf{C`{COj}}}BGf}{CLn{{Bb{MhB`}}}}{{{BFb{c}}{C`{{ADb{B@b}}}}}{{BFb{c}}}BFf}{{{CHn{c}}{ADb{B@b}}}{{CHn{c}}}BFf}{{{CI`{c}}{ADb{B@b}}}{{CI`{c}}}BFf}{{{BKf{c}}{C`{{ADb{B@l}}}}}{{BKf{c}}}BFf}{{CAd{C`{{ADb{B@b}}}}}CAd}{{BGf{C`{{ADb{B@b}}}}}BGf}{{CAdc}{{Bb{CAdB`}}}{{Dd{B@b}{{Db{{Bb{B@bB`}}}}}}}}{{{CHn{c}}B@b}{{CHn{c}}}BFf}{{{CI`{c}}B@b}{{CI`{c}}}BFf}{{CC`BFh}CC`}{{CCbBFh}CCb}{{{BFb{c}}Aj}{{BFb{c}}}BFf}{{{BJl{c}}Aj}{{BJl{c}}}BK`}{{CAdAj}CAd}{{BBbd}BBb}{{{BFb{c}}Fd}{{BFb{c}}}BFf}{{CAdFd}CAd}102{{{BKj{c}}d}{{BKj{c}}}BK`}3{{{BJl{c}}{C`{Ed}}}{{BJl{c}}}BK`}{{CC`J`}CC`}{{CC`{C`{Ed}}}CC`}{{{BFb{c}}d}{{BFb{c}}}BFf}{{CAdd}CAd}8{{BBn{C`{H`}}}BBn}{{BBn{C`{H`}}}{{Cf{Cd}}}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{C`{H`}}}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}?{{CC`BFh}CC`}{BBbBBb}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}10{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}210213210210{{{ADb{CId}}{Al{Aj}}}{{Bb{FdAOh}}}}{{ce}{{Bb{FdAOh}}}{}DAj}{{{ADb{CId}}{Al{DDd}}}{{Bb{FdAOh}}}}{{BFhc}BFh{{AM`{BFh}}}}{CFb{{j{Ih}}}}{CFd{{j{Ih}}}}{BMh{{Bb{{j{Ih}}B`}}}}``{{AHh{j{Ab}}{j{c}}}{{Bb{{j{c}}B`}}}D`}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{BCbc}An{{Dd{{Gb{Lj{BCd{Lj}}}}}{{Db{C`}}}}HhHj}}{{BCbc}An{{Dd{{Gb{Lj{BCd{Lj}}}}}{{Db{}}}}HhHj}}{{{Al{{Nj{Lj}}}}c}An{{Dd{{Nj{Lj}}}{{Db{C`}}}}HhHj}}{{{Al{{Nj{Lj}}}}c}An{{Dd{{Nj{Lj}}}{{Db{}}}}HhHj}}{{{Al{c}}e{C`{{ADb{ACj}}}}}{{AId{c}}}{BDjBDl}{{Ch{}{{Cb{{Gb{LjLj}}}}}}Hl}}{{{Al{c}}H`e{C`{{ADb{ACj}}}}}{{AId{c}}}{BDjBDl}{{Ch{}{{Cb{{Gb{LjLj}}}}}}Hl}}{{{j{c}}LjLj}{{j{c}}}D`}{{{Fj{{Nj{Lj}}}}{Al{{Cf{Cd}}}}}d}{{BDnBh}An}{{BE`BE`}BE`}0``````{{{j{c}}{j{e}}gik}{{j{m}}}D`D`{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}{{Dd{}{{Db{}}}}}D`}0{{{j{c}}{j{e}}i}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}D`D`{{AHj{C`C`}}}D`}{{{j{c}}{j{e}}g}bD`D`{{Dl{C`C`}}}}{{{j{c}}{j{e}}i}{{j{k}}}D`D`{}{{Dl{}{{Db{g}}}}}D`}{{{j{c}}{j{e}}iAf}{{j{k}}}D`D`{CdAHl}{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}iAf}{{j{k}}}D`D`Cd{{Dl{}{{Db{g}}}}}{{D`{}{{Gj{g}}}}}}5{{{j{c}}{j{e}}g}{{Bb{AnB`}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}D`D`{{Dl{}{{Db{{Cf{Cd}}}}}}}}64{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`{}{}{{Dl{C`C`}{{Db{{Bb{{C`{g}}i}}}}}}}D`}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}D`D`D`{{AHn{C`C`C`}}}D`}{{{j{c}}{j{e}}k}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}2{{{j{c}}{j{e}}kAf}{{Bb{{j{m}}i}}}D`D`CdAI`{{Dl{}{{Db{{Bb{gi}}}}}}}{{D`{}{{Gj{g}}}}}}{{{j{c}}{j{e}}idd}{{Bb{{j{c}}g}}}D`D`AI`{{Dl{}{{Db{{Bb{{Cf{Cd}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Bb{{j{o}}k}}}D`D`D`{}{}{{Dl{C`C`C`}{{Db{{Bb{{C`{i}}k}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{C`}{{Db{{Bb{{C`{e}}g}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{}{}{{Dl{}{{Db{{Bb{eg}}}}}}}D`}{{{j{c}}i}{{Bb{{j{k}}g}}}D`{CdAHl}AI`{{Dl{}{{Db{{Bb{eg}}}}}}}{{D`{}{{Gj{e}}}}}}{{{j{c}}e}{{j{g}}}D`{{AIb{C`}}}D`}{{{j{c}}e}{{j{g}}}D`AIbD`}{{{j{c}}g}{{j{i}}}D`Cd{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0{{{j{c}}g}{{j{i}}}D`{CdAHl}{{Dl{}{{Db{e}}}}}{{D`{}{{Gj{e}}}}}}0``{DDf{{j{Eh}}}}0{{DDf{j{In}}d}{{Bb{AnB`}}}}{{DDf{j{Ad}}d}{{Bb{AnB`}}}}{DDfAn}{DDf{{Bb{AnB`}}}}1{DDf{{Bb{{j{Eh}}B`}}}}{DDf{{j{Bl}}}}{{DDfAn}{{Bb{AnB`}}}}{{DDfEf}{{Bb{{j{Bl}}B`}}}}{{DDfAj}{{Bb{AnB`}}}}5{DDf{{Bb{{j{h}}B`}}}}01{DDh{{j{Bl}}}}`{ce{}{}}0{{BLfBFh}BFh}{Fdc{}}0{Fdb}2{cc{}}{{}Fd}54{c{{Bb{e}}}{}{}}0{cOd{}}7`````````{{cf}b{}}{{BI`{C`{Af}}d}{{Bb{{Il{IjIh}}B`}}}}{{BI`{C`{Af}}}{{Bb{{Il{IjIh}}B`}}}}{{BI`{C`{Af}}J`dd{C`{Ed}}{j{Ad}}}{{Bb{{Il{JbIn}}B`}}}}{{BI`{C`{Af}}J`d{C`{Ed}}{j{Ad}}}{{Bb{{Il{JbIn}}B`}}}}{{BI`{C`{Af}}d}{{Bb{{Il{JlIn}}B`}}}}==````{DB`DB`}{{ce}b{}{}}``{CFb{{j{Ln}}}}{CFd{{j{Ln}}}}{CFf{{j{In}}}}{{}DB`}{Fdc{}}0{Fdb}{{DB`DB`}d}{{DB`Gf}{{Bb{bGh}}}}``{cc{}}{CMn{{j{Ln}}}}87{{}Fd}{ce{}{}}{CFb{{j{Ab}}}}{CFd{{j{Ab}}}}{CFb{{j{Ih}}}}{CFd{{j{Ih}}}}==``6>=?>{CMn{{j{Ih}}}}1>{CFb{{j{Lb}}}}{CFd{{j{Lb}}}}{{Af{Al{Af}}Af}{{Il{IjIh}}}}{{Af{Al{Af}}Af}{{Il{JlIn}}}}{{Af{Al{Af}}AfJ`}{{Il{JbIn}}}}{CFb{{j{Ln}}}}{CFd{{j{Ln}}}}{{DAnBMl}{{Bb{AnB`}}}}000000?1{CFf{{j{In}}}}`>{c{{Bb{e}}}{}{}}0`{cOd{}}`{ce{}{}}`6565````>=````````{{cf}b{}}{{BI`{C`{Af}}d}{{Bb{{Il{IjIh}}B`}}}}{{BI`{C`{Af}}}{{Bb{{Il{IjIh}}B`}}}}{{BI`{C`{Af}}J`dd{C`{Ed}}{j{Ad}}}{{Bb{{Il{JbIn}}B`}}}}{{BI`{C`{Af}}J`d{C`{Ed}}{j{Ad}}}{{Bb{{Il{JbIn}}B`}}}}{DDj{{j{Ad}}}}{{BI`{C`{Af}}d}{{Bb{{Il{JlIn}}B`}}}}77{DDlDDl}{{ce}b{}{}}{Fdc{}}0{Fdb}{{DDlDDl}d}{{ce}d{}{}}00{{DDlGf}{{Bb{bGh}}}}{cc{}}{{DDlc}bAFf}`{{}Fd}{ce{}{}}{{DDlAf}d}1{c{{Bb{e}}}{}{}}0{cOd{}}3````{{cf}b{}}44{{{DDn{c}}}{{DDn{c}}}{AAnl}}>==<8{Af{{C`{DDl}}}}76`{{{DDn{c}}Af}C`l}{{DE`{Al{Aj}}{C`{J`}}}{{C`{c}}}{}}{{{DDn{Ih}}{Al{Aj}}{C`{J`}}}{{C`{Ll}}}}{{{DDn{In}}{Al{Aj}}{C`{J`}}}{{C`{Fn}}}}`:8{{c{C`{J`}}}{{Bb{{DEd{}{{DEb{e}}}}B`}}}{}{}}{{DDl{C`{J`}}}{{Bb{{DDn{Ih}}B`}}}}{{DDl{C`{J`}}}{{Bb{{DDn{In}}B`}}}};:=```````9===={CDnCDn}{{ce}b{}{}}{{}CDn}{Fdc{}}000{Fdb}0{{CDnCDn}d}{{DEfDEf}d}{{ce}d{}{}}00{{CDnGf}{{Bb{bGh}}}}{cc{}}0{Af{{Bb{DEf}}}}{{Afg}{{Bb{CDnB`}}}{{Gn{Af}}}{{AM`{Ed}}}{{Gd{}{{Cb{{Gb{ce}}}}}}}}{{CDnc}bAFf}{{}Fd}0{ce{}{}}0``0{c{{Bb{e}}}{}{}}000{cOd{}}022``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAJh{}{{Gd{}{{Cb{c}}}}}}0{{AChe}AJj{}{{Gd{}{{Cb{c}}}}}}0{AJlEb}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{{Al{c}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKnEb}{{Bb{AnB`}}}}`{ALje{}{{AJh{c}}AHl}}0{{ALjACh}e{}{{AJj{c}}AHl}}0{{{AKh{Af}}}Eb}{AKnEb}`{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}{{{Fj{c}}ACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{Fj{c}}ACh}{{AHl{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}AAn{{Fl{}{{Cb{e}}}}HlHhHj}}{{FdcACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{FdACh}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AKnFd}{{Bb{HnB`}}}}{{AKnFd}Hn}{{}Eb}{{AN`Fd}Hn}4{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{AD`{cgACn}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}{{C`{c}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{{AJdAJd}{{Bb{{Gb{AJdAJd}}B`}}}}{{{j{h}}{j{h}}}{{Bb{{Gb{{j{h}}{j{h}}}}B`}}}}{{EbEb}{{Bb{EbB`}}}}`{{}c{}}0{g{{Bb{AJhe}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{{AChg}{{Bb{AJje}}}{}{}{{Gd{}{{Cb{{Bb{ce}}}}}}}}0{ALj{{Bb{eg}}}{}{{AJh{c}}AHl}{}}0{{ALjACh}{{Bb{eg}}}{}{{AJj{c}}AHl}{}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}Fd}cAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}gAAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}{Fdc{}}0{{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{C`{H`}}}{{AHl{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}AAn{AKd{AKf{c}}}{{Fl{}{{Cb{c}}}}HlHhHj}}```````````{{AJdAJdc}{{Bb{AJdB`}}}AKl}{{AKl{j{Eh}}{j{Eh}}}{{Bb{{j{Eh}}B`}}}}=<`````````{{}b}0{{}d}{{{Il{JbIn}}{j{Ad}}CDj{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{{{Il{JbIn}}{C`{Af}}{Ff{Fn}{{Db{AIl}}}}{Ff{AIl}{{Db{Fn}}}}AInAIn}{{Bb{{j{In}}B`}}}}{{{Il{JbIn}}{C`{Af}}{j{Ad}}CDj}{{Bb{{Il{JbIn}}B`}}}}```{{c{C`{H`}}}CKj{}}{{{CKl{Fn}}{CKl{Aj}}{C`{H`}}}CKn}{{{CKl{Fn}}{CKl{Aj}}{C`{H`}}}CL`}`{CGbBFh}{ce{}{}}0{{CGbJ`}BFh}2{{CGbBFhJ`}BFh}{{CGbEd}BFh}444{Fdc{}}0{Fdb}6{cc{}}7{{}Fd}78888888888{{CGb{C`{Ed}}BFhCDj}BFh}{{CGbcc}BFh{{Gn{Af}}}}:{{CGbAf}BFh};90;;;;;;;{{CGbBFhEd}BFh}{c{{Bb{e}}}{}{}}0{cOd{}}=>><>`{{BEbANlBh}{{Bb{AnB`}}}}{BEb{{Bb{AfB`}}}}`??{{}DEh}<<;{{DEh{C`{ACh}}}{{Bb{ABnB`}}}};:{ce{}{}}{DEhd}{{FdFd}DEh}{{DEh{Cf{Cd}}}b}{DEhb}::94`{{{j{c}}}Fdl}0{{IbIb}Ib}{{{j{Eh}}Lj}{{Bb{bB`}}}}{{{AId{Lj}}Lj}{{Bb{bB`}}}}{An{{Bb{AnB`}}}}{{AnBh}An}0{{AnAf}An}0`{{cf}b{}}{DEjACj}{DEj{{Cf{Cd}}}}1>>{DEjDEj}{{ce}b{}{}}{DEjACh}{{}DEj}{Fdc{}}0{Fdb}{{DEjFd}b}{{DEjGf}{{Bb{bGh}}}}{cc{}}{{}Fd}{ce{}{}}{DEjFd}{FdDEj}{DEjb}703{c{{Bb{e}}}{}{}}0{cOd{}}{DEj{{C`{DEl}}}}6````{{AIfcd}LjAHl}{{{j{c}}}{{Gb{Fd{j{c}}}}}D`}``{DEnAn}{BMh{{Bb{{j{Ih}}B`}}}}{BMh{{Bb{{j{Ln}}B`}}}}0{BMh{{Bb{{j{Ab}}B`}}}}22112{BMh{{Bb{{j{Lb}}B`}}}}322{{BMhAf}{{Bb{AnB`}}}}{{BMhJ`}{{Bb{{j{In}}B`}}}}1445`{{AGnFdFd}AGn}0`{{Fd{Fj{d}}}b}```11{{Fd{Al{An}}El}{{Bb{{AIh{{j{Eh}}}}B`}}}}{{{Al{An}}{Al{d}}d}{{Bb{AIjB`}}}}{{Af{Al{An}}{Al{d}}d}{{Bb{{j{Ej}}B`}}}}{{Af{Al{An}}}{{Bb{{j{Ej}}B`}}}}{An{{Bb{{Cf{Cd}}B`}}}}{{{Al{An}}}{{Bb{AIjB`}}}}{{{Al{An}}}{{Bb{{j{Ej}}B`}}}}0```````````88``{BJf{{j{Ad}}}}{BJj{{Bb{{j{Ad}}B`}}}}{BJj{{j{Ad}}}}{{BJj{j{Ad}}}{{j{Ad}}}}{{BJjAfd}{{Bb{{j{Ab}}B`}}}}{{BJj{j{Ad}}dd}{{Bb{{j{Ab}}B`}}}}{{BJjAf}{{Bb{{j{Ab}}B`}}}}{{BJjAfd}{{Bb{{j{Eh}}B`}}}}{{BJj{j{Ad}}d}{{Bb{{j{Eh}}B`}}}}{{BJj{j{Ad}}Fd}{{Bb{{j{Ad}}B`}}}}{{BJjAf}{{Bb{{j{h}}B`}}}}{{BJj{j{Ad}}}{{Bb{{j{h}}B`}}}}{{BJjAfEb}{{Bb{AnB`}}}}5{{BJj{j{Ad}}dd}{{Bb{{j{Eh}}B`}}}}{{BJjAf}{{Bb{{j{Eh}}B`}}}}=<{{{Al{{j{Ad}}}}Afd}{{Bb{{j{Ad}}B`}}}}{{BJjAfAf}{{Bb{{j{Ad}}B`}}}}0{{BJjAfAfFd}{{Bb{{j{Ad}}B`}}}}1{{BJj{j{Ad}}}{{j{h}}}}{{BJj{j{Ad}}Fd}{{Bb{AJbB`}}}}0{{{j{Ad}}{j{Ad}}e}{{j{h}}}{{Ch{}{{Cb{Af}}}}}{{Dd{AfAf}{{Db{c}}}}}}2{{{j{Ad}}{j{Ad}}Fde}{{Bb{AJbB`}}}{{Ch{}{{Cb{Af}}}}}{{Dd{AfAf}{{Db{c}}}}}}2{{{j{Ad}}Afd}{{j{Ad}}}}{{BJjAn}{{Bb{{j{Ad}}B`}}}}{BJj{{j{Eh}}}}0{BJj{{j{Ad}}}}{{BJjAnAn}{{Bb{{j{Ad}}B`}}}}3{{{j{Ad}}{j{Ad}}}{{j{Ad}}}}404040{{BJj{j{Ad}}}{{j{Ad}}}}10{{BJj{j{Eh}}d}{{Bb{{j{In}}B`}}}}444````````{{eFdFd}{{DF`{Fn}}}{{Gn{Af}}}{{Ch{}{{Cb{c}}}}}}{{eFdFd}{{DFb{Fn}}}{{Gn{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{cf}b{}}0{BEl{{Bb{AnB`}}}}{{Af{Fj{{Cf{Cd}}}}ACh}{{Bb{AnB`}}}}{{Af{Fj{{Cf{Cd}}}}ACh{C`{{DDb{EdEd}}}}}{{Bb{AnB`}}}}{{Anc}{}{nKh}}{{AnAn}}01{{AnAn}{{Bb{AnB`}}}}{An{{C`{Fd}}}}0{{BElEf}{{j{Eh}}}}{BEl{{Bb{{j{Eh}}B`}}}}`{An{{Bb{{j{Bl}}B`}}}}{{AnFd}{{Cf{Cd}}}}{BElACj}0{An{{j{h}}}}{BEl{{j{c}}}D`}0{AnBEl}{AnAn}0{BEl{{Bb{FdB`}}}}{An{{Bb{FdB`}}}}{An{{Bb{{j{Ah}}B`}}}}{An{{Bb{{j{Ej}}B`}}}}{{BElAn}{{Bb{AnB`}}}}00{An{{Bb{{j{Ab}}B`}}}}{ce{}{}}00000{{BElEb}{{Bb{AnB`}}}}{{AnEb}{{Bb{AnB`}}}}0{An{{Bb{AJdB`}}}}5{{AnAn}{{Bb{AnB`}}}}{{Anc}{{Bb{AnB`}}}A`}{BEl{{Fh{{Fb{{Cf{Cd}}}}{Ff{{Cf{Cd}}}{{Db{Fd}}}}}}}}{BEl{{Fj{{Cf{Cd}}}}}}0{An{{Fj{{Cf{Cd}}}}}}?{IbIb}{AnAn}{BEl{{ADb{BEl}}}}{{ce}b{}{}}0{Anb}{An{{Bb{{Il{IjIh}}B`}}}}{An{{Bb{{Il{JbIn}}B`}}}}{An{{Bb{{Il{JfJd}}B`}}}}{{}An}{Fdc{}}00{An}111{{Anc}{}{nKh}}{{AnAn}}10{Fdb}00{BElAn}{BElEb}{An{{Bb{{Il{JhIn}}B`}}}}{{IbIb}d}{{AnAn}d}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{AnAf}{{Bb{{j{Ab}}B`}}}}{{AnAn}{{Bb{{j{Ab}}B`}}}}{{Anc}{{Bb{{j{Ab}}B`}}}ALn}31{{Anc}{}ALn}{{AnAf}}66{{ce}d{}{}}00{AnFd}{An{{Bb{AnB`}}}}{{AnAn}{{Bb{AnB`}}}}{{AnHnFd}{{Bb{AnB`}}}}{An{{Bb{{j{Dn}}B`}}}}{An{{Bb{{j{E`}}B`}}}}{BEl{{Dh{Mh}}}}{{AnAEf}{{Bb{AnB`}}}}{{BEl{j{Ab}}}{{Bb{AnB`}}}}{{An{j{Ab}}d}{{Bb{AnB`}}}}{{IbGf}{{Bb{bGh}}}}{{AnGf}{{Bb{bGh}}}}0{AnEd}{cc{}}0{{{Il{JhIn}}}An}1{{{Il{JbIn}}}An}{{{Il{IjIh}}}An}{{{Il{JlIn}}}An}{{{j{c}}}AnD`}{{Af{Al{Hn}}d}{{Bb{AnB`}}}}{{Af{Al{Hn}}Ebd}{{Bb{AnB`}}}}{{Af{Cf{Cd}}}{{Bb{AnB`}}}}{{Af{Fj{{Cf{Cd}}}}Eb}An}{g{{Bb{ic}}}{}{}{{Gl{c}{{Cb{e}}}}}{}}{cAn{{Gd{}{{Cb{Aj}}}}}}{cAn{{Gd{}{{Cb{Ed}}}}}}{cAn{{Gd{}{{Cb{{C`{Ld}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Fn}}}}}}}}{cAn{{Gd{}{{Cb{d}}}}}}{cAn{{Gd{}{{Cb{Ll}}}}}}{cAn{{Gd{}{{Cb{{C`{M`}}}}}}}}{cAn{{Gd{}{{Cb{Lh}}}}}}{cAn{{Gd{}{{Cb{{C`{Id}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Lh}}}}}}}}{cAn{{Gd{}{{Cb{Fn}}}}}}{cAn{{Gd{}{{Cb{Kj}}}}}}{cAn{{Gd{}{{Cb{M`}}}}}}{cAn{{Gd{}{{Cb{If}}}}}}{cAn{{Gd{}{{Cb{Af}}}}}}{cAn{{Gd{}{{Cb{{C`{Aj}}}}}}}}{cAn{{Gd{}{{Cb{Ld}}}}}}<{cAn{{Gd{}{{Cb{Lj}}}}}}{cAn{{Gd{}{{Cb{{C`{Ll}}}}}}}}{cAn{{Gd{}{{Cb{Id}}}}}}<936207{cAn{{Gd{}{{Cb{{C`{Kj}}}}}}}}{cAn{{Gd{}{{Cb{{C`{Lj}}}}}}}}{cAn{{Gd{}{{Cb{{C`{d}}}}}}}}{cAn{{Gd{}{{Cb{Aj}}}}}}{cAn{{Gd{}{{Cb{Ll}}}}}}{cAn{{Gd{}{{Cb{{C`{If}}}}}}}}>{{Af{Fj{Lj}}}An}{{Af{Fj{Kj}}}An}{{Af{Fj{Ld}}}An}{{Af{Fj{Fn}}}An}{{Af{Fj{Ll}}}An}{{Af{Fj{M`}}}An}{{Af{Fj{Aj}}}An}{{Af{Fj{If}}}An}{{Af{Fj{Id}}}An}{{Af{Fj{Lh}}}An}{{AfFdEb}An}{{AnFdFd}An}{{BElFd}{{Bb{HnB`}}}}{AnFd}{AnBn}{{BElFd}{{C`{I`}}}}{{BElFdFd}{{C`{I`}}}}{{BElFd}Hn}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{AnAn}{{Bb{{j{Ab}}B`}}}}{{AnAf}{{Bb{{j{Ab}}B`}}}}{{Anc}{{Bb{{j{Ab}}B`}}}ALn}32{{AnAf}}1{BEld}{{Ibc}bAFf}{{An{C`{Fd}}}An}{An{{Bb{{j{Lb}}B`}}}}{An{{Bb{{j{Ih}}B`}}}}{An{{Bb{{j{In}}B`}}}}{An{{Bb{{j{Ln}}B`}}}}{An{{Bb{{j{Eh}}B`}}}}`{An{{Bb{{j{h}}B`}}}}{{}Fd}00{ce{}{}}00{AnANl}1{B@dAn}{AnAn}={An{{Bb{{j{Ab}}B`}}}}000{BEl{{j{Ab}}}}0{{}d}0{AnIb}{AnDFd}{BElFd}{{BElFd}An}<{AnBFh}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{AnAf}}{{AnAn}{{Bb{{j{Ab}}B`}}}}{{Anc}{{Bb{{j{Ab}}B`}}}ALn}3102{An{{Bb{{C`{c}}B`}}}Kh}{BEl{{Bb{AnB`}}}}{BEl{{C`{Kj}}}}?0121{{Anc}{}{nKh}}0{{AnAn}}0;{BEl{{Bb{FdB`}}}}{BElAf}{{Afc}An{{Gn{{Al{AMj}}}}}}{{Afc}An{{Gn{{Al{Ll}}}}}}{{Afc}An{{Gn{{Al{{C`{An}}}}}}}}{{Afc}An{{Gn{{Al{{C`{If}}}}}}}}{{Afc}An{{Gn{{Al{An}}}}}}{{Afc}An{{Gn{{Al{{C`{Aj}}}}}}}}{{Af{Kl{Lj}}}An}{{Afc}An{{Gn{{Al{Kj}}}}}}{{Afc}An{{Gn{{Al{{C`{Ll}}}}}}}}{{Afc}An{{Gn{{Al{AIl}}}}}}{{Afc}An{{Gn{{Al{Id}}}}}}{{Afc}An{{Gn{{Al{Ld}}}}}}{{Afc}An{{Gn{{Al{{C`{d}}}}}}}}{{Afc}An{{Gn{{Al{AMh}}}}}}{{Afc}An{{Gn{{Al{AJ`}}}}}}{{Afc}An{{Gn{{Al{{Dh{{Al{Aj}}}}}}}}}}{{Afc}An{{Gn{{Al{M`}}}}}}{{Afc}An{{Gn{{Al{Lh}}}}}}{{Afc}An{{Gn{{Al{{C`{Lj}}}}}}}}{{Af{Kl{If}}}An}{{Afc}An{{Gn{{Al{{C`{Kj}}}}}}}}{{Afc}An{{Gn{{Al{Lj}}}}}}{{Afc}An{{Gn{{Al{{C`{{Dh{Af}}}}}}}}}}{{Afc}An{{Gn{{Al{Af}}}}}}{{Afc}An{{Gn{{Al{If}}}}}}{{Afc}An{{Gn{{Al{Ed}}}}}}{{Afc}An{{Gn{{Al{Fn}}}}}}{{Afc}An{{Gn{{Al{{C`{AIl}}}}}}}}{{Afc}An{{Gn{{Al{d}}}}}}{{Afc}An{{Gn{{Al{{C`{Fn}}}}}}}}{{AfAn}An}{{Afc}An{{Gn{{Al{Aj}}}}}}{{Afc}An{{Gn{{Al{{C`{{Al{Aj}}}}}}}}}}{{Afc}An{{Gn{{Al{{C`{AJ`}}}}}}}}{{Afc}An{{Gn{{Al{{Fj{Aj}}}}}}}}{{Afc}An{{Gn{{Al{{C`{AMh}}}}}}}}{{Afc}An{{Gn{{Al{{C`{Id}}}}}}}}{{Afc}An{{Gn{{Al{{Dh{Af}}}}}}}}{{Afc}An{{Gn{{Al{{C`{Af}}}}}}}}{{Afc}An{{Gn{{Al{{C`{{Dh{{Al{Aj}}}}}}}}}}}}{{Afc}An{{Gn{{Al{{C`{AMj}}}}}}}}{{Af{Kl{Fn}}}An}{{Afc}An{{Gn{{Al{{C`{{Fj{Aj}}}}}}}}}}{{Afc}An{{Gn{{Al{{Al{Aj}}}}}}}}{{Afc}An{{Gn{{Al{{C`{Ld}}}}}}}}{{Af{Kl{Ll}}}An}{{Afc}An{{Gn{{Al{{C`{M`}}}}}}}}{{Afc}An{{Gn{{Al{Hn}}}}}}{{Afc}AnB@d}{{Afc}An{{Gn{{Al{{C`{Lh}}}}}}}}{{Afc}An{{Gn{{Al{{C`{Ed}}}}}}}}{{AfEb}An}{{BElFdFd}An}{{AfFd}An}{DFdC`}{{{AEh{}{{Cb{c}}}}e}c{}{}}{{AnAf}{{Bb{{j{Ab}}B`}}}}{{AnAn}{{Bb{{j{Ab}}B`}}}}{{Anc}{{Bb{{j{Ab}}B`}}}ALn}3{{AnAf}}2{{Anc}{}ALn}{An{{Bb{AB`B`}}}}{BElFd}`{An{{Cf{Jj}}}}{An{{Bb{AnB`}}}}{{BElKjMf}{{Bb{AnB`}}}}{BElAn}{{Anc}{}{nKh}}0{{AnAn}}{{BElAf}b}{{AnAf}An}{{An{Al{Fn}}}{{Bb{AnB`}}}}5{IbIb}{{BElDdMj}{{Bb{AnB`}}}}{{AnKjdd{C`{If}}}{{Bb{AnB`}}}}{{AnFddd{C`{If}}}{{Bb{AnB`}}}}{{AnIb}b}{{BElFn}An}{BElb}{Anb}{{An{C`{If}}}An}{DFd{{Gb{Fd{C`{Fd}}}}}}{{BElFnFd}An}{{AnEf}{{Bb{AnB`}}}}{{BElEf}{{Bb{AnB`}}}}{{BElAj}{{C`{Kj}}}}{{BElAj}{{Bb{AnB`}}}}{An{{Bb{{j{Ad}}B`}}}}{{AnFd}{{Bb{{Dh{Af}}B`}}}}{{AnEb}{{Bb{AnB`}}}}{An{{Bb{AJbB`}}}}{{Anc}{}{nKh}}{{AnAn}}01{An{{Bb{cB`}}}Kh}{An{{Bb{AnB`}}}}{{An{C`{Fd}}}An}{{BEl{j{Eh}}}{{Bb{AnB`}}}}{{An{Al{N`}}Ib}An}{{An{Al{N`}}}An}{{BEl{Al{Lj}}}{{Bb{AnB`}}}}{{BEl{Al{Lj}}}An}{{An{Al{Lj}}d}An}{{An{j{Eh}}d}{{Bb{AnB`}}}}{{BEl{j{Eh}}}An}{{An{Al{Lj}}}An}{{An{j{Eh}}d}An}{An{{Bb{{Il{JlIn}}B`}}}}{{AnFdd}{{Cf{Cd}}}}{{An{C`{Af}}d}{{Bb{ANlB`}}}}>{ce{}{}}0{An{{Dh{An}}}}{cEd{}}{{AnAn}{{Bb{AnB`}}}}{c{{Bb{e}}}{}{}}00{{{Gb{AMb{Cf{Cd}}}}}{{Bb{AnB`}}}}{{{Gb{Af{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}{{{Gb{AMb{Fj{{Cf{Cd}}}}}}}{{Bb{AnB`}}}}{{{Gb{Af{Cf{Cd}}}}}{{Bb{AnB`}}}}444{cOd{}}00{An{{Bb{{j{Lf}}B`}}}}{An{{Bb{{j{Eh}}B`}}}}{An{{Bb{{j{L`}}B`}}}}{An{{Bb{{j{Kn}}B`}}}}{BEl{{Bb{AnB`}}}}{An{{Bb{AnB`}}}}{BEl{{Bb{{j{c}}B`}}}D`}`{{BElAj}{{C`{Kj}}}}{{BElAj}{{Bb{AnB`}}}}{ce{}{}}00{{AnAf}An}{{Anc}An{nKh}}{{An{j{Ab}}An}{{Bb{AnB`}}}}````{{AnAnc}An{{Dl{AnAn}{{Db{An}}}}}}{{{BFj{}{{Db{c}}}}An}c{}}{{BFlAn}{{Bb{AnB`}}}}{{{j{Bd}}An}{{Bb{AnB`}}}}`210210210210``{{BMjAn}{{Bb{AnB`}}}}{{{j{F`}}An}{{Bb{AnB`}}}}{{BMjc}{{Bb{AnB`}}}A`}{{{j{F`}}c}{{Bb{AnB`}}}A`}```{{cf}b{}}<<{CFlCFl}{{ce}b{}{}}{{}CFl}{Fdc{}}0{Fdb}{{CFlCFl}d}{{ce}d{}{}}00{{CFlGf}{{Bb{bGh}}}}{cc{}}{{CFlc}bAFf}{{}Fd}{ce{}{}}0{c{{Bb{e}}}{}{}}0{cOd{}}2``>{DjAn}033{DjDj}>1<<;754{AnDj}{{Dj{Cf{Cd}}}b}65546{{Dj{Cf{Cd}}e}c{}{{Dd{Dj}{{Db{c}}}}}}","D":"AEJfHj","p":[[1,"unit"],[1,"bool"],[5,"Private",9944],[5,"ListType",1683],[5,"ChunkedArray",17],[10,"PolarsNumericType",1683],[10,"Num",9945],[10,"ToPrimitive",9946],[5,"BooleanType",1683],[5,"StringType",1683],[1,"str"],[5,"BinaryType",1683],[1,"u8"],[1,"slice"],[5,"Series",9466],[6,"PolarsError",3064],[6,"Result",9947],[10,"NumOpsDispatchInner",9867],[5,"ObjectType",1683],[6,"GroupsProxy",3441],[10,"PolarsObject",1254],[5,"FixedSizeListType",1683],[5,"Settings",17],[6,"Option",9948],[17,"Item"],[10,"Array",9949],[5,"Box",9950],[10,"Iterator",9951],[5,"AmortizedListIter",9952],[17,"Structure"],[5,"Flat",1683],[10,"PolarsDataType",1683],[17,"Output"],[10,"Fn",9953],[10,"Copy",9954],[6,"Cow",9955],[5,"UnstableSeries",9920],[10,"FnMut",9953],[5,"Float32Type",1683],[5,"Float64Type",1683],[6,"DataType",1683],[5,"String",9956],[5,"SortOptions",1376],[5,"UInt32Type",1683],[5,"BinaryOffsetType",1683],[5,"SortMultipleOptions",1376],[10,"PolarsIntegerType",1683],[10,"NumOpsDispatchCheckedInner",9888],[5,"Iter",9957],[1,"usize"],[1,"fn"],[5,"Map",9958],[5,"Vec",9959],[10,"DoubleEndedIterator",9960],[1,"i64"],[5,"OffsetsBuffer",9961],[1,"tuple"],[10,"IntoIterator",9962],[5,"Formatter",9963],[5,"Error",9963],[17,"Array"],[10,"FallibleIterator",9964],[10,"AsRef",9965],[5,"Bitmap",9966],[10,"Borrow",9967],[10,"PolarsAsRef",1682],[10,"IntoParallelIterator",9968],[10,"Send",9954],[10,"Sync",9954],[10,"TrustedLen",9969],[6,"AnyValue",1683],[10,"PolarsObjectSafe",1254],[6,"IsSorted",9466],[1,"f32"],[1,"u64"],[5,"Int32Type",1683],[5,"DateType",1683],[5,"Logical",1683],[5,"Int64Type",1683],[6,"TimeUnit",1683],[5,"DatetimeType",1683],[5,"Int128Type",1683],[5,"DecimalType",1683],[5,"DurationType",1683],[10,"ExactSizeIterator",9970],[5,"TimeType",1683],[10,"PolarsFloatType",1683],[10,"PolarsIterator",1182],[5,"Iter",9971],[5,"IterNames",9971],[6,"ChunkedArrayLayout",17],[10,"NumCast",9946],[1,"f64"],[5,"Range",9972],[5,"UInt8Type",1683],[5,"UInt64Type",1683],[5,"Int16Type",1683],[1,"i16"],[5,"UInt16Type",1683],[1,"u16"],[1,"u32"],[1,"i32"],[5,"Int8Type",1683],[1,"i8"],[10,"ParallelIterator",9968],[10,"IndexedParallelIterator",9968],[6,"QuantileInterpolOptions",3805],[5,"Field",1683],[5,"RollingOptionsFixedWindow",3805],[10,"PolarsOpsNumericType",9973],[10,"Sized",9954],[5,"ChunkId",3805],[10,"NotSpecialized",9974],[5,"RandomState",9975],[5,"BytesHash",9976],[5,"ViewRepr",9977],[1,"array"],[5,"Dim",9978],[5,"ArrayBase",9977],[5,"OwnedRepr",9979],[6,"Either",9980],[5,"TypeId",9981],[5,"NullableIdxSize",3805],[10,"FnOnce",9953],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",864],[5,"AnonymousListBuilder",892],[5,"AnonymousOwnedListBuilder",892],[5,"ListBooleanChunkedBuilder",892],[5,"ListPrimitiveChunkedBuilder",892],[10,"ListBuilderTrait",892],[10,"ChunkedBuilder",892],[5,"ListStringChunkedBuilder",892],[5,"ListBinaryChunkedBuilder",892],[5,"ListNullChunkedBuilder",892],[5,"BinViewChunkedBuilder",892],[10,"ViewType",9982],[5,"BooleanChunkedBuilder",892],[5,"NullChunkedBuilder",892],[5,"PrimitiveChunkedBuilder",892],[10,"Clone",9983],[5,"NullChunked",9984],[10,"NewChunkedArray",892],[10,"ChunkedCollectInferIterExt",1166],[10,"ChunkedCollectIterExt",1166],[10,"Canonical",1180],[5,"BooleanArray",9985],[5,"BoolIterNoNull",1182],[5,"FixedSizeListArray",9986],[5,"FixedSizeListIterNoNull",1182],[5,"StructIter",1182],[5,"SomeIterator",1182],[5,"ObjectArray",1254],[6,"ArrowDataType",1683],[10,"Any",9981],[10,"Debug",9963],[5,"BitmapIter",9987],[6,"ZipValidity",9988],[5,"Arc",3805],[5,"ObjectChunkedBuilder",1325],[10,"AnonymousObjectBuilder",1348],[5,"ObjectRegistry",1348],[17,"FuncRet"],[10,"ChunkApply",1376],[10,"ChunkApplyKernel",1376],[10,"ChunkSort",1376],[10,"ChunkUnique",1376],[10,"ChunkCast",1376],[6,"FillNullStrategy",1376],[10,"ChunkCompare",9466],[10,"ChunkExplode",1376],[10,"ChunkFillNullValue",1376],[10,"ChunkFilter",1376],[10,"ChunkFull",1376],[10,"ChunkFullNull",1376],[10,"ChunkAnyValue",1376],[10,"Hasher",9989],[10,"IsFirstDistinct",1376],[10,"IsLastDistinct",1376],[10,"ChunkAgg",1376],[10,"ChunkQuantile",1376],[10,"ChunkExpandAtIndex",1376],[10,"Reinterpret",1376],[10,"ChunkReverse",1376],[10,"ChunkRollApply",1376],[10,"ChunkSet",1376],[10,"ChunkShift",1376],[10,"ChunkShiftFill",1376],[10,"SlicedArray",1376],[10,"ChunkVar",1376],[10,"ChunkTake",1376],[10,"ChunkTakeUnchecked",1376],[10,"ChunkBytes",1376],[10,"ChunkZip",1376],[10,"BinaryFnMut",1575],[10,"StaticArray",1683],[10,"TernaryFnMut",1575],[10,"Error",9990],[10,"UnaryFnMut",1575],[5,"PrimitiveArray",9991],[6,"SearchSortedSide",1615],[5,"NoNull",3805],[5,"RowsEncoded",9992],[5,"NaiveDateTime",9993],[6,"Tz",9994],[5,"NaiveTime",9995],[5,"StructChunked",1683],[5,"CategoricalChunked",1683],[5,"CategoricalChunkedBuilder",1683],[10,"ArrayFromIter",1683],[10,"ArrayFromIterDtype",1683],[10,"AsRefDataType",1683],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",9996],[10,"From",9965],[5,"BinaryViewArrayGeneric",9982],[6,"RevMapping",1683],[10,"CategoricalMergeOperation",1683],[10,"LogicalType",1683],[6,"CategoricalOrdering",1683],[5,"OwnedObject",1683],[6,"UnknownKind",1683],[5,"CategoricalType",1683],[6,"ArrowTimeUnit",1683],[10,"ArrayCollectIterExt",1683],[5,"GlobalRevMapMerger",1683],[10,"NumericNative",1683],[10,"Into",9965],[5,"ArrowField",3805],[6,"IntegerType",9997],[6,"PrimitiveType",9998],[5,"TimeDelta",9999],[5,"NaiveDate",10000],[5,"LazyCompact",10001],[5,"SmartString",10002],[10,"GetAnyValue",1683],[5,"CatIter",1683],[6,"Ordering",10003],[5,"Duration",3805],[1,"u128"],[6,"PhysicalType",9997],[5,"DataFrame",3157],[5,"StringCacheHolder",3042],[5,"ErrString",3064],[6,"PolarsWarning",3064],[6,"Error",10004],[5,"Utf8Error",10005],[5,"Error",10006],[5,"Error",10007],[6,"Error",10008],[5,"TryReserveError",10009],[10,"Display",9963],[5,"Schema",3805],[10,"IntoSeries",9466],[6,"NullStrategy",3157],[6,"UniqueKeepStrategy",3157],[5,"HashSet",10010],[5,"ArrowSchema",3805],[5,"Row",3696],[5,"GroupBy",3441],[5,"DynamicGroupOptions",3805],[5,"RangeFull",9972],[5,"RangeToInclusive",9972],[5,"RangeFrom",9972],[5,"RangeTo",9972],[5,"RangeInclusive",9972],[5,"RecordBatchIter",3157],[5,"PhysRecordBatchIter",3157],[5,"LazyFrame",3805],[10,"IntoVec",3805],[5,"MeltArgs",3412],[5,"RollingGroupOptions",3805],[10,"RangeBounds",9972],[6,"IndexOrder",3805],[5,"StructArray",3805],[5,"RecordBatch",10011],[5,"GroupsIdx",3441],[5,"UnitVec",10012],[6,"GroupByMethod",3441],[5,"SlicedGroups",3441],[5,"GroupsProxyParIter",3441],[10,"UnindexedConsumer",10013],[6,"GroupsIndicator",3441],[6,"AAggExpr",10014],[10,"IntoGroupsProxy",3441],[5,"Copied",10015],[5,"Zip",10016],[5,"GroupsProxyIter",3441],[10,"IsFloat",10017],[10,"NativeType",10018],[10,"AggList",3680],[10,"TakeExtremum",3680],[10,"PhysicalAggExpr",3693],[6,"AnyValueBuffer",3696],[6,"AnyValueBufferTrusted",3696],[10,"JoinDispatch",3805],[5,"JoinArgs",3805],[10,"SeriesTrait",9466],[10,"DfTake",3805],[10,"DataFrameOps",3805],[5,"CsvReader",3805],[6,"CommentPrefix",3805],[10,"MmapBytesReader",10019],[6,"Expr",3805],[10,"LhsNumOps",9867],[10,"NumOpsDispatch",9867],[5,"LazyGroupBy",3805],[10,"Allocator",10020],[5,"JoinBuilder",3805],[10,"AnonymousScan",3805],[5,"LazyJsonLineReader",3805],[5,"ScanArgsAnonymous",3805],[10,"FunctionOutputField",3805],[5,"SpecialEq",3805],[6,"VisitRecursion",10021],[6,"FunctionExpr",3805],[10,"ArgAgg",3805],[5,"ArrayNameSpace",3805],[5,"ListNameSpace",3805],[5,"IpcStreamReader",3805],[10,"Read",10022],[10,"SeriesUdf",3805],[10,"AsBinary",3805],[10,"StringMethods",8714],[10,"PhysicalExpr",3805],[5,"BorrowedFd",10023],[10,"AsFd",10023],[10,"AsList",3805],[10,"PartitionedAggregation",3805],[10,"AsRawFd",10024],[6,"AggExpr",3805],[10,"SeriesSealed",3805],[10,"StatsEvaluator",10025],[5,"PhysicalIoHelper",3805],[10,"AsString",3805],[20,"MaybeUninit",10026],[10,"StringNameSpaceImpl",3805],[5,"CsvWriter",3805],[5,"BatchedWriter",10027],[10,"Write",10022],[5,"IpcWriter",3805],[5,"BatchedWriter",10028],[5,"ParquetReader",3805],[5,"BatchedParquetReader",3805],[5,"ParquetWriter",3805],[5,"BatchedWriter",10029],[5,"BatchedCsvReaderMmap",3805],[5,"BatchedCsvReaderRead",3805],[5,"OwnedBatchedCsvReaderMmap",3805],[5,"OwnedBatchedCsvReader",3805],[5,"BinaryNameSpace",8697],[6,"Operator",3805],[10,"RenameAliasFn",3805],[5,"UserDefinedFunction",3805],[10,"SeriesBinaryUdf",3805],[5,"InProcessQuery",3805],[5,"HashMap",10030],[5,"CategoricalNameSpace",3805],[10,"RoundSeries",3805],[10,"TemporalMethods",9350],[10,"NumOpsDispatchChecked",9888],[5,"RollingOptionsImpl",3805],[5,"Bounds",3805],[6,"ClosedWindow",3805],[6,"Label",3805],[6,"StartBy",3805],[5,"Window",3805],[5,"CsvParserOptions",3805],[6,"CsvEncoding",3805],[5,"UnionArgs",3805],[6,"NullValues",3805],[5,"CsvWriterOptions",3805],[5,"SerializeOptions",3805],[6,"InterpolationMethod",3805],[6,"QuoteStyle",3805],[5,"IpcScanOptions",3805],[5,"IpcWriterOptions",3805],[6,"JoinType",3805],[6,"IpcCompression",3805],[6,"JoinValidation",3805],[5,"JsonWriterOptions",3805],[5,"AsOfOptions",3805],[6,"AsofStrategy",3805],[5,"ParquetOptions",3805],[6,"ParallelStrategy",3805],[6,"ClosedInterval",3805],[5,"ParquetWriteOptions",3805],[6,"ParquetCompression",3805],[6,"RankMethod",3805],[5,"LazyCsvReader",3805],[5,"RankOptions",3805],[5,"GzipLevel",3805],[5,"ScanArgsIpc",3805],[5,"BrotliLevel",3805],[5,"ZstdLevel",3805],[5,"ScanArgsParquet",3805],[6,"DslPlan",3805],[5,"When",3805],[5,"Then",3805],[5,"ChainedWhen",3805],[5,"ChainedThen",3805],[6,"Excluded",3805],[6,"BooleanFunction",3805],[5,"DatetimeArgs",3805],[5,"DurationArgs",3805],[5,"RollingCovOptions",3805],[5,"StrptimeOptions",3805],[5,"JoinOptions",3805],[6,"WindowType",3805],[6,"WindowMapping",3805],[5,"OptState",3805],[6,"LiteralValue",3805],[5,"AnonymousScanOptions",3805],[5,"FileMetaData",3805],[5,"RollingVarParams",3805],[5,"RollingQuantileParams",3805],[6,"NonExistent",3805],[10,"LazyFileListReader",3805],[5,"CloudOptions",8875],[10,"Ord",10003],[6,"ColumnOrder",10031],[10,"BinaryNameSpaceImpl",3805],[5,"PathBuf",10032],[5,"IpcStreamWriterOption",3805],[10,"SerWriter",3805],[5,"IpcWriterOption",3805],[10,"CrossJoin",3805],[10,"ExprEvalExtension",3805],[10,"DateMethods",8714],[10,"DatetimeMethods",8714],[10,"DurationMethods",8714],[10,"BinaryUdfOutputField",3805],[10,"Default",10033],[6,"NullBehavior",9894],[5,"DotNode",10034],[5,"Weak",10035],[5,"DateLikeNameSpace",9229],[1,"char"],[10,"FromIterator",9962],[10,"PartialEq",10003],[10,"Scalar",10036],[10,"ListNameSpaceExtension",3805],[5,"ExecutionState",10037],[5,"AggregationContext",3805],[10,"Command",10038],[5,"StructNameSpace",3805],[10,"SerReader",3805],[5,"IpcReader",3805],[5,"IpcStreamWriter",3805],[5,"JsonWriter",3805],[5,"JsonReader",3805],[5,"JsonLineReader",3805],[10,"PhysicalIoExpr",10025],[5,"File",10039],[10,"UdfSchema",3805],[6,"ListFunction",10040],[6,"RangeFunction",10041],[6,"BinaryFunction",10042],[6,"ArrayFunction",10043],[6,"CategoricalFunction",10044],[6,"StructFunction",10045],[6,"StringFunction",10046],[6,"TemporalFunction",10047],[1,"never"],[5,"Path",10032],[5,"OsStr",10048],[5,"OsString",10048],[10,"ToOwned",9955],[5,"CStr",10049],[5,"CString",10050],[5,"GrowableStruct",10051],[5,"MutableStructArray",10052],[10,"FromData",9223],[5,"Buffer",10053],[10,"FromDataUtf8",9223],[10,"FromDataBinary",9223],[5,"ListArray",10054],[6,"Ambiguous",3805],[10,"NamedFromOwned",3805],[5,"FunctionOptions",10055],[10,"PartialOrd",10003],[6,"Context",10056],[5,"FieldsMapper",3805],[10,"IndexOfSchema",3805],[5,"BoundsIter",3805],[6,"ReaderBytes",10019],[10,"PolarsTemporalGroupby",3805],[10,"PolarsArray",3805],[10,"Hash",9989],[10,"SeriesJoin",3805],[10,"TimeMethods",8714],[10,"DataFrameJoinOps",3805],[10,"IntoListNameSpace",3805],[5,"FileMetaData",10057],[10,"SeriesMethods",3805],[5,"StructValueIter",10058],[10,"AsofJoin",3805],[10,"AsofJoinBy",3805],[10,"ListNameSpaceImpl",3805],[5,"ExprNameNameSpace",3805],[5,"KeyValue",10057],[10,"IntoLazy",3805],[10,"Literal",3805],[5,"Null",3805],[5,"RowIndex",10059],[10,"ChunkAggSeries",3805],[10,"QuantileAggSeries",3805],[10,"PolarsMonthEnd",3805],[10,"PolarsMonthStart",3805],[10,"IndexToUsize",3805],[10,"NamedFrom",3805],[6,"RowGroupFetcher",10060],[6,"IR",10061],[5,"Arena",10062],[6,"AExpr",10014],[5,"Node",10062],[5,"Pin",10063],[5,"Request",9990],[10,"SeriesRank",3805],[5,"BorrowedCursor",10064],[10,"VarInt",10065],[5,"IoSliceMut",10022],[10,"SeriesOpsTime",8714],[5,"RollingOptions",8714],[10,"PolarsRound",3805],[5,"AnonymousScanArgs",3805],[10,"ChunkedSet",3805],[5,"SchemaDescriptor",10066],[6,"SeekFrom",10022],[10,"VarAggSeries",3805],[5,"StringNameSpace",10067],[10,"TakeChunked",3805],[10,"ToDummies",3805],[10,"PolarsTruncate",3805],[5,"AllocError",10020],[5,"RwLock",10068],[10,"PolarsUpsample",3805],[10,"VecHash",3805],[5,"NonZero",10069],[6,"JsonFormat",3805],[5,"BTreeMap",10070],[5,"IoSlice",10022],[10,"ArrayNameSpace",8678],[10,"AsArray",8678],[10,"AsString",8807],[6,"Pattern",8807],[5,"DatetimeInfer",8845],[10,"StrpTimeParser",8845],[17,"Error"],[10,"TryFromWithUnit",8845],[6,"CloudType",8875],[5,"AnonymousBuilder",9284],[5,"MutableNullArray",9314],[5,"MutableBitmap",10071],[10,"AsSeries",9350],[5,"Utf8Array",10072],[5,"BinaryArray",10073],[5,"SeriesIter",9466],[8,"FillNullLimit",1376],[10,"InitHashMaps",1683],[10,"InitHashMaps2",1683],[5,"Nested",1683],[8,"PolarsResult",3064],[15,"IO",8626],[15,"Context",8626],[15,"Count",8619],[15,"Slice",8620],[8,"ChunkJoinOptIds",3805],[8,"DynArgs",3805],[8,"AllowedOptimizations",3805],[10,"ListFromIter",3805],[15,"Quantile",8503],[15,"Min",8503],[15,"Max",8503],[15,"IsBetween",8510],[15,"Any",8510],[15,"All",8510],[15,"GroupBy",8513],[15,"Sort",8513],[15,"Cache",8513],[15,"ExtContext",8513],[15,"DataFrameScan",8513],[15,"Select",8513],[15,"HStack",8513],[15,"Scan",8513],[15,"MapFunction",8513],[15,"Filter",8513],[15,"Distinct",8513],[15,"Slice",8513],[15,"Sink",8513],[15,"Join",8513],[15,"Union",8513],[15,"HConcat",8513],[15,"SortBy",8565],[15,"Filter",8565],[15,"Cast",8565],[15,"Sort",8565],[15,"Gather",8565],[15,"RenameAlias",8565],[15,"Ternary",8565],[15,"Function",8565],[15,"Window",8565],[15,"AnonymousFunction",8565],[15,"Slice",8565],[15,"BinaryExpr",8565],[15,"Round",8599],[15,"RoundSF",8599],[15,"Clip",8599],[15,"BackwardFill",8599],[15,"ForwardFill",8599],[15,"Random",8599],[15,"GatherEvery",8599],[15,"Rank",8599],[15,"ValueCounts",8599],[15,"Replace",8599],[15,"CumCount",8599],[15,"CumSum",8599],[15,"CumProd",8599],[15,"CumMin",8599],[15,"CumMax",8599],[15,"Outer",8622],[15,"Range",8623],[10,"Utf8FromIter",9462],[10,"BinaryFromIter",9462]],"b":[[31,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[32,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[33,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[34,"impl-Add-for-ChunkedArray%3CStringType%3E"],[35,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[36,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CT%3E"],[38,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[39,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[40,"impl-Add-for-ChunkedArray%3CT%3E"],[41,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[42,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[49,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[50,"impl-AggList-for-ChunkedArray%3CT%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[56,"impl-ChunkedArray%3CFixedSizeListType%3E"],[57,"impl-ChunkedArray%3CListType%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[65,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[66,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[68,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFixedSizeListType%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CFloat64Type%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[81,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[83,"impl-ChunkedArray%3CBinaryType%3E"],[84,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkedArray%3CListType%3E"],[89,"impl-ChunkedArray%3CFixedSizeListType%3E"],[90,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[93,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[94,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[98,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[99,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[100,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[101,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[110,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[113,"impl-ChunkUnique%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[114,"impl-ChunkUnique%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[115,"impl-ChunkUnique%3CT%3E-for-ChunkedArray%3CT%3E"],[116,"impl-ChunkUnique%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[117,"impl-ChunkUnique%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[121,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[138,"impl-Flags-for-Settings"],[139,"impl-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[141,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[142,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[193,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[194,"impl-Div-for-%26ChunkedArray%3CT%3E"],[195,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[196,"impl-Div-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[211,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[212,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[213,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[214,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[215,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[221,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[222,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[228,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[229,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[232,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[233,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[234,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[237,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[238,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[241,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[242,"impl-Debug-for-ChunkedArray%3CListType%3E"],[243,"impl-Debug-for-ChunkedArray%3CT%3E"],[244,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[245,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[248,"impl-Binary-for-Settings"],[249,"impl-Octal-for-Settings"],[250,"impl-LowerHex-for-Settings"],[251,"impl-Debug-for-Settings"],[252,"impl-UpperHex-for-Settings"],[254,"impl-ChunkedArray%3CListType%3E"],[255,"impl-ChunkedArray%3CFixedSizeListType%3E"],[261,"impl-Flags-for-Settings"],[262,"impl-Settings"],[270,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[271,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[272,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[273,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[275,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[277,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[278,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[284,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[285,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[289,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[291,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[293,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[296,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[297,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[298,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[299,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[303,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[304,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[305,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[307,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[308,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[309,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[310,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[311,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[312,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[313,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[315,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[316,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[317,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[318,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[319,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[320,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[321,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[322,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[323,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[324,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[325,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[326,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[330,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[331,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[333,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[334,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[335,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[336,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[346,"impl-ChunkedArray%3CFixedSizeListType%3E"],[347,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-ChunkedArray%3CFixedSizeListType%3E"],[366,"impl-ChunkedArray%3CListType%3E"],[368,"impl-ChunkedArray%3CFixedSizeListType%3E"],[369,"impl-ChunkedArray%3CListType%3E"],[374,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[378,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[387,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[388,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[389,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[390,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[391,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[392,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[393,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[394,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[395,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[396,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[397,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[398,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[399,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[400,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[401,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[402,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[403,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[404,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[411,"impl-ChunkedArray%3CListType%3E"],[412,"impl-ChunkedArray%3CFixedSizeListType%3E"],[424,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[434,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[467,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[468,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[470,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[471,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[472,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[473,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[474,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[475,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[476,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[477,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[478,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[479,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[480,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[482,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[491,"impl-ChunkedArray%3CBooleanType%3E"],[492,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[494,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[496,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[497,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[499,"impl-ChunkedArray%3CBooleanType%3E"],[500,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[501,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[502,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[503,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[506,"impl-ChunkedArray%3CT%3E"],[507,"impl-ChunkedArray%3CBooleanType%3E"],[508,"impl-Mul-for-ChunkedArray%3CT%3E"],[509,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[510,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[511,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[513,"impl-ChunkUnique%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-ChunkUnique%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[515,"impl-ChunkUnique%3CT%3E-for-ChunkedArray%3CT%3E"],[517,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[519,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[520,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[521,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[522,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[523,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[525,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[527,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[529,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[530,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[531,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[532,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[533,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[538,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[539,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[540,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[541,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[543,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[544,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[545,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[546,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[547,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[548,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[549,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[550,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[551,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[552,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[553,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[554,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[555,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[556,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[558,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[559,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[560,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[561,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[564,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[565,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[570,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[571,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[575,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[580,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[581,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[582,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[584,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[585,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[586,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[587,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[588,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[589,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[590,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[593,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[594,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[597,"impl-ChunkedArray%3CListType%3E"],[598,"impl-ChunkedArray%3CStringType%3E"],[599,"impl-ChunkedArray%3CListType%3E"],[600,"impl-ChunkedArray%3CStringType%3E"],[603,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[604,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[605,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[606,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[607,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[637,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[638,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[639,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[640,"impl-Rem-for-ChunkedArray%3CT%3E"],[644,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[645,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[656,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[657,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[658,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[660,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[661,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[662,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[667,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[668,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[669,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[670,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[677,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[678,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[680,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[681,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[682,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[683,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[684,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[685,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[686,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[687,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[688,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[690,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[691,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[692,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[695,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[696,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[697,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[699,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[700,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[701,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[702,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[703,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[704,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[706,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[710,"impl-Sub-for-ChunkedArray%3CT%3E"],[711,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[712,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[716,"impl-ChunkedArray%3CBooleanType%3E"],[717,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[724,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[725,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[736,"impl-ChunkedArray%3CListType%3E"],[737,"impl-ChunkedArray%3CFixedSizeListType%3E"],[738,"impl-ChunkedArray%3CT%3E"],[739,"impl-ChunkedArray%3CListType%3E"],[746,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[747,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[748,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[749,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[753,"impl-ChunkedArray%3CFixedSizeListType%3E"],[754,"impl-ChunkedArray%3CListType%3E"],[771,"impl-ChunkUnique%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[772,"impl-ChunkUnique%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[773,"impl-ChunkUnique%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[774,"impl-ChunkUnique%3CT%3E-for-ChunkedArray%3CT%3E"],[775,"impl-ChunkUnique%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[781,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[782,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[784,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[798,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[801,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[811,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[813,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[814,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[825,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1035,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1036,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1259,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1260,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1292,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1293,"impl-ObjectArray%3CT%3E"],[1305,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1306,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1316,"impl-ObjectArray%3CT%3E"],[1317,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1319,"impl-ObjectArray%3CT%3E"],[1320,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1322,"impl-ObjectArray%3CT%3E"],[1323,"impl-Array-for-ObjectArray%3CT%3E"],[1326,"impl-ObjectChunkedBuilder%3CT%3E"],[1327,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1329,"impl-ObjectChunkedBuilder%3CT%3E"],[1330,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2056,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2057,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2058,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2059,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2060,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2064,"impl-Logical%3CDurationType,+Int64Type%3E"],[2065,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2306,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2307,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2308,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2309,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2310,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2318,"impl-PartialEq-for-DataType"],[2319,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2325,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2326,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2327,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2329,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2330,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2331,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2365,"impl-Debug-for-AnyValue%3C\'a%3E"],[2366,"impl-Display-for-AnyValue%3C\'_%3E"],[2368,"impl-Debug-for-DataType"],[2369,"impl-Display-for-DataType"],[2371,"impl-Debug-for-TimeUnit"],[2372,"impl-Display-for-TimeUnit"],[2377,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2379,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2392,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[2393,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2396,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2398,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2399,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2401,"impl-From%3C%26ArrowField%3E-for-Field"],[2402,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2425,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2426,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2450,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2451,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2452,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2453,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2454,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2458,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2459,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2460,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2461,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2462,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2497,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2498,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2499,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2501,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2502,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2503,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2602,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2603,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2604,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2605,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2606,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2654,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2655,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2656,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2658,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2659,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2660,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2673,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2674,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2675,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2676,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2699,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2700,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2701,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2702,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2703,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2704,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2705,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2706,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2711,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2713,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2717,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2721,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2722,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2742,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2743,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2750,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2751,"impl-Logical%3CDurationType,+Int64Type%3E"],[2756,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2757,"impl-Logical%3CDateType,+Int32Type%3E"],[2758,"impl-Logical%3CTimeType,+Int64Type%3E"],[2772,"impl-Logical%3CDurationType,+Int64Type%3E"],[2773,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2820,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2821,"impl-Logical%3CDateType,+Int32Type%3E"],[2822,"impl-Logical%3CTimeType,+Int64Type%3E"],[2827,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[2828,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3108,"impl-Debug-for-ErrString"],[3109,"impl-Display-for-ErrString"],[3110,"impl-Display-for-PolarsError"],[3111,"impl-Debug-for-PolarsError"],[3116,"impl-From%3CError%3E-for-PolarsError"],[3117,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3118,"impl-From%3CError%3E-for-PolarsError"],[3119,"impl-From%3CError%3E-for-PolarsError"],[3120,"impl-From%3CError%3E-for-PolarsError"],[3121,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3245,"impl-Display-for-DataFrame"],[3246,"impl-Debug-for-DataFrame"],[3251,"impl-From%3CStructChunked%3E-for-DataFrame"],[3253,"impl-From%3C%26Schema%3E-for-DataFrame"],[3254,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3281,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3282,"impl-Index%3Cusize%3E-for-DataFrame"],[3283,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3284,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3285,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3286,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3287,"impl-Index%3C%26str%3E-for-DataFrame"],[3288,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3378,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3380,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3553,"impl-Debug-for-GroupByMethod"],[3554,"impl-Display-for-GroupByMethod"],[3560,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3561,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3562,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3598,"impl-IntoIterator-for-GroupsIdx"],[3599,"impl-IntoIterator-for-%26GroupsIdx"],[3601,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3602,"impl-IntoParallelIterator-for-GroupsIdx"],[4820,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4821,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5429,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5430,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5431,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5884,"impl-PartialEq-for-Expr"],[5885,"impl-Expr"],[5888,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5889,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[5899,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[5900,"impl-PartialEq-for-Arc%3CT,+A%3E"],[5901,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[5904,"impl-PartialEq-for-StructArray"],[5905,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6155,"impl-Debug-for-Duration"],[6156,"impl-Display-for-Duration"],[6177,"impl-Debug-for-JoinType"],[6178,"impl-Display-for-JoinType"],[6180,"impl-Debug-for-JoinValidation"],[6181,"impl-Display-for-JoinValidation"],[6196,"impl-Display-for-Expr"],[6197,"impl-Debug-for-Expr"],[6199,"impl-Display-for-Operator"],[6200,"impl-Debug-for-Operator"],[6202,"impl-Display-for-BooleanFunction"],[6203,"impl-Debug-for-BooleanFunction"],[6204,"impl-Display-for-FunctionExpr"],[6205,"impl-Debug-for-FunctionExpr"],[6217,"impl-Display-for-Arc%3CT,+A%3E"],[6218,"impl-Pointer-for-Arc%3CT,+A%3E"],[6219,"impl-Debug-for-Arc%3CT,+A%3E"],[6287,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6289,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6330,"impl-From%3CAggExpr%3E-for-Expr"],[6331,"impl-From%3Cf64%3E-for-Expr"],[6333,"impl-From%3Cf32%3E-for-Expr"],[6334,"impl-From%3Cu8%3E-for-Expr"],[6335,"impl-From%3Cu16%3E-for-Expr"],[6336,"impl-From%3C%26str%3E-for-Expr"],[6337,"impl-From%3Cu64%3E-for-Expr"],[6338,"impl-From%3Cbool%3E-for-Expr"],[6339,"impl-From%3Ci16%3E-for-Expr"],[6340,"impl-From%3Ci64%3E-for-Expr"],[6341,"impl-From%3Ci8%3E-for-Expr"],[6342,"impl-From%3Cu32%3E-for-Expr"],[6343,"impl-From%3Ci32%3E-for-Expr"],[6346,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6347,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6348,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6350,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6351,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6352,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6353,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6354,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6355,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6356,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6358,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6360,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6361,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6362,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6375,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6377,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6378,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6379,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6380,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6381,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6382,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6383,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6384,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6385,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6386,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6387,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6388,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6389,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6391,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6396,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6397,"impl-From%3CArrowSchema%3E-for-Schema"],[6398,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6399,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6401,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6402,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6403,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6405,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6419,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6420,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6428,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6429,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6441,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6442,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7483,"impl-Array-for-StructArray"],[7484,"impl-StructArray"],[7492,"impl-Array-for-StructArray"],[7493,"impl-StructArray"],[8150,"impl-StructArray"],[8151,"impl-Array-for-StructArray"],[8389,"impl-LazyCsvReader"],[8390,"impl-LazyFileListReader-for-LazyCsvReader"],[8391,"impl-LazyJsonLineReader"],[8392,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8436,"impl-LazyCsvReader"],[8437,"impl-LazyFileListReader-for-LazyCsvReader"],[8438,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8439,"impl-LazyJsonLineReader"],[8469,"impl-StructArray"],[8470,"impl-Array-for-StructArray"],[8864,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[8865,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[8870,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[8871,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9482,"impl-Add%3CT%3E-for-%26Series"],[9483,"impl-Add-for-%26Series"],[9484,"impl-Add-for-Series"],[9485,"impl-Add%3CT%3E-for-Series"],[9500,"impl-AsSeries-for-Series"],[9501,"impl-SeriesSealed-for-Series"],[9545,"impl-Div%3CT%3E-for-Series"],[9546,"impl-Div-for-%26Series"],[9547,"impl-Div%3CT%3E-for-%26Series"],[9548,"impl-Div-for-Series"],[9558,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9559,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9560,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9562,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9563,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9564,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9581,"impl-Debug-for-Series"],[9582,"impl-Display-for-Series"],[9586,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[9588,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[9589,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[9590,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[9591,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[9597,"impl-FromIterator%3C%26u8%3E-for-Series"],[9598,"impl-FromIterator%3CString%3E-for-Series"],[9599,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[9600,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[9601,"impl-FromIterator%3Cbool%3E-for-Series"],[9602,"impl-FromIterator%3Ci32%3E-for-Series"],[9603,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[9604,"impl-FromIterator%3C%26u16%3E-for-Series"],[9605,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[9606,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[9607,"impl-FromIterator%3Ci64%3E-for-Series"],[9608,"impl-FromIterator%3Cf64%3E-for-Series"],[9609,"impl-FromIterator%3C%26i8%3E-for-Series"],[9610,"impl-FromIterator%3C%26u64%3E-for-Series"],[9611,"impl-FromIterator%3C%26str%3E-for-Series"],[9612,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[9613,"impl-FromIterator%3C%26i16%3E-for-Series"],[9614,"impl-FromIterator%3C%26bool%3E-for-Series"],[9615,"impl-FromIterator%3C%26u32%3E-for-Series"],[9616,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[9617,"impl-FromIterator%3Cf32%3E-for-Series"],[9618,"impl-FromIterator%3Cu16%3E-for-Series"],[9619,"impl-FromIterator%3C%26i64%3E-for-Series"],[9620,"impl-FromIterator%3Ci16%3E-for-Series"],[9621,"impl-FromIterator%3Cu64%3E-for-Series"],[9622,"impl-FromIterator%3Cu32%3E-for-Series"],[9623,"impl-FromIterator%3C%26f32%3E-for-Series"],[9624,"impl-FromIterator%3Ci8%3E-for-Series"],[9625,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[9626,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[9627,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[9628,"impl-FromIterator%3Cu8%3E-for-Series"],[9629,"impl-FromIterator%3C%26i32%3E-for-Series"],[9630,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[9631,"impl-FromIterator%3C%26f64%3E-for-Series"],[9632,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[9633,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[9634,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[9635,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[9636,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[9637,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[9638,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[9639,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[9640,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[9641,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[9651,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9652,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9653,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9655,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9656,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9657,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9694,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9695,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9696,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9698,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9699,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9700,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9709,"impl-Mul%3CT%3E-for-Series"],[9710,"impl-Mul%3CT%3E-for-%26Series"],[9711,"impl-Mul-for-%26Series"],[9712,"impl-Mul-for-Series"],[9716,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[9717,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[9718,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[9719,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[9720,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[9721,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[9722,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[9723,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[9724,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[9725,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[9726,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[9727,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[9728,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[9729,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[9730,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[9731,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[9732,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[9733,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[9734,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[9735,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[9736,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[9737,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[9738,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[9739,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[9740,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[9741,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[9742,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[9743,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[9744,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[9745,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[9746,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[9747,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[9748,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[9749,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[9750,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[9751,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[9752,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[9753,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[9754,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[9755,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[9756,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[9757,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[9758,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[9759,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[9760,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[9761,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[9762,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[9763,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[9764,"impl-NamedFrom%3CT,+T%3E-for-Series"],[9765,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[9766,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[9772,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9773,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9774,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9776,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9777,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9778,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9786,"impl-Rem%3CT%3E-for-Series"],[9787,"impl-Rem%3CT%3E-for-%26Series"],[9788,"impl-Rem-for-%26Series"],[9812,"impl-Sub%3CT%3E-for-%26Series"],[9813,"impl-Sub-for-%26Series"],[9814,"impl-Sub-for-Series"],[9815,"impl-Sub%3CT%3E-for-Series"],[9841,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[9842,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[9843,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[9844,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAJYN3Q0bDh4OHw4gDiEOIg4nDioOLw4wDlUO","e":"OzAAAAEAAMAb+AMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOQAAAD4ABQBIAAIATAAKAFsABwBkAAgAbgAAAHAAAAByAAQAeAALAIYAAgCLAAAAjQACAJIABgCaAAYAogAIAK4ABAC0AAAAuQAHAMIACADNABUA5QAKAPEADwACAQAABgEAAAkBAQANAQ0AHQEQADQBEwBKARIAXgESAHUBAAB3AR4AmAEDAKQBEQC5AQMAwAEBAMUBAQDIAQYA1AEmAP0BBwAGAjIAOwIBAD4CEQBRAgMAVgIEAFwCBQBmAgAAaAIaAIUCBwCRAg4AoQIBAKUCEAC4AhEAzAIGANcCAQDcAgAA3gIBAOUCAQDrAgYA8wIAAPUCAQD4AgoABAMEAAoDAAANAygAOAMAADoDIwBgAzQAlwMIAKQDEQC5A1gAHwQSAD0EBwBGBFgAoAQAAKMEFAC8BAMAxAQDAMoEHgDrBBMAAAUHAAkFAAAMBQEADwUBABMFDgAjBQAAJgUAACgFAgAsBQIAMAUBADMFCAA9BQAAPwUFAEcFAQBKBQAATAUBAE8FAwBUBQMAWQUCAF0FAwBjBQAAZgUAAG4FAABzBQAAdgUBAHsFAQB+BQAAgQUAAIkFAACPBQIAmgUGAKMFDQCzBQUAuwUIAMcFAwDMBQAAzwUAANEFAQDXBQUA4AUBAOkFAQD1BQAA9wUBAPoFAAD9BQAA/wUAAAMGAAAFBgAACgYMABkGAgAmBgAAKAYHADEGAgA3BgAAOQYDAD4GAQBBBgUATQYVAGQGAQBoBgQAbgYDAHQGBwCJBgMAjgYEAJQGAgCYBgQAnwYCAKMGBQCrBgAArQYMAL4GAQDCBgEAyAYBAMsGAQDOBgMA1AYAANcGAgDcBgAA3gYBAOEGAADjBgIA5wYLAPQGAAD2BgEA+QYAAPsGAQD+BgAAAAcBAAMHAAAFBwEACwcAAA8HAQATBwAAFgcAABgHAAAaBwQAIAcAACMHBwAsBwEALwcEADUHAQA5BwAAOwcCAEAHAQBGBwMASwcAAE0HAABPBwEAUgcAAFQHAQBXBwAAWQcBAFwHAABeBwEAYQcAAGMHAABmByUAjQcWAKUHawATCE4AYwgHAG0IlAADCQYACwkoADUJAQA4CQ8ASgkAAEwJAABZCQEAXQkAAF8JAQBiCQEAZQkAAHoJAQB+CQAAhgkAAIkJAACLCQYAkwkEAJkJAACbCQQAoQkBAKQJGQDCCQ4A0wkpAP4JAAApCggANAoAADYKAQA5CgQAPwoBAEQKAABGCgUATQoAAFAKAgBVCgQAWwoAAF0KDwBvCgAAcgoSAIYKAACJCgwAlwoMAKUKAACnCgEAqwoOALsKAADCCgAAxAoAAMkKDwDbCgAA3QoCAOIKIAAIC5AAmgsBAJ0LMwDSCwEA1QsIAN8LAADhCwEA5AsEAOoLAQDvCwAA8QsCAPULAAD5CwQA/wsEAAUMEAAXDBEAKwwAAC0MCQA6DAQAQAwVAFcMAABaDAAAXQwKAGkMAgByDBAAhQwQAJ0MAQChDAIApQwAAKcMAACsDAMAtAwAALYMAgDHDAAAyQwAAMsMAQDSDAwA5QwCAPgMAQAFDQEACQ0AAA8NAAAYDQEAGw0AAB4NAQAlDQAAJw0EAC8NBgA4DQkAQw0AAEYNAQBKDQQAVg0NAGUNAgBqDQoAdg0BAHkNAwB+DQMAgw0JAI4NBwCXDQEAmg0YALQNKADeDQYA6Q0CAO0NAADxDQQA+A0BAP0NBwANDg0AHA4BACMOAwAoDgEALA4CADEOAAAzDh8AVg4MAGUOBQBsDgcAdQ4jAJsOCwCoDg4AuA4BALwOAwDDDgYAzQ4OAN4OBgDnDgAA6g4IAPQOAQD4DgMA/Q4FAAQPAAAJDwkAFA8BABgPAwAdDwEAIA8KACwPAAAvDwAAMQ8JADwPAAA+DwcARw8CAE4PAABRDwAAWQ8CAGAPAABjDwEAaQ8JAHQPCgCCDwYAig8BAI0PAwCVDwMAnA8CAKMPAwCoDwAAqg8KALcPCQDDDwEAxw8AAMoPAADMDwEAzw8CANMPBADZDwIA3w8DAOYPAADoDwEA7A8AAO4PBAD1DwwAAxAAAAYQAQAJEAMADxACABUQDwAmEAkAMhAAADQQAQA4EAAAOhABAD4QAABAEAEARBAAAEYQAwBMEAEATxABAFMQAABWEAAAWBADAF0QAgBhEAUAaRAFAHEQAAB1EAAAeBAAAHoQAAB8EAEAfxABAIIQAQCHEAAAiRAKAJcQBQCeEAcAqBACAKwQBQC2EAEAuRAAALsQAQC+EAMAxBABAMcQAgDLEAAAzRADANMQBADZEAMA3hACAOIQAADkEAEA5xABAOoQAADsEAAA7xAAAPIQAgD3EAMA/BAHAAYRAgANEQAADxEFABYRAwAbEQAAHREAAB8RAwAlEQEAKBEDAC0RAgAxEQIANRELAEIREABUEREAZxEFAG4RAwB1EQEAeREAAHsRBQCCEQQAiBEAAIoRAQCOEQEAkxEBAJgRBQCiEQUAqREDALARAQCzEQYAuxEBAL8RAQDFEQQAyxEFANMRAADVEQEA2REAANsRAQDfEQAA4REBAOURAADnEQQA7REDAPIRAQD4EQcAARIAAAQSAwAKEgIADhJSAGISAwBrEgAAcBIFAHgSAAB/EgAAghIAAIQSAACGEgAAihIFAJQSAACYEgAAnxIAAKMSAACvEgEAshIEALgSAAC6EgIAvhIBAMQSAgDJEgQAzxIAANESAQDZEgwA6BLqANQTAADWEwAA2BMBANsTAADdEwIA5BMBAOoTAADsEwAA9hMAAPoTAQAGFEUATRQKAFkUUQCsFAIAsRQCALYUAAC6FAoAyBQDAM4UAADRFAAA0xQAAN0UAQDhFAAA5xQAAOkUAQDuFAEA/RQAAAMVAAAIFQIADhUAABAVBQAYFSgAQhXyADcWAAA8FgQAQxYCAEsWMAB9FjgAtxYLAMcWAQDMFgAA0hYCANYWJwD/Fg0ADhcIABoXjwCsFwAAshcAALUXAAC4FwUAvxcAAMMXAADJFwAAyxcAANMXAADWFwAA3xcAAOIXAgDnFwUA7hcBAPIXAAD0FwMA/BcAAAAYAAAEGFQAWhgBAF4YAACFGAAAkBgAAJIYAACcGAAAuxgBAL4YCgDLGAIAzxgGANcYAADZGAIA4RgAAOkYAAD9GAMAAhkCAAYZAAAJGQAADhkAABEZBAAXGQAAHRkBACEZAQAnGQUALhkCADIZAgA3GQAAORkAAD4ZAABHGQAAShkBAE0ZAgBSGQAAVBkAAFgZAQBcGQMAZRkAAHIZAAB0GTcArxkCALYZAAC4GQAAuhkEAMEZAADDGQAAxhkAAMwZAgDSGXcATBoAAFEaAQDIGgAAyhoFANEaAQDUGgIA2BoAANoaAgDeGgEA4hoAAOUaAQDrGgAA8xoAAPUaAAD4GgUAABsCABEbAQAUGwEAHRsAAB8bAQAiGwAAJhsCACwbAAAuGwEAMhsAADcbAQA7GwEAQRsCAEUbAwBLGw4AXxsAAGUbAQBsGwAAbxsFAHgbAAB/GwIAkhsAAJobAQCeGwEAohsBAKUbAACoGwAArBsAALEbAAC0GwAAuRsAALsbAQDBGwgA0BsHAN0bAADfGwAA4xsAAOkbAADrGwMA8xsBAPYbAQD5GwAA/BsGAAQcAAAGHAEACRwAAAwcAwAdHAAAIBwBACscBwA3HAIAPhwAAEQcAgBIHAAAUxwAAFUcAwBaHAQAYRwEAGscAwBwHAAAdBwCAHwcAACIHAAAjRwBAJAcAQCTHAMAmRwEAJ8cBACqHAAArBwAALAcAACzHAIAuRwAAL0cAAC/HAAAwRwBANUcAADaHAAA5BwCAOgcBADvHAAA8RwAAPQcAAD5HAAA/RwAAP8cAgADHQEACB0AAAodAQANHQEAEB0BABcdAwAeHQAAKh0AACwdAAAzHQQAPB0AAD4dAABCHQAARB0BAEkdAABLHQAAUR0JAFwdAABeHQAAYR0AAGgdAABqHQAAcR0AAHgdCgCFHQIAih0CAJQdAACjHQAApR0AAKgdAgCsHQMAsh0BALYdAAC6HQAAvh1TABQeBwAdHgAAIx4LADIeAQA1HoQAvB4AAMAecwA2HwAAOB8DAEMfAABGHwAASB8AAEsfcgC/HwEAzB8AANIfBADYHwEA3B8AAN4fAADgHwAA4x8AAOofAADsHwAA7h9zAGogAwB2IAAAeSAAAHwgAAB+IAEAiiAAAJMgAACaIAAAoSAAAKcgAACzIAEAxCAAAMcgAADJIAAAyyAAANMgAgDXIAUA6iAAAPYgAQD8IAAAAiEAABEhAQAXIQEAHCEUADUhAQA4IUYAgSEAAIMhAACFIQEAiCEBAIshBACRIScAuyEFAMIhCQDNIQIA0yEAANUhAwDaIQEA3SEFAOchEgD7IQEA/iECAAMiAAAGIgMACyIIABkiAQAcIgAAHyIBACIiAAAmIgUALSIAADIiAAA3IgAARiICAFUiBwBoIggAdSIAAHciCwCEIgIAiCIRAJsiAQCeIg8AryIXAMkiAADLIgIA0CIMAN4iBwDnIgQA7iICAPIiBQD6IgAA/CIMAA0jAQARIwEAFyMBABojAQAdIwMAIyMAACYjAgArIwAALSMBADAjAAAyIwIANiMLAEMjAABFIwEASCMAAEojAQBNIwAATyMBAFIjAABUIwEAWiMAAF4jAQBiIwAAZSMAAGcjAABpIwQAbyMAAHIjBwB7IwEAfiMEAIQjAQCIIwAAiiMCAI8jAQCVIwMAmiMAAJwjAACeIwEAoSMAAKMjAQCmIwAAqCMBAKsjAACtIwEAsCMAALIjAAC1IxEAyCMGANEjAADUIxAA5iMIAPAjAQDzIwgA/SMAAP8jAQAFJAAAByQEABAkAQAZJAIAHyQAACEkAAArJAAAOiQDAEIkCgBOJAAAUCQIAFskAwBhJBEAdCQAAHYkDwCHJAIAjiQAAKEkAwCnJAcAvCQEAMMkAADMJAAAziQBANUkBwDjJAoA9yQEAP0kAAD/JAIAAyUEAAslAwAQJQEAFCUAABolBAAjJQIAJyUGADElAgA4JQIAPCUBAEIlDgBUJQEAVyUAAFklAABcJQEAYCUCAG0lAwBzJQAAdSUDAHslAAB9JS4AryUAALUlAQC5JQEAvCUAAMIlAQDFJQIAyyUDANYlAgDdJQAA3yUAAOElAADkJQEA6SUAAO4lAwD1JS4AJSYCAComAQAtJgAALyYAADEmAAAzJgAANiYBADsmAgBAJgAAQiYAAEUmAQBKJgEATiYAAFImAABVJgMAXSYAAGgmAABqJgEAbSYOAIImAQCGJgIAiiYAAIwmFgClJgEAqSYOALkmAQC8JgUAwyYKAM8mAADRJgAA0yYEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNCHHHKHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFIPPFPPPPPIFPPPIFKPFRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPPPPPPPPIFPFKPPPPPPPRFPPPKPPIPFFPRIIIIIKKKKRGPKPPPIPFPRPPPFGIPRPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNFFFKGPFPPPGNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPIFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNOONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHENNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_as_series","mean","mean","median","median_as_series","min","min","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","upstream_traits","value_unchecked","var","var_as_series","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","PolarsAsRef","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","Field","FieldRef","FixedSizeBinary","FixedSizeList","Flat","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Nested","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Structure","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_as_series","max_as_series","max_as_series","mean","median","median","median_as_series","median_as_series","merge_dtypes","min","min_as_series","min_as_series","min_as_series","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_as_series","quantile_as_series","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_as_series","std_as_series","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_as_series","sum_as_series","sum_as_series","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_as_series","merge_map","min_as_series","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","ArrowChunk","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","agg_chunks","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_lengths","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_as_series","max_as_series","median_as_series","metadata","metadata","min_as_series","min_as_series","min_periods","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_as_series","prod_as_series","provide","ptr_eq","quantile_as_series","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_as_series","store","string_cache","strong_count","sum_as_series","sum_as_series","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_as_series","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","new","new_inserting_at_index","remove","rename","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_as_series","max_as_series","mean","mean","mean_as_series","median","median","median_as_series","median_as_series","min","min_as_series","min_as_series","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_as_series","std_as_series","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_as_series","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[476,"polars_core::chunked_array::arithmetic"],[504,"polars_core::chunked_array::builder"],[608,"polars_core::chunked_array::builder::list"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::iterator"],[815,"polars_core::chunked_array::iterator::par"],[817,"polars_core::chunked_array::object"],[888,"polars_core::chunked_array::object::builder"],[911,"polars_core::chunked_array::object::registry"],[939,"polars_core::chunked_array::ops"],[1062,"polars_core::chunked_array::ops::arity"],[1097,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1099,"polars_core::chunked_array::ops::gather"],[1102,"polars_core::chunked_array::ops::search_sorted"],[1131,"polars_core::chunked_array::ops::sort"],[1138,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1139,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1146,"polars_core::chunked_array::ops::sort::options"],[1219,"polars_core::chunked_array::temporal"],[1220,"polars_core::chunked_array::temporal::conversion"],[1223,"polars_core::chunked_array::upstream_traits"],[1224,"polars_core::config"],[1228,"polars_core::datatypes"],[2596,"polars_core::datatypes::categorical"],[2735,"polars_core::datatypes::categorical::revmap"],[2787,"polars_core::datatypes::categorical::string_cache"],[2806,"polars_core::datatypes::revmap"],[2812,"polars_core::datatypes::string_cache"],[2816,"polars_core::error"],[2879,"polars_core::error::PolarsError"],[2883,"polars_core::error::constants"],[2886,"polars_core::export"],[2894,"polars_core::fmt"],[2924,"polars_core::frame"],[3188,"polars_core::frame::explode"],[3217,"polars_core::frame::group_by"],[3453,"polars_core::frame::group_by::GroupByMethod"],[3454,"polars_core::frame::group_by::GroupsProxy"],[3456,"polars_core::frame::group_by::aggregations"],[3469,"polars_core::frame::group_by::expr"],[3472,"polars_core::frame::row"],[3566,"polars_core::functions"],[3568,"polars_core::hashing"],[3616,"polars_core::prelude"],[4172,"polars_core::prelude::PolarsError"],[4176,"polars_core::prelude::default_arrays"],[4182,"polars_core::prelude::list"],[4205,"polars_core::prelude::null"],[4235,"polars_core::prelude::revmap"],[4241,"polars_core::prelude::slice"],[4244,"polars_core::prelude::string_cache"],[4248,"polars_core::prelude::utf8"],[4252,"polars_core::random"],[4253,"polars_core::schema"],[4325,"polars_core::series"],[4706,"polars_core::series::arithmetic"],[4731,"polars_core::series::arithmetic::checked"],[4739,"polars_core::series::ops"],[4765,"polars_core::series::unstable"],[4789,"polars_core::utils"],[4898,"polars_core::utils::flatten"],[4903,"dyn_clone::sealed"],[4904,"num_traits"],[4905,"num_traits::cast"],[4906,"core::option"],[4907,"core::iter::traits::iterator"],[4908,"core::ops::function"],[4909,"core::marker"],[4910,"core::ops::function"],[4911,"alloc::vec"],[4912,"core::iter::traits::double_ended"],[4913,"core::iter::traits::collect"],[4914,"core::fmt"],[4915,"core::fmt"],[4916,"core::result"],[4917,"polars_utils::iter::fallible"],[4918,"polars_arrow::bitmap::immutable"],[4919,"rayon::iter"],[4920,"polars_arrow::trusted_len"],[4921,"core::marker"],[4922,"bitflags::iter"],[4923,"bitflags::iter"],[4924,"core::iter::adapters::map"],[4925,"num_traits::cast"],[4926,"core::ops::range"],[4927,"rayon::iter"],[4928,"polars_utils::hashing"],[4929,"ndarray::aliases"],[4930,"ndarray::aliases"],[4931,"core::any"],[4932,"core::ops::function"],[4933,"core::clone"],[4934,"alloc::boxed"],[4935,"polars_arrow::array::boolean"],[4936,"core::any"],[4937,"polars_arrow::bitmap::utils::zip_validity"],[4938,"polars_arrow::offset"],[4939,"core::hash"],[4940,"core::error"],[4941,"polars_arrow::array::primitive"],[4942,"polars_row::row"],[4943,"chrono::naive::datetime"],[4944,"alloc::borrow"],[4945,"bytemuck::zeroable"],[4946,"core::convert"],[4947,"polars_arrow::types"],[4948,"core::borrow"],[4949,"smartstring::alias"],[4950,"core::cmp"],[4951,"polars_arrow::datatypes::physical_type"],[4952,"polars_utils::idx_vec"],[4953,"rayon::iter::plumbing"],[4954,"core::iter::adapters::copied"],[4955,"core::iter::adapters::zip"],[4956,"polars_utils::float"],[4957,"polars_arrow::types::native"],[4958,"polars_arrow::array::binary"],[4959,"hashbrown::map"],[4960,"core::hash"],[4961,"std::os::fd::owned"],[4962,"std::os::fd::owned"],[4963,"core::mem::maybe_uninit"],[4964,"core::cmp"],[4965,"alloc::sync"],[4966,"polars_arrow::scalar"],[4967,"core::cmp"],[4968,"std::io::error"],[4969,"alloc::collections"],[4970,"simdutf8::basic"],[4971,"regex::error"],[4972,"std::ffi::os_str"],[4973,"std::ffi::os_str"],[4974,"std::path"],[4975,"alloc::borrow"],[4976,"polars_arrow::buffer::immutable"],[4977,"polars_arrow::array::list"],[4978,"core::cmp"],[4979,"core::error"],[4980,"std::io"],[4981,"std::io"],[4982,"std::io"],[4983,"polars_arrow::array::utf8"],[4984,"polars_arrow::datatypes::schema"],[4985,"polars_arrow::datatypes"],[4986,"polars_arrow::legacy::trusted_len::rev"],[4987,"smartstring::config"],[4988,"smartstring"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{cf}b{}}0{{{j{h}}}d}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}Ah}Abl}{{{j{Aj}}}d}{{}Al}{{{j{Aj}}}{{An{d}}}}{{{j{h}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{j{h}}Bf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}42{{{j{c}}{j{c}}}b{{Bl{}{{Bh{Bj}}}}}}{{{j{c}}e}{{j{c}}}l{{C`{An}{{Bn{An}}}}Cb}}{{{j{h}}c}{{j{h}}}{{Cf{Cd}{{Bn{Ab}}}}}}{{{j{h}}e}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{{j{Ch}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{Cj}}c}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{{j{c}}g}{{j{i}}}Bl{}{{Cf{An}{{Bn{{An{e}}}}}}}Bl}{{{j{c}}e}{{j{c}}}l{{C`{}{{Bn{}}}}Cb}}{{{j{c}}C`}{{j{c}}}l}{{{j{c}}C`}{{j{e}}}lBl}{{{j{Cl}}c}{{j{Cl}}}{{Cf{{D`{Cn}}}{{Bn{{D`{Cn}}}}}}}}{{{j{c}}e}bl{{C`{}{{Bn{}}}}Cb}}{{{j{Db}}c}{{j{Db}}}{{Cf{Bf}{{Bn{Bf}}}}}}{{{j{c}}Ddg}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{Db}}c}{{j{Db}}}{{Cf{BfDf}}}}{{{j{h}}C`}{{Ad{Dh}}}}{{{j{c}}g{D`{e}}}bl{}{{C`{Ane}{{Bn{e}}}}}}9{{{j{c}}g}{{j{i}}}Bl{}{{Cf{}{{Bn{e}}}}}Bl}{{{j{c}}Dj}Dll}{{{j{c}}{D`{Ab}}Dn}{{Ad{Dl}}}l}{{{j{c}}}{{Ad{Dl}}}l}`{{{j{Db}}}E`}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}DdBl}{{{j{h}}{j{c}}{j{e}}g}{{j{h}}}BlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{{j{c}}{j{c}}}eEb{}}{{AlAl}Al}{{AlAl}b}210{AlCn}0321{ce{}{}}00000``{{{j{c}}Dd}{{Ad{Ab}}}l}{{{j{c}}e}{{j{g}}}l{{C`{}{{Bn{}}}}Cb}l}1{{{j{c}}Ab}{{Ad{Ab}}}Ed}{{{j{c}}e}{{Ad{Ab}}}EdA`}{{{j{c}}}EfBl}{{{j{c}}}{{Ej{Eh}}}Bl}0=={AlAl}{{ce}b{}{}}0``1{{{j{c}}}{{Ad{D`}}}l}{{AlAl}d}{{{j{c}}}{{`{{El{}{{B`{D`}}}}}}}l}{{}{{j{c}}}Bl}{{}Al}{Enc{}}00000{{AlAl}Al}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}bBl}{Enb}00{{{j{c}}}DdBl}8;{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}01{{{j{c}}{j{c}}}bl}{{Alc}b{{Fb{}{{B`{Al}}}}}}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}F`}{{Ad{{j{c}}}}}l}{{{j{c}}}{{An{En}}}Bl}`{{{j{c}}Fd}Ffl}{{{j{Aj}}Fd}Ff}{{AlFd}Ff}0000{{{j{c}}e}bBl{{Cf{An}}}}{{{j{h}}c}b{{Cf{{An{Cd}}}}}}{cc{}}{c{{j{e}}}Fh{{Bl{}{{Fj{c}}}}}}11{Cn{{An{Al}}}}{CnAl}00{{Bfc}{{j{e}}}Fb{{Bl{}{{Fj{}}}}Bl}}{{{j{c}}e}{{j{c}}}{{Bl{}{{Fj{}}}}Bl}Fb}{{Bf{Ej{Eh}}}{{j{c}}}Bl}{{Bf{Ej{Eh}}Dd}{{j{c}}}Bl}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}0{c{{j{e}}}{{Fb{}{{B`{An}}}}}l}{c{{j{Aj}}}{{Fb{}{{B`{{An{d}}}}}}}}{c{{j{e}}}{{Fb{}{{B`{{Gb{Ej{An{G`}}}}}}}}}l}{cAl{{Fb{}{{B`{Al}}}}}}{{Bfc}{{j{e}}}{{Bd{}{{B`{An}}}}}l}34{{Bfc}{{j{e}}}{{Bd{}{{B`{}}}}}l}{Bf{{An{Al}}}}{c{{j{e}}}{{Gd{}{{B`{An}}}}}l}{{BfD`}{{j{c}}}l}{{Bf{D`{An}}}{{j{c}}}l}{c{{j{e}}}{{Gf{}{{B`{An}}}}}l}{{BfEj}{{j{c}}}l}{{BfEj{An{G`}}}{{j{c}}}l}{{BfEn}{{j{c}}}l}0{{{j{c}}En}{{j{c}}}Bl}{{BfEnDd}Dh}{{{j{c}}En}AnBl}{{{j{c}}En}{{Ad{Gh}}}l}{{{j{c}}En}Ghl}{{{j{h}}En}{{An{Ab}}}}{{{j{c}}}AlBl}{{{j{h}}}Ab}{{{j{{Gj{c}}}}En}{{An{Gl}}}Gn}0{AlH`}7{{{j{c}}dd}{{Ad{Ah}}}l}{{{j{c}}EndEn}AhEb}{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}10{{{j{c}}}dBl}{{{j{c}}{An{En}}}{{j{c}}}Bl}{{}En}00{{EnHb{An{Hd}}}{{j{c}}}l}{{{j{h}}}Dd}{{AlAl}b}{{AlAl}Al}{{AlAl}d}{ce{}{}}00{{{j{Hf}}{An{En}}En}{{Ad{Hh}}}}{{{j{Hf}}{An{En}}En}Hh}{{{j{c}}}el{}}{Alc{}}{{{j{c}}}{{`{HjHl{Hn{}{{B`{}}}}ElGf}}}l}{{{j{c}}}AbBl}{Ald}?0{{{j{c}}}F`I`}000{{{j{c}}}F`Bl}0{{{j{c}}}dBl}{{{j{c}}}H`Bl}{{{j{c}}}{{`{{Ib{}{{B`{An}}}}}}}Bl}{Al{{Id{Al}}}}{Al{{If{Al}}}}{{{j{c}}}{{Il{{Ih{Eh}}{Ij{Eh}{{Bn{{An{G`}}}}}}}}}Bl}`{{{j{c}}}AnBl}{{{j{c}}}{{An{En}}}Bl}{{{j{c}}}{{In{c}}}Bl}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{c}}}EnBl}{{{j{c}}e}{{j{c}}}l{nJ`}}00{{{j{c}}En}{{j{c}}}Bl}{{{j{c}}e}F`lA`}{{{j{c}}{j{c}}}F`l}10{{{j{c}}}Anl}{{{j{Aj}}}{{An{d}}}}{{{j{c}}}Abl}{{{j{c}}}{{An{Jb}}}l}{{{j{Aj}}}{{An{Jb}}}}{{{j{c}}}{{An{Jb}}}Eb}{{{j{c}}}AbEb}564{{{j{c}}}{{An{Gb}}}l}{{Bf{D`{Cn}}EnEn}{{j{Aj}}}}{{BfD`}{{j{c}}}l}{{{j{c}}e}gl{nA`}{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{c}}}{{Ad{En}}}l}{{{j{c}}}BfBl}{{Bfc}{{j{Aj}}}{{Jd{{D`{{An{d}}}}}}}}{{Bfc}{{j{Cj}}}{{Jd{{D`{Hb}}}}}}{{Bf{Jh{Jf}}}{{j{Jj}}}}{{Bfc}{{j{Cj}}}{{Jd{{D`{{An{Hb}}}}}}}}{{Bfc}{{j{Cl}}}{{Jd{{D`{{An{{Ej{Cn}}}}}}}}}}{{Bf{Jh{Jl}}}{{j{Jn}}}}{{Bfc}{{j{K`}}}{{Jd{{D`{{An{Kb}}}}}}}}{{Bfc}{{j{Jj}}}{{Jd{{D`{Jf}}}}}}{{Bfc}{{j{Cl}}}{{Jd{{D`{{Ej{Cn}}}}}}}}{{Bfc}{{j{Aj}}}{{Jd{{D`{d}}}}}}{{Bfc}{{j{Db}}}{{Jd{{D`{{An{Df}}}}}}}}{{Bfc}{{j{Db}}}{{Jd{{D`{Df}}}}}}{{Bfc}{{j{Jn}}}{{Jd{{D`{Jl}}}}}}{{Bfc}{{j{Jj}}}{{Jd{{D`{{An{Jf}}}}}}}}{{Bfc}{{j{Ch}}}{{Jd{{D`{{An{Jb}}}}}}}}{{Bf{Jh{Hd}}}{{j{Kd}}}}{{Bfc}{{j{K`}}}{{Jd{{D`{Kb}}}}}}{{Bfc}{{j{Jn}}}{{Jd{{D`{{An{Jl}}}}}}}}{{Bfc}{{j{Kd}}}{{Jd{{D`{Hd}}}}}}{{Bfc}{{j{Ch}}}{{Jd{{D`{Jb}}}}}}{{Bfc}{{j{Kd}}}{{Jd{{D`{{An{Hd}}}}}}}}{{Bf{Jh{Kb}}}{{j{K`}}}}{Bf{{j{{Gj{c}}}}}Gn}{{{j{c}}EnEn}{{j{c}}}l}{{Bf{Ej{c}}}{{j{{Gj{c}}}}}Gn}{{Bf{Ej{c}}G`}{{j{{Gj{c}}}}}Gn}{{BfEj}{{j{c}}}l}{{{j{c}}}{{j{c}}}I`}{AlAl}{{{j{c}}{j{c}}}F`l}{{{j{c}}e}F`lA`}01{{{j{c}}}EnBl}``{{{j{Db}}}{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{{{j{h}}}{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{{{j{Db}}}{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{{j{h}}}{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{{{j{c}}}Abl}{{{j{c}}}bBl}{{{j{c}}JbKj}{{Ad{{An{Jb}}}}}Eb}{{{j{c}}JbKj}{{Ad{Ab}}}Eb}{{BfEnJb}{{Ad{{j{Aj}}}}}}{{BfEnJbJb}{{Ad{{j{c}}}}}l}{{BfEn}{{j{c}}}l}{{BfEnJbJb}{{j{c}}}l}{{{j{c}}}{{j{c}}}Bl}{{{j{c}}}KlBl}{{{j{c}}{j{c}}}el{}}{{{j{c}}e}gl{nA`}{}}10{{{j{c}}Ab}{{Ad{Ab}}}Af}{{AlAl}b}{{{j{c}}Bf}bBl}{{{j{c}}}{{j{c}}}l}{{{j{c}}C`Kn}{{Ad{Ab}}}l}{{{j{c}}Ene}{{Ad{{j{c}}}}}I`{{Cf{{j{c}}}{{Bn{An}}}}}}{{{j{c}}Jbdd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}Endd{An{Hd}}}{{Ad{{j{c}}}}}Bl}{{{j{c}}eAn}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}}{{{j{c}}eg}{{Ad{{j{c}}}}}l{{Fb{}{{B`{L`}}}}}{{C`{An}{{Bn{An}}}}}}{{{j{c}}F`An}{{Ad{{j{c}}}}}l}{{AlAld}b}{{{j{h}}}b}{{{j{h}}Dd}b}{{{j{c}}L`}bBl}{{{j{c}}H`}bBl}{{AlH`}b}{{{j{c}}Jl}{{j{c}}}l}{{{j{c}}JlAn}{{j{c}}}l}{{{j{c}}}bBl}{{{j{c}}JlEn}{{j{c}}}Bl}{{{j{c}}d}{{j{c}}}l}{{{j{c}}Dj}{{j{c}}}l}{{{j{c}}Cn}{{An{Jb}}}l}{{{j{c}}Cn}AbEb}{{{j{c}}e}gl{nA`}{}}{{{j{c}}{j{c}}}el{}}10{{AlAl}Al}{{AlAl}b}{{{j{c}}Ab}{{Ad{Ab}}}Af}{{{j{Aj}}}{{An{L`}}}}{{{j{c}}}Anl}{{{j{c}}}Abl}5{{{j{c}}{An{En}}}{{j{c}}}Bl}{{{j{c}}Dl}{{Ad{{j{c}}}}}Bl}{{{j{c}}e}{{Ad{{j{c}}}}}Bl{{Jd{{D`{L`}}}}Lb}}{{{j{c}}Dl}{{j{c}}}{Bl`}}{{{j{c}}e}{{j{c}}}Bl{{Jd{{D`{L`}}}}Lb}}`{{{j{c}}dLd}{{Ej{{Ej{Lf}}}}}Bl}{{{j{c}}}{{j{c}}}I`}{{{j{Db}}En}{{Ad{Ab}}}}{{{j{h}}Dd}b}{{{j{h}}}{{Ad{Lh}}}}{{{j{c}}}{{Ad{Lj}}}l}{ce{}{}}0{{{j{Cl}}}Ll}{{{j{c}}}{{Ej{An}}}l}{{{j{c}}}{{Ln{Ej{Ej{An}}}}}l}{{AlAl}b}{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}0{{c{j{e}}}g{}l{}}0{{{j{h}}c}{{Ad{{j{h}}}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{{j{h}}e}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}Cb}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{c{{Fl{e}}}{}{}}00{{Bfg}{{Fl{{j{i}}e}}}Fh{}{{Fb{}{{B`{{Fl{ce}}}}}}}{{Bl{}{{Fj{c}}}}Bl}}111{{{j{h}}{j{c}}e}{{Ad{{j{h}}}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cM`{}}00{{AlAl}Al}{{{j{c}}}{{Ad{{j{c}}}}}l}{{{j{c}}Ab}{{Ad{{j{c}}}}}Bl}{{{j{c}}}bBl}`{{{j{c}}En}{}Bl}{{{j{c}}Cn}{{An{Jb}}}l}{{{j{c}}Cn}AbEb}{ce{}{}}00{{Bfc}{{j{e}}}Fh{{Bl{}{{Fj{c}}}}Bl}}{{{j{c}}{Ej{Eh}}}{{j{c}}}Bl}{{{j{c}}Bf}{{j{c}}}Bl}{{{D`{Mb}}e}c{}{{Md{Dl}{{Bn{c}}}}}}{{{j{c}}H`}{{j{c}}}Bl}{{{j{c}}}el{}}0{{{j{c}}{j{c}}}el{}}0{{{j{c}}e}gl{}{}}01100{{c{j{e}}}g{}l{}}0221100221133221100221100{{{j{h}}{j{c}}e}{{j{h}}}Bl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}{{{j{c}}F`{j{c}}}{{Ad{{j{c}}}}}Bl}````{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}e{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}c}e{}{}{}}{{c{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}e{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}g{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}c}g{}{}{}}{{c{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}g{}{}{}}{{{Ml{}{{Mf{c}}{Mh{e}}{Mj{g}}}}}e{}{}{}}65654654650654654````````{{cf}b{}}000{Mnb}{{{N`{c}}}b{NbLb}}{Ndb}{Nfb}{{{Nh{c}}}bl}{{{N`{c}}{An{e}}}b{NbLb}{{Jd{c}}}}{{Mn{An{c}}}b{}}{{Mnc}b{}}{{{N`{c}}e}b{NbLb}{{Jd{c}}}}{{Ndd}b}5{ce{}{}}0000000{{{N`{c}}}{{N`{c}}}{NbLb}}{NdNd}{NfNf}{{{Nh{c}}}{{Nh{c}}}{lNj}}{{ce}b{}{}}000{Enc{}}0000000{Enb}000{Mn{{j{c}}}Bl}{{{N`{Bf}}}Ll}{{{N`{{D`{Cn}}}}}E`}{NlLl}{NnE`}{NdF`}`{{{Nh{c}}}{{j{c}}}l}{cc{}}000{{Bfe}O`{}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}O`{}{{Bd{}{{B`{c}}}}}}{{Bf{D`{c}}}O`{}}{{Bf{D`{{An{c}}}}}O`{}}{{}En}000{ce{}{}}000`{{BfEn}{{N`{c}}}{NbLb}}{{BfEn}Nd}{{BfEn}Nf}{{BfEn}{{Nh{c}}}l}{Mnb}{Ndb}{Nfb}{{{Nh{c}}}bl}8888{c{{Fl{e}}}{}{}}0000000{cM`{}}000::::````````{{ObFh}b}{Obb}{Odb}{{Ofc}b{{Bd{}{{B`{{An{d}}}}}}Gf}}{{{Oh{c}}e}bl{{Bd{}{{B`{An}}}}Gf}}{{{Oh{c}}e}bl{{Bd{}{{B`{}}}}Gf}}{Ojb}54{Olb}{Onb}{Ofb}{A@`b}{{{Oh{c}}}bl}{{Ob{An{Fh}}}b}{{Ob{An{Ab}}}{{Ad{b}}}}{{Oj{An{Ab}}}{{Ad{b}}}}{{{Oh{c}}{An{D`}}}bl}{{OjAb}{{Ad{b}}}}{{ObAb}{{Ad{b}}}}{{OdAb}{{Ad{b}}}}{{OlAb}{{Ad{b}}}}{{OnAb}{{Ad{b}}}}{{OfAb}{{Ad{b}}}}{{A@`Ab}{{Ad{b}}}}{{{Oh{c}}Ab}{{Ad{b}}}l}{{{Oh{c}}D`}bl}{{Olc}b{{Bd{}{{B`{{An{Bf}}}}}}Gf}}{{Onc}b{{Bd{}{{B`{{An{{D`{Cn}}}}}}}}Gf}}{{Olc}b{{Bd{}{{B`{Bf}}}}}}{{Onc}b{{Bd{}{{B`{{D`{Cn}}}}}}}}{ce{}{}}0000000000000`{{}Ob}{{}Od}{Enc{}}0000000000000{Enb}000000{Old}{Ond}{Ofd}{{{Oh{c}}}dl}{Ojd}{OlKl}{OnKl}{OfKl}{{{Oh{c}}}Kll}{OjKl}{ObDh}{OdDh}{A@`Dh}{OjDh}{cc{}}000000{{DdEnEnBf}{{Ad{{A@b{Oj}}}}}}{{}En}000000{OlEh}{OnEh}{OfEh}{{{Oh{c}}}Ehl}{OjEh}{ce{}{}}000000{{BfEn{An{Dd}}}Ob}{{BfEn{An{Dd}}}Od}{{BfEnEn}Ol}{{BfEnEn}On}{{BfEnEn}Of}{{BfEn}A@`}{{BfEnEnDd}{{Oh{c}}}l}{{BfEnEnDdDd}{{Oh{c}}}l}{c{{Fl{e}}}{}{}}0000000000000{cM`{}}000000:::::::``{{A@dBf}{{j{c}}}Bl}{{A@f{j{c}}}{{j{c}}}Bl}10{{A@fBfDd}{{j{c}}}Bl}0{{A@dBf}{{Fl{{j{c}}e}}}Bl{}}{{A@f{j{c}}}{{Fl{{j{c}}e}}}Bl{}}10{{A@fBfDd}{{Fl{{j{c}}e}}}Bl{}}0`{A@hA@h}```{ce{}{}}000{Enc{}}000{Enb}0{cc{}}0{{}En}04444{A@jA@l}{A@l{{An{c}}}{}}{{{A@n{c}}}{{An{e}}}Bd{}}1{{{A@n{c}}}{{An{e}}}El{}}`{A@l{{Gb{En{An{En}}}}}}{{{A@n{c}}}{{Gb{En{An{En}}}}}Bd}{c{{Fl{e}}}{}{}}000{cM`{}}0<<``````{{cf}b{}}{e{{AA`{c}}}Gn{{Fb{}{{B`{c}}}}}}{e{{AA`{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{AAbe}g{}{{Fb{}{{B`{c}}}}}{}}0{GlAAd}{{{AA`{c}}}AAdGn}0{ce{}{}}0`{{{AA`{c}}}{{AA`{c}}}{GnNj}}{{ce}b{}{}}{{{AA`{c}}}AAbGn}{Enc{}}0{Enb}{{GlGl}d}0{{{AA`{c}}Fd}Ff{GnAAf}}{cc{}}{{EnAAb}{{AA`{c}}}Gn}{{{AA`{c}}En}{{An{c}}}Gn}{{}AAb}{{G`{AA`{c}}{AA`{c}}}{{AA`{c}}}Gn}{{AAbG`cc}{{AA`{e}}}{}Gn}{{G`{AA`{c}}e}{{AA`{c}}}Gn{}}{{G`c{AA`{e}}}{{AA`{e}}}{}Gn}{{}En}{ce{}{}}{{{AA`{c}}}eGn{}}{{{AA`{c}}En}dGn}{{cEn}d{}}1{{{AA`{c}}}{{AAl{c{AAh{c}}AAj}}}Gn}{{{AA`{c}}}{{AAl{egAAj}}}Gn{}{}}{{{AA`{c}}}EnGn}0`{{{AA`{c}}{An{G`}}}bGn}{{{AA`{c}}EnEn}bGn}{{cEnEn}e{}{}}01{Gl{{A@b{Gl}}}}{{{AA`{c}}}{{A@b{Fh}}}Gn};{g{{Fl{{AA`{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{ce}}}}}}}}{g{{Fl{{AA`{c}}e}}}Gn{}{{Fb{}{{B`{{Fl{{An{c}}e}}}}}}}}{{AAbg}{{Fl{ie}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}{}}0{c{{Fl{e}}}{}{}}0{cM`{}}{GlBf}{{}Bf}{{{AA`{c}}}{{An{G`}}}Gn}{{{AA`{c}}En}cGn}0{{{AA`{c}}En}eGn{}}{{{AA`{c}}}{{AAn{{Ej{c}}}}}Gn}{{{AA`{c}}}eGn{}}{{{AA`{c}}}{{AAh{c}}}Gn}{ce{}{}}{{{AA`{c}}{An{G`}}}{{A@b{Fh}}}Gn}{{{AA`{c}}{An{G`}}}{{AA`{c}}}Gn}0`{{{AB`{c}}}bGn}0{{{AB`{c}}{An{c}}}bGn}{{{AB`{c}}c}bGn}{{{AB`{c}}AAd}bGn}{{{AB`{c}}AAd}{{Ad{b}}}Gn}77{{}{{AB`{c}}}Gn}{Enc{}}0{Enb}{{{AB`{c}}}{{ABb{c}}}Gn}{cc{}}{{}En}={{BfEn}{{AB`{c}}}Gn}{{{AB`{c}}}AbGn}{c{{Fl{e}}}{}{}}0{cM`{}}{ce{}{}}````{ABdb}{{ABd{An{AAd}}}b}{{ABdAAd}b}33`<<;{{ABfFd}Ff}:{{BfEn}{{A@b{ABd}}}}{{}ABh}{{}AAb}<7{{}d}`{{ABjABhAAb}b}{ABdAb}<<;:``````````````````````````````````````````{{cf}b{}}{{{ABn{}{{ABl{c}}}}g}{{ABn{}{{ABl{c}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{c}}}}}}Cb}}{{AC`C`}AC`}{{AC`C`}{{j{c}}}Bl}{{{ABn{}{{ABl{c}}}}i{D`{g}}}b{}{}{}{{C`{{An{e}}g}{{Bn{g}}}}}}{{{ABn{}{{ABl{c}}}}g}{{ABn{}{{ABl{c}}}}}{}{}{{C`{e}{{Bn{c}}}}Cb}}{{ACbDj}Dl}{{ACb{D`{Ab}}Dn}{{Ad{Dl}}}}{ACd{{Ad{Dl}}}}`{ce{}{}}0{{ACfDd}{{Ad{Ab}}}}0{AChACh}{{ce}b{}{}}{Enc{}}0{Enb}{{AChACh}d}{{{ACj{}{{B`{c}}}}e}c{}{}}0{ACl{{Ad{Ab}}}}{ACl{{Ad{{Gb{Ab{ACn{Jl}}}}}}}}`{{AD`c}{{Ad{AD`}}}{}}{{ADbF`}{{Ad{{j{c}}}}}Bl}`{{AChFd}Ff}{cc{}}`{{BfcEn}ADd{}}{{BfEn}ADf}`{{ADhEn}{{Ad{Gh}}}}{{ADhEn}Gh}::{{AChc}bADj}{{}En}{ce{}{}}{ADl{{Ad{F`}}}}{ADn{{Ad{F`}}}}??{AE`{{An{c}}}{}}{AE`{{An{Jb}}}}{AEb{{An{c}}}{}}2{AE`{{An{{Gb{cc}}}}}{}}{ACd{{Ad{En}}}}{{AEdEnEn}{{j{c}}}Bl}{{{ACj{}{{B`{c}}}}e}c{}{}}0{ACl{{Ad{{ACn{Jl}}}}}}{{AEbJbKj}{{Ad{{An{c}}}}}{}}{AEfAEf}{{AEhC`Kn}{{Ad{Ab}}}}{{AEjc{An{e}}}{{Ad{AEj}}}{{Fb{}{{B`{L`}}}}}{}}{{AEjci}{{Ad{AEj}}}{{Fb{}{{B`{L`}}}}}{}{}{{C`{{An{e}}}{{Bn{{An{g}}}}}}}}`{{AEjF`{An{c}}}{{Ad{AEj}}}{}}{{AElJl}{{j{c}}}Bl}{{AEnJlc}{{j{e}}}{}Bl}`{{ACbd}{{j{c}}}Bl}{{ACbDj}{{j{c}}}Bl}{{AF`Cn}{{An{Jb}}}}{AE`{{An{c}}}{}}{{AFbc}{{Ad{AFb}}}Lb}{{AFdc}AFdLb}{AFf{{Ej{{D`{Cn}}}}}}{ce{}{}}{c{{Fl{e}}}{}{}}0{cM`{}}{ACd{{Ad{{j{c}}}}}Bl}83`{{AFhF`{j{c}}}{{Ad{{j{c}}}}}Bl}``````{{{j{c}}{j{e}}gik}{{j{m}}}BlBl{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}{{C`{}{{Bn{}}}}}Bl}0{{{j{c}}{j{e}}i}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}g}{{j{i}}}BlBl{{AFj{AnAn}}}Bl}{{{j{c}}{j{e}}g}bBlBl{{Cf{AnAn}}}}{{{j{c}}{j{e}}i}{{j{k}}}BlBl{}{{Cf{}{{Bn{g}}}}}Bl}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBl{FhAFl}{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}iBf}{{j{k}}}BlBlFh{{Cf{}{{Bn{g}}}}}{{Bl{}{{Fj{g}}}}}}5{{{j{c}}{j{e}}g}{{Ad{Ab}}}BlBl{{Cf{}{{Bn{{A@b{Fh}}}}}}}}{{{j{c}}{j{e}}gdd}{{j{c}}}BlBl{{Cf{}{{Bn{{A@b{Fh}}}}}}}}64{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBl{}{}{{Cf{AnAn}{{Bn{{Fl{{An{g}}i}}}}}}}Bl}{{{j{c}}{j{e}}{j{g}}i}{{j{k}}}BlBlBl{{AFn{AnAnAn}}}Bl}{{{j{c}}{j{e}}k}{{Fl{{j{m}}i}}}BlBlFhAG`{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}2{{{j{c}}{j{e}}kBf}{{Fl{{j{m}}i}}}BlBlFhAG`{{Cf{}{{Bn{{Fl{gi}}}}}}}{{Bl{}{{Fj{g}}}}}}{{{j{c}}{j{e}}idd}{{Fl{{j{c}}g}}}BlBlAG`{{Cf{}{{Bn{{Fl{{A@b{Fh}}g}}}}}}}}{{{j{c}}{j{e}}{j{g}}m}{{Fl{{j{o}}k}}}BlBlBl{}{}{{Cf{AnAnAn}{{Bn{{Fl{{An{i}}k}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{An}{{Bn{{Fl{{An{e}}g}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{}{}{{Cf{}{{Bn{{Fl{eg}}}}}}}Bl}{{{j{c}}i}{{Fl{{j{k}}g}}}Bl{FhAFl}AG`{{Cf{}{{Bn{{Fl{eg}}}}}}}{{Bl{}{{Fj{e}}}}}}{{{j{c}}e}{{j{g}}}Bl{{AGb{An}}}Bl}{{{j{c}}e}{{j{g}}}BlAGbBl}{{{j{c}}g}{{j{i}}}BlFh{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}g}{{j{i}}}Bl{FhAFl}{{Cf{}{{Bn{e}}}}}{{Bl{}{{Fj{e}}}}}}0{{{j{c}}}Enl}0{{H`H`}H`}{{DlL`}{{Ad{b}}}}{{{AGd{L`}}L`}{{Ad{b}}}}````{{cf}b{}}{{AGfcd}L`AFl}{ce{}{}}0{AGfAGf}{{ce}b{}{}}{{}AGf}{Enc{}}0{Enb}{{AGfAGf}d}{{ce}d{}{}}00{{AGfFd}Ff}{cc{}}{{AGfc}bADj}{{}En};{{{j{c}}}{{Gb{En{j{c}}}}}Bl}<{c{{Fl{e}}}{}{}}0{cM`{}}>`{{En{Ej{d}}}b}```{{AGhEnEn}AGh}0{{En{D`{Ab}}Dn}{{Ad{{AGj{Dl}}}}}}{{{D`{Ab}}{D`{d}}d}{{Ad{AGl}}}}{{Bf{D`{Ab}}{D`{d}}d}{{Ad{AGn}}}}{{Bf{D`{Ab}}}{{Ad{AGn}}}}{Ab{{Ad{Eh}}}}{{{D`{Ab}}}{{Ad{AGl}}}}{{{D`{Ab}}}{{Ad{AGn}}}}0```{{cf}b{}}0{ce{}{}}000{DjDj}{DnDn}{{ce}b{}{}}0{{}Dj}{{}Dn}{Enc{}}000``{Enb}0{{DjDj}d}{{DnDn}d}{{ce}d{}{}}00000{{DjFd}Ff}{{DnFd}Ff}{DnDj}{cc{}}0{DjDn}{{Djc}bADj}{{Dnc}bADj}{{}En}0{ce{}{}}0````?>``{{AGhEnEn}AGh}011{c{{Fl{e}}}{}{}}000{cM`{}}033{{Djd}Dj}{{Dnd}Dn}101010{{Dnc}Dn{{Fb{}{{B`{d}}}}}}{DnDn}`{AH`Jl}00`{{}d}::0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000000000000000000000{Dhd}{{HhHh}c{}}{{F`F`}c{}}0{{LlLl}c{}}0{{LlBf}c{}}{{E`{D`{Cn}}}c{}}{{E`E`}c{}}0{{GhGh}Gh}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{{LlAb}{{Ad{Ab}}}}{{E`Ab}{{Ad{Ab}}}}{{F`Ab}{{Ad{Ab}}}}{{DhAh}Ab}{{F`Ah}Ab}{{LlAh}Ab}{{E`Ah}Ab}{{{ABb{c}}Ah}AbGn}{F`d}{F`{{An{d}}}}{Dh{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{DhBf}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{Dhc}Dh{{C`{{An{Ab}}}{{Bn{{An{Ab}}}}}}Cb}}{{F`c}F`{{C`{{An{d}}}{{Bn{{An{d}}}}}}Cb}}{{Llc}Ll{{C`{{An{Bf}}}{{Bn{{An{{AHd{Bf}}}}}}}}Cb}}{{E`c}E`{{C`{{An{{D`{Cn}}}}}{{Bn{{An{{AHd{{D`{Cn}}}}}}}}}}Cb}}{{{ABb{c}}e}{{ABb{c}}}Gn{{C`{{An{c}}}{{Bn{{An{c}}}}}}Cb}}{{Dhc}Dh{{Cf{Cd}{{Bn{Ab}}}}}}{{Dhe}{{j{g}}}{}{{Cf{{An{Cd}}}{{Bn{{An{c}}}}}}Cb}Bl}{{AHfc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{AHhc}Ab{{C`{Ab}{{Bn{Ab}}}}}}{{F`C`}F`}{{LlC`}Ll}{{E`C`}E`}{{F`C`}{{j{c}}}Bl}{{LlC`}{{j{c}}}Bl}{{E`C`}{{j{c}}}Bl}{{Llc}Ll{{Cf{Bf}{{Bn{Bf}}}}}}{{E`c}E`{{Cf{{D`{Cn}}}{{Bn{{D`{Cn}}}}}}}}{{Llc}Ll{{Cf{BfDf}}}}{{DhC`}{{Ad{Dh}}}}{{Dhe{D`{c}}}b{}{{C`{{An{Ab}}c}{{Bn{c}}}}}}{{F`e{D`{c}}}b{}{{C`{{An{d}}c}{{Bn{c}}}}}}{{Lle{D`{c}}}b{}{{C`{{An{Bf}}c}{{Bn{c}}}}}}{{E`e{D`{c}}}b{}{{C`{{An{{D`{Cn}}}}c}{{Bn{c}}}}}}{{{ABb{c}}g{D`{e}}}bGn{}{{C`{{An{c}}e}{{Bn{e}}}}}}{{Dhc}Dh{{C`{Ab}{{Bn{Ab}}}}Cb}}{{F`c}F`{{C`{d}{{Bn{d}}}}Cb}}{{Llc}Ll{{C`{Bf}{{Bn{{AHd{Bf}}}}}}Cb}}{{E`c}E`{{C`{{D`{Cn}}}{{Bn{{AHd{{D`{Cn}}}}}}}}Cb}}{{{ABb{c}}e}{{ABb{c}}}Gn{{C`{c}{{Bn{c}}}}Cb}}{{F`Dj}Dl}{{LlDj}Dl}{{E`Dj}Dl}{{AGnDj}Dl}{{F`{D`{Ab}}Dn}{{Ad{Dl}}}}{{Ll{D`{Ab}}Dn}{{Ad{Dl}}}}{{E`{D`{Ab}}Dn}{{Ad{Dl}}}}{{AGn{D`{Ab}}Dn}{{Ad{Dl}}}}{F`{{Ad{Dl}}}}{Ll{{Ad{Dl}}}}{E`{{Ad{Dl}}}}{{{ABb{c}}}{{Ad{Dl}}}Gn}{eAHj{}{{Fb{}{{B`{c}}}}}}0{{AAbe}AHl{}{{Fb{}{{B`{c}}}}}}0{LlE`}{GhGh}{DdDd}{KlDd}{AHnDd}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}{{An{{D`{c}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}{j{e}}g}DhBlBl{{Cf{{An{Cd}}AnAn}{{Bn{{An{Ab}}}}}}}}{{F`F`}c{}}00000{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000{Dd{{A@b{Dd}}}}{{AIjAIjc}{{Ad{AIj}}}AIl}{{AInDd}{{Ad{Ab}}}}{{HhDd}{{Ad{Ab}}}}{{DhDd}{{Ad{Ab}}}}{{F`Dd}{{Ad{Ab}}}}{{LlDd}{{Ad{Ab}}}}{{E`Dd}{{Ad{Ab}}}}{{AGnDd}{{Ad{Ab}}}}{{GhDd}Gh}54321`{{{j{c}}Ab}{{Fl{AbAHb}}}{}}0000{{AHfAb}{{Ad{Ab}}}}{{AHhAb}{{Ad{Ab}}}}{{{AJ`{ce}}}{{AJ`{ce}}}BlBl}{AJbAJb}{GhGh}{AJdAJd}{DdDd}{KlKl}{AJfAJf}{AJhAJh}{AJjAJj}{JjJj}{KdKd}{AJlAJl}{AJnAJn}{K`K`}{JnJn}{CjCj}{ChCh}{AK`AK`}{AKbAKb}{DbDb}{ClCl}{AKdAKd}{AjAj}{AKfAKf}{AKhAKh}{AKjAKj}{AKlAKl}{AAbAAb}{AKnAKn}{{ce}b{}{}}0000000000000000000000000000{{KlDd}b}{AL`e{}{{AHj{c}}AFl}}0{{AL`AAb}e{}{{AHl{c}}AFl}}0{Ddd}00{ALbDd}{KlDd}{{}Gh}{{}AJd}{{}Dd}{{}AAb}{Enc{}}{{{AJ`{ce}}}gBlBl{}}11111111111111111111111111111111101111111111111111111111111111111111{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{Enb}000000000000000000000000000000000{AInDd}{HhDd}{GhDd}`{{GhGh}d}{{AJdAJd}d}{{DdAAb}d}{{DdDd}d}{{KlKl}d}{{AJfAJf}d}{{AAbAAb}d}{{AKnAKn}d}{{GhGhd}d}{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`E`}F`}{{E`{D`{Cn}}}F`}542301{{ce}d{}{}}00000000000000000000{Dh{{Ad{{Gb{Ab{ACn{Jl}}}}}}}}{Ll{{Ad{{Gb{Ab{ACn{Jl}}}}}}}}{{{AJ`{ce}}}KlBlBl}{{F`d}{{Ad{F`}}}}{{E`{D`{Cn}}}{{Ad{E`}}}}{{DhF`}{{Ad{Dh}}}}{{F`F`}{{Ad{{j{Aj}}}}}}{{LlF`}{{Ad{{j{Db}}}}}}{{E`F`}{{Ad{{j{Cl}}}}}}{{AGnF`}{{Ad{AGn}}}}{{{ABb{c}}F`}{{Ad{{j{{Gj{c}}}}}}}Gn}{{AIlALdALd}{{Ad{ALd}}}}{{DhFd}Ff}{{LlFd}Ff}{{E`Fd}Ff}{{{ABb{c}}Fd}FfGn}{{AJbFd}Ff}{{GhFd}Ff}0{{AJdFd}Ff}{{DdFd}Ff}0{{KlFd}Ff}{{AJfFd}Ff}0{{AAbFd}{{Fl{bALf}}}}{{AKnFd}{{Fl{bALf}}}}{{Dhc}b{{Cf{{An{Cd}}}}}}{cc{}}000000{{{An{c}}}Gh{{ALh{Gh}}}}1{cGhALj}2{GhDd}0{AAbDd}4{ALlKl}5{GhKl}{AKnAJf}777777777777777777777{ALnAAb}{AM`AAb}99{{AAbd}Dd}{eDh{{AMb{Ab}}}{{Fb{}{{B`{c}}}}}}{cDh{{Fb{}{{B`{{An{{A@b{Fh}}}}}}}}}}{cDh{{Fb{}{{B`{{An{Ab}}}}}}}}{cF`{{Fb{}{{B`{d}}}}}}{eLl{{Jd{Bf}}}{{Fb{}{{B`{{An{c}}}}}}}}{eLl{{AMd{Bf}}}{{Fb{}{{B`{c}}}}}}{eE`{{Jd{{D`{Cn}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{eE`{{AMd{{D`{Cn}}}}}{{Fb{}{{B`{c}}}}}}{e{{ABb{c}}}Gn{{Fb{}{{B`{{An{c}}}}}}}}{{Bfc}{{j{Aj}}}{{Bd{}{{B`{{An{d}}}}}}}}{{Bfe}Ll{{Jd{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}E`{{Jd{{D`{Cn}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{Bfe}{{ABb{c}}}Gn{{Bd{}{{B`{{An{c}}}}}}}}<:97856{eAGn{{Jd{{D`{Cn}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{eAGn{{AMd{{D`{Cn}}}}}{{Fb{}{{B`{c}}}}}}6{{Bfc}{{j{Aj}}}{{Bd{}{{B`{d}}}}}}{{Bfe}Ll{{Jd{Bf}}}{{Bd{}{{B`{c}}}}}}{{Bfe}E`{{Jd{{D`{Cn}}}}}{{Bd{}{{B`{c}}}}}}{{Bfe}{{ABb{c}}}Gn{{Bd{}{{B`{c}}}}}}{{AMfDd}Kl}{cDh{{Gd{}{{B`{{An{Ab}}}}}}}}{cF`{{Gd{}{{B`{{An{d}}}}}}}}{cF`{{Gd{}{{B`{d}}}}}}{eLl{{Jd{Bf}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{eLl{{AMd{Bf}}HjHl}{{Gd{}{{B`{c}}}}}}{eE`{{AMd{{D`{Cn}}}}HjHl}{{Gd{}{{B`{c}}}}}}{eE`{{Jd{{D`{Cn}}}}HjHl}{{Gd{}{{B`{{An{c}}}}}}}}{{Bf{D`{d}}}F`}{{Bf{D`{c}}}Ll{{Jd{Bf}}}}{{Bf{D`{c}}}E`{{Jd{{D`{Cn}}}}}}{{Bf{D`{c}}}{{ABb{c}}}Gn}{{Bf{D`{{An{d}}}}}F`}{{Bf{D`{{An{c}}}}}Ll{{Jd{Bf}}}}{{Bf{D`{{An{c}}}}}E`{{Jd{{D`{Cn}}}}}}{{Bf{D`{{An{c}}}}}{{ABb{c}}}Gn}{cF`{{Gf{}{{B`{{An{d}}}}}}}}{{{Ej{c}}AAb}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{Ej{c}}AAb}{{AFl{}{{AI`{e}}{AIb{c}}{AId{g}}}}}{AIf{AIh{e}}}Nj{{El{}{{B`{e}}}}GfHjHl}}{{EncAAb}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfAbEn}Dh}{{BfdEn}F`}{{BfBfEn}Ll}{{Bf{D`{Cn}}En}E`}{{Bf{D`{Cn}}En}AGn}{{BfcEn}{{ABb{c}}}Gn}{{EnAAb}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{BfEn}Dh}{{BfEn}F`}{{BfEn}Ll}{{BfEn}E`}{{BfEn}AGn}{{BfEn}{{ABb{c}}}Gn}{{BfEnDd}Dh}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}En}{{An{c}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{HhEn}{{Ad{Gh}}}}{{AInEn}{{Ad{Gh}}}}0{{DhEn}{{Ad{Gh}}}}{{F`En}{{Ad{Gh}}}}{{LlEn}{{Ad{Gh}}}}{{E`En}{{Ad{Gh}}}}{{AGnEn}{{Ad{Gh}}}}{{{ABb{c}}En}{{Ad{Gh}}}Gn}{{HhEn}Gh}{{AInEn}Gh}0{{DhEn}Gh}{{F`En}Gh}{{LlEn}Gh}{{E`En}Gh}{{AGnEn}Gh}{{{ABb{c}}En}GhGn}{{DhEn}{{An{Ab}}}}{{}Dd}00000000000000000000000{DhAb}{{{ABb{c}}En}{{An{Gl}}}Gn}0{Gh{{An{Bf}}}}{{AMhEn}Gh}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}En}{{An{c}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{DhEn}{LlEn}{AGnEn}{{Dhdd}{{Ad{Ah}}}}{{F`dd}{{Ad{Ah}}}}{{Lldd}{{Ad{Ah}}}}{{E`dd}{{Ad{Ah}}}}{{AGndd}{{Ad{Ah}}}}{{{ABb{c}}dd}{{Ad{Ah}}}Gn}{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`{D`{Cn}}}F`}{{E`E`}F`}543210{{Ghc}bADj}{{AJdc}bADj}{{Ddc}bADj}{{AJfc}bADj}{{AAbc}bADj}{{AKnc}bADj}{{Ghcd}bADj}{{}En}000000000000000000000000000000000{DhDd}{Dd{{An{Dd}}}}{AAb{{An{AAb}}}}{ce{}{}}000000000000000000000000000000000{{AMj{An{En}}En}{{Ad{Hh}}}}{{AMj{An{En}}En}Hh}{Dhc{}}{F`c{}}{Llc{}}{E`c{}}{AGnc{}}{{{ABb{c}}}eGn{}}{HhAb}{AMjAb}{Gh{{Ad{Gh}}}}{Ddd}00{Ghd}111010111110101011110111101{AAbd}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}{{AAl{cgAAj}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}{{An{c}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`{D`{Cn}}}F`}{{E`E`}F`}542301{{AIjAIj}{{Ad{{Gb{AIjAIj}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{DdDd}{{Ad{d}}}}{F`{{An{d}}}}{F`Ab}{LlAb}{E`Ab}{F`{{An{Jb}}}}{AHf{{An{Hb}}}}{AHh{{An{Jb}}}}{AHfAb}{AHhAb}{{DdDd}{{Ad{Dd}}}}9876{{Bf{D`{Cn}}EnEn}F`}{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{Ll{{Ad{En}}}}{E`{{Ad{En}}}}{KlAMf}`{{}c{}}00{{Bfc}Ll{{Jd{{D`{{An{Bf}}}}}}}}{{Bfc}Ll{{Jd{{D`{{AHd{Bf}}}}}}}}{{Bfc}Ll{{Jd{{D`{{An{{AHd{Bf}}}}}}}}}}{{Bfc}Ll{{Jd{{D`{Bf}}}}}}{{Bfc}E`{{Jd{{D`{{AHd{{D`{Cn}}}}}}}}}}{{Bfc}E`{{Jd{{D`{{D`{Cn}}}}}}}}{{Bfc}E`{{Jd{{D`{{An{{D`{Cn}}}}}}}}}}{{Bfc}E`{{Jd{{D`{{An{{AHd{{D`{Cn}}}}}}}}}}}}{{Bfe}{{ABb{c}}}Gn{{Jd{{D`{{An{c}}}}}}}}{{Bf{D`{c}}}{{ABb{c}}}Gn}{{BfDd}Kl}{Bf{{ABb{c}}}Gn}{{DhEnEn}Dh}{{F`EnEn}F`}{{LlEnEn}Ll}{{E`EnEn}E`}{{AGnEnEn}AGn}{{{ABb{c}}EnEn}{{ABb{c}}}Gn}{{Bf{Ej{c}}}{{ABb{c}}}Gn}{{Bf{Ej{c}}G`}{{ABb{c}}}Gn}{F`c{}}0{{DhDh}F`}{{F`F`}F`}{{LlLl}F`}{{LlBf}F`}{{E`E`}F`}{{E`{D`{Cn}}}F`}542310{Dh{{Ad{{ACn{Jl}}}}}}{Ll{{Ad{{ACn{Jl}}}}}}{Dh{{`{{Kf{}{{B`{{An{Ab}}}}}}}}}}{Ll{{`{{Kf{}{{B`{{An{Bf}}}}}}}}}}{Dh{{`{{Kh{}{{B`{{An{Ab}}}}}}}}}}{Ll{{`{{Kh{}{{B`{{An{Bf}}}}}}}}}}{{GhGh}{{An{AMl}}}}{{AJfAJf}{{An{AMl}}}}{Hh{{An{En}}}}{{{AJ`{AKfHf}}}{{An{En}}}}{{AHfJbKj}{{Ad{{An{Hb}}}}}}{{AHhJbKj}{{Ad{{An{Jb}}}}}}{{AHfJbKj}{{Ad{Ab}}}}{{AHhJbKj}{{Ad{Ab}}}}{{BfEnJb}{{Ad{F`}}}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{DhDh}{F`F`}{LlLl}{E`E`}{AGnAGn}{{{ABb{c}}}{{ABb{c}}}Gn}`{HhEn}{{{AJ`{AKfHf}}}En}{{F`c{An{d}}}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}}{{Llc{An{Bf}}}{{Ad{Ll}}}{{Fb{}{{B`{L`}}}}}}{{E`c{An{{D`{Cn}}}}}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}}{{F`ce}{{Ad{F`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{d}}}{{Bn{{An{d}}}}}}}}{{Llce}{{Ad{Ll}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{Bf}}}{{Bn{{An{Df}}}}}}}}{{E`ce}{{Ad{E`}}}{{Fb{}{{B`{L`}}}}}{{C`{{An{{D`{Cn}}}}}{{Bn{{An{{Ej{Cn}}}}}}}}}}{{F`F`{An{d}}}{{Ad{F`}}}}{{LlF`{An{Bf}}}{{Ad{Ll}}}}{{E`F`{An{{D`{Cn}}}}}{{Ad{E`}}}}{Dhb}{{DhDd}b}{{KlAMf}b}{{DhJl}Dh}{{F`Jl}F`}{{LlJl}Ll}{{E`Jl}E`}{{AGnJl}AGn}{{{ABb{c}}Jl}{{ABb{c}}}Gn}{{DhJl{An{Ab}}}Dh}{{F`Jl{An{d}}}F`}{{LlJl{An{Bf}}}Ll}{{E`Jl{An{{D`{Cn}}}}}E`}{{AGnJl{An{{D`{Cn}}}}}AGn}{{{ABb{c}}Jl{An{{Gj{c}}}}}{{j{{Gj{c}}}}}Gn}{{F`d}F`}{{Lld}Ll}{{E`d}{{j{Cl}}}}{{AGnd}AGn}{{F`Dj}{{j{Aj}}}}{{LlDj}{{j{Db}}}}{{E`Dj}{{j{Cl}}}}{{AGnDj}AGn}{{AHfCn}Ab}{{AHhCn}Ab}{{GhDd}{{Ad{Gh}}}}`{{HhHh}c{}}{{{j{c}}Ab}{{Fl{AbAHb}}}{}}000000{F`{{An{L`}}}}{F`Ab}{LlAb}{E`Ab}{{LlDl}Ll}{{E`Dl}E`}{{Ddd}AAb}{{Kld}ALl}{AJfAKn}{{DdBfd}ALl}{AJfBf}{{LlEn}{{Ad{Ab}}}}{{DhDd}b}{AAbAAb}{Dh{{Ad{Lh}}}}{ce{}{}}0000000000000000000000000000{DdDd}{AAbAMn}{E`Ll}{cDf{}}00{{Dhc}{{Ad{Dh}}}{{Cf{Cd}{{Bn{{Ad{Ab}}}}}}}}{{Dhe}{{Ad{{j{g}}}}}{}{{Cf{{An{Cd}}}{{Bn{{Ad{{An{c}}}}}}}}Cb}Bl}{g{{Fl{AHje}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{{AAbg}{{Fl{AHle}}}{}{}{{Fb{}{{B`{{Fl{ce}}}}}}}}0{AL`{{Fl{eg}}}{}{{AHj{c}}AFl}{}}0{{AL`AAb}{{Fl{eg}}}{}{{AHl{c}}AFl}{}}0{Gh{{Ad{c}}}J`}{c{{Fl{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000{{Ddd}{{Ad{AAb}}}}{{Dh{j{c}}e}{{Ad{Dh}}}Bl{{Cf{{An{Cd}}An}{{Bn{{Ad{{An{Ab}}}}}}}}}}{cM`{}}000000000000000000000000000000000{AAbAAb}{F`{{Ad{F`}}}}{Ll{{Ad{Ll}}}}{E`{{Ad{E`}}}}{{{ABb{c}}}{{Ad{{j{{Gj{c}}}}}}}Gn}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}En}cNj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}0{{DdGh}d}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}gNj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{AHfCn}Ab}{{AHhCn}Ab}{{F`Ld{Ej{Hd}}}{{Ad{b}}}}{{AN`Ld{Ej{Hd}}}{{Ad{b}}}}{{ANbLd{Ej{Hd}}}{{Ad{b}}}}{{ALdLd{Ej{Hd}}}{{Ad{b}}}}{{ANdLd{Ej{Hd}}}{{Ad{b}}}}{{ANfLd{Ej{Hd}}}{{Ad{b}}}}{{ANhLd{Ej{Hd}}}{{Ad{b}}}}{{ANjLd{Ej{Hd}}}{{Ad{b}}}}{{ANlLd{Ej{Hd}}}{{Ad{b}}}}{{AMjLd{Ej{Hd}}}{{Ad{b}}}}{{AHfLd{Ej{Hd}}}{{Ad{b}}}}{{AHhLd{Ej{Hd}}}{{Ad{b}}}}{{LlLd{Ej{Hd}}}{{Ad{b}}}}{{E`Ld{Ej{Hd}}}{{Ad{b}}}}{{AGnLd{Ej{Hd}}}{{Ad{b}}}}{{{ABb{c}}Ld{Ej{Hd}}}{{Ad{b}}}Gn}{{F`Ld{D`{Hd}}}{{Ad{b}}}}{{AN`Ld{D`{Hd}}}{{Ad{b}}}}{{ANbLd{D`{Hd}}}{{Ad{b}}}}{{ALdLd{D`{Hd}}}{{Ad{b}}}}{{ANdLd{D`{Hd}}}{{Ad{b}}}}{{ANfLd{D`{Hd}}}{{Ad{b}}}}{{ANhLd{D`{Hd}}}{{Ad{b}}}}{{ANjLd{D`{Hd}}}{{Ad{b}}}}{{ANlLd{D`{Hd}}}{{Ad{b}}}}{{AMjLd{D`{Hd}}}{{Ad{b}}}}{{AHfLd{D`{Hd}}}{{Ad{b}}}}{{AHhLd{D`{Hd}}}{{Ad{b}}}}{{LlLd{D`{Hd}}}{{Ad{b}}}}{{E`Ld{D`{Hd}}}{{Ad{b}}}}{{AGnLd{D`{Hd}}}{{Ad{b}}}}{{{ABb{c}}Ld{D`{Hd}}}{{Ad{b}}}Gn}{ce{}{}}000000000000000000000000000000000{Enc{}}0{En{{ANn{ce}}}{}{}}{{{D`{Mb}}e}c{}{{Md{Dl}{{Bn{c}}}}}}{{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}{An{G`}}}{{AFl{}{{AI`{c}}{AIb{e}}{AId{g}}}}}Nj{AIf{AIh{c}}}{{El{}{{B`{c}}}}GfHjHl}}{{Dh{j{c}}e}DhBl{{Cf{{An{Cd}}An}{{Bn{{An{Ab}}}}}}}}```````````{{cf}b{}}{AIjd}{{AO`{An{Bf}}}b}{{AIjAIj}{{Ad{b}}}}{AO`b}{{AO`Bf}b}{{AIjDj}Dl}<<<<<<<<{{AIjAIjc}{{Ad{AIj}}}AIl}{{AIjDd}{{Ad{Ab}}}}{AIjAIj}{{ce}b{}{}}{{}AOb}{Enc{}}0000000{{AO`c}AIj{{Fb{}{{B`{{An{Bf}}}}}}}}{Enb}000{AIjDd}{{AIjBf}c{}}{{AIjAIj}c{}}{{AIjLl}c{}}210{{AIlALdALd}{{Ad{ALd}}}}{AO`AIj}{AOb{{AAn{AOd}}}}{cc{}}000{{ALd{AAn{AOd}}dAOf}AIj}{{ALdAOf}AIj}{{LlALbAOf}{{Ad{AIj}}}}{{BfdEnAOf}AIj}{{AIjEn}{{Ad{Gh}}}}{{AIjEn}Gh}{AIj{{AAn{AOd}}}}=<;<;={{}En}000{ce{}{}}0000{AIjAb}{AIjd}0{AIjAOh}{AIjEn}{{AIjLl}c{}}{{AIjBf}c{}}{{AIjAIj}c{}}102{{AIjAIj}{{Ad{{Gb{AIjAIj}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}8{{AOb{AAn{AOd}}}{{Ad{b}}}}9{AIj{{Ad{En}}}}{AIjBf}{{BfEnAOf}AO`}{{{AAn{AOd}}}AOb}{AOh{{An{c}}}{}}:988:9;{AIjALd}{{AO`Bf}{{Gb{Jfd}}}}`{AOh{{Gb{En{An{En}}}}}}{{AIjd}AIj}{{AIjDj}AIj}`{{AIjdd}Eh}{{AIjALbAOj}AIj}{AIj{{Ad{AIj}}}}{AIjAIj}{ce{}{}}{c{{Fl{e}}}{}{}}0000000{cM`{}}0004{AIjd}{AIj{{Ad{AOl}}}}4444``````{{cf}b{}}05555{ALbAOd}{AOfAOf}{AOdAOd}{{ce}b{}{}}0{{}AOf}{{}AOd}{Enc{}}000{Enb}0{{AOfAOf}d}{{AOdBf}{{An{Jf}}}}{{AOfFd}Ff}{{AOdFd}Ff}{cc{}}0{{AOdJf}Bf}{AOdALb}{{AOdJf}{{An{Bf}}}}{{}En}0{ce{}{}}0{AOdd}0{AOdEn}{{AOdAOd}d}33{c{{Fl{e}}}{}{}}000{cM`{}}055`55{{}AOn}{Enc{}}0{{}b}{Enb}{AOnb}2?4;:665{{}d};```````330``````````````````````{B@`Bf}<<<<`5{B@`}66644`{{B@bFd}{{Fl{bALf}}}}{{B@`Fd}{{Fl{bALf}}}}0{cc{}}{cB@`{{ALh{{AHd{Bf}}}}}}1{{}{{Ij{BfB@b}{{Bn{b}}}}}}{{}En}0{ce{}{}}0{cAHbAG`}````{{{Ij{BfB@b}{{Bn{b}}}}}b}{cAHbB@d}{cDf{}}{c{{Fl{e}}}{}{}}000{cM`{}}066``````````````````{{cf}b{}}77{B@fB@f}{{ce}b{}{}}{Enc{}}0{Enb}{{FdB@hEn}Ff}{cc{}}{{}B@j}{{}B@f}{{}{{An{En}}}}{{}Df}{{}d}{{}En}{ce{}{}}{{{An{B@j}}}b}{B@fb}{{{An{En}}}b}2{{{An{d}}}b}4{c{{Fl{e}}}{}{}}0{cM`{}}6````````````{{cf}b{}}00{{AOl{Ej{Ab}}B@l}{{Ad{b}}}}{{AOlC`}{{Ej{Ab}}}}0{{AOlF`}{{Ad{AOl}}}}{{AOl{D`{AMf}}}{{Ad{AOl}}}}0{{AOlJlEn}AOl}{{AOlAOl}c{}}{{AOlAb}c{}}0{AOlAOl}0{{AOlBfe}{{Ad{AOl}}}B@n{{Md{Ab}{{Bn{c}}}}}}{{AOlEne}{{Ad{AOl}}}B@n{{Md{Ab}{{Bn{c}}}}}}22{ce{}{}}0000000003{BA`BA`}{BAbBAb}5{{ce}b{}{}}00{{AOlBf}{{Ad{Ab}}}}{{AOle}{{Ad{{Ej{Ab}}}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{}BAb}{{}AOl}{Enc{}}000000000<<={Enb}000{{AOlBf}{{Ad{AOl}}}}16{{AOl{D`{c}}}AOl{{Jd{Bf}}}}{{AOl{BAd{Bf}}}AOl}{{AOl{An{{D`{c}}}}}{{Ad{AOl}}}{{Jd{Bf}}}}{AOl{{Ej{Dd}}}}7{{BAbBAb}d}{{AOlAOl}d}00{{ce}d{}{}}00{AOlEn}`{{AOle}{{Ad{AOl}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOl{Ej{Ab}}}{{Ad{AOl}}}}{{AOlAOl}{{Ad{b}}}}{AOl{{Ej{Kl}}}}{{AOlACh}{{Ad{AOl}}}}{{AOlF`}{{Ad{AOl}}}}{{BA`Fd}Ff}{{BAbFd}Ff}{{AOlFd}Ff}0{cc{}}0000{B@lAOl}{BAfAOl}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAOl{{Fb{}{{B`{Ab}}}}}}{{{D`{BAh}}}{{Ad{AOl}}}}{{{D`{BAh}}B@l}{{Ad{AOl}}}}{{cB@l}{{Ad{AOl}}}{{Bd{}{{B`{BAh}}}}}}{{AOlEn}{{An{{Ej{Gh}}}}}}{{AOlBf}{{An{En}}}}{AOl{{Ej{Bf}}}}{AOl{{Ej{AMf}}}}{AOl{{D`{Ab}}}}{AOl{{Ej{Ab}}}}{{AOlEn}{{Ad{BAh}}}}{{AOlEnBAh}{{Ad{b}}}}{{AOlEnBAh}b}{AOl{{An{{Ad{Dd}}}}}}`{{AOle}{{Ad{BAj}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}0{{AOl{Ej{Ab}}dd}{{Ad{BAj}}}}{{BAbc}bADj}{{AOl{An{Ld}}}{{Ad{ANd}}}}{{AOl{An{En}}}AOl}{AOlEn}{{AOl{D`{Ab}}}{{Ad{AOl}}}}0{{AOl{D`{Ab}}}AOl}{{AOl{BAl{En}}}c{}}{{AOl{BAn{En}}}c{}}{{AOlBB`}c{}}{{AOlBf}c{}}{{AOl{BBb{En}}}c{}}{{AOl{BBd{En}}}c{}}{{AOlEn}c{}}{{AOl{Jh{En}}}c{}}{{}En}0000{{AOlEnc}{{Ad{AOl}}}B@n}{ce{}{}}000000{AOl{{Ad{F`}}}}{AOld}1{AOl{{Ih{Ab}}}}{{AOld}BBf}{AOlBBh}{AOl{{Ad{{An{Ab}}}}}}{{AOlBA`}{{Ad{{An{Ab}}}}}}{{AOlce}{{Ad{AOl}}}{{BBj{AMf}}}{{BBj{AMf}}}}{{AOlBBl}{{Ad{AOl}}}}3{{AOlAOl}c{}}{{AOlAb}c{}}0{AOlEn}{{{Ej{c}}}{{Ad{AOl}}}B@n}{{{Ej{Ab}}}AOl}{{{Ej{Ab}}}{{Ad{AOl}}}}{BBf{{An{c}}}{}}{BBh{{An{c}}}{}}{AOlAOl}{{AOlcd}{{Ad{{Ej{AOl}}}}}{{BBj{Df}}}}0{{AOle}{{Ad{c}}}{}{{C`{AOl}{{Bn{{Ad{c}}}}}}}}0{{AOlgc}{{Ad{e}}}{}{}{{C`{AOlc}{{Bn{{Ad{e}}}}}}}}{AOl{{An{Ab}}}}{{AOlAOl}d}<<={{AOlBfBf}{{Ad{AOl}}}}{{AOlBfc}{{Ad{AOl}}}B@n}{{AOlEnc}{{Ad{AOl}}}B@n}18`{{AOlAbdd{An{Hd}}}{{Ad{AOl}}}}0{{AOlEndd{An{Hd}}}{{Ad{AOl}}}}{AOlB@l}{{AOlAOl}{{Ad{b}}}}{{AOle}{{Ad{AOl}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOlEn}{{An{Ab}}}}{{AOlc}{{Ad{AOl}}}{{BBn{En}}}}2{{AOlc}{{Ad{{Ej{Ab}}}}}{{BBj{AMf}}}}{{AOleBC`}{{Ad{AOl}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOleB@l}{{Ad{AOl}}}{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AOl{D`{c}}}{{Ad{b}}}{{Jd{Bf}}}}{AOl{{Gb{EnEn}}}}{{AOlJl}AOl}{AOld}{AOlb}{BBf{{Gb{En{An{En}}}}}}{BBh{{Gb{En{An{En}}}}}}{{AOlJlEn}AOl}0{{AOlcDn}{{Ad{AOl}}}{{BBj{AMf}}}}0{AOl{{`{{Bd{}{{B`{AOl}}}}}}}}{{AOlEnd}{{Ej{AOl}}}}{{AOlAb}c{}}0{{AOlAOl}c{}}{{AOlBA`}{{Ad{{An{Ab}}}}}}{{AOl{An{En}}}AOl}{{AOlDl}{{Ad{AOl}}}}{{AOlDl}AOl}{{AOlDld}AOl}{{AOlBCb}{{Ad{Lh}}}}{ce{}{}}00{cDf{}}{{AOlEncDn}{{Ad{AOl}}}{{BBj{AMf}}}}{{AOl{An{Bf}}{An{{Ln{Df{Ej{Df}}}}}}}{{Ad{AOl}}}}{{AOlBfe}{{Ad{AOl}}}B@n{{Md{Ab}{{Bn{{Ad{c}}}}}}}}{{AOlEne}{{Ad{AOl}}}B@n{{Md{Ab}{{Bn{{Ad{c}}}}}}}}{c{{Fl{e}}}{}{}}0000{BCd{{Ad{AOl}}}}{{{Gb{BCf{D`{ALl}}}}}{{Ad{AOl}}}}{{cB@l}{{Ad{AOl}}}{{Bd{}{{B`{{Ad{BAh}}}}}}}}{{AOlBf}{{Ad{En}}}}44444{cM`{}}0000{{AOl{An{{D`{Df}}}}BAb{An{{Gb{JlEn}}}}}{{Ad{AOl}}}}{{AOld{An{{D`{Df}}}}BAb{An{{Gb{JlEn}}}}}{{Ad{AOl}}}}1{{AOlAOl}{{Ad{AOl}}}}0>>>>>{AOlEn}{{AOlc}{{Ad{AOl}}}B@n}{{AOlcB@l}{{Ad{AOl}}}B@n}{{AOlAb}AOl}{{AOlBf{An{L`}}}{{Ad{AOl}}}}{{AOlBf{An{L`}}}AOl}`{{cf}b{}}{ce{}{}}0{BBlBBl}{{ce}b{}{}}{{}BBl}{Enc{}}0{Enb}{{BBlBBl}d}{{ce}d{}{}}00{{BBlFd}Ff}{cc{}}{{BBlc}bADj}`{{}En};`;{c{{Fl{e}}}{}{}}0{cM`{}}```=````````````````````````````````>>>>{BAj{{Ad{AOl}}}}`{BCh{{D`{BCj}}}}{{BAjc}{{Ad{AOl}}}{{Cf{AOl}{{Bn{{Ad{AOl}}}}}}HjHl}}{AhDh}{ce{}{}}000000000000000{BChBCh}{AhAh}{BAjBAj}{BClBCl}{{ce}b{}{}}0009{{}BCh}{{}Ah}{Enc{}}00{BCnc{}}1111111111111`{{BD`e}{}{}{{BDb{c}}}}{Enb}0000{BChb}111{{BChBCh}d}{{AhAh}d}{{ce}d{}{}}00000`{BDdL`}{BCh{{D`{L`}}}}{BAj{{Ad{AOl}}}}{BCh{{Ej{L`}}}}{{BChFd}Ff}{{AhFd}Ff}{{BAjFd}Ff}{{BClFd}Ff}0{{BfBCl}Df}{cc{}}000{{{Ej{BDf}}}BCh}1{{{Ej{{Ej{BDf}}}}}BCh}{{{Ej{{Gb{{Ej{L`}}{Ej{BCj}}}}}}}BCh}{BChAh}444{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cBCh{{Fb{}{{B`{BDf}}}}}}{cBCh{{Gd{}{{B`{BDf}}}}}}{{AhEn}BDd}{BAjAh}0{AhDl}{{AhBf}Dl}{{BDhdd}{{Ad{Ah}}}}0{BAj{{Ad{AOl}}}}{AhBCh}{{}En}0000000{ce{}{}}000000020{BChc{}}0100{BDdd}{Ahd}{BChd}{BCh{{BDl{{BDj{{Ih{L`}}}}{Ih{BCj}}}}}}{AhBDn}{BAj{{Ej{Ab}}}}{{BAj{An{{Gb{JlEn}}}}}{{Ej{Ab}}}};{BDdEn}{AhEn}====={{{Ej{L`}}{Ej{BCj}}d}BCh}{{AOl{Ej{Ab}}Ah{An{{Ej{Df}}}}}BAj}{BDn{{An{c}}}{}}{{BDnEn}{{An{c}}}{}}{{BAjc}{{Ad{AOl}}}{{C`{AOl}{{Bn{{Ad{AOl}}}}}}HjHl}}{c{}{}}{AhBD`}{{BAjJbKj}{{Ad{AOl}}}}{{BAje}BAj{{Jd{Bf}}}{{Fb{}{{B`{c}}}}}}{{AhJlEn}BCn}{BChb}{Ahb}{{BAjCn}{{Ad{AOl}}}}{BAj{{Ad{AOl}}}}{Ah{{Ej{L`}}}}0{BAjAh}0{ce{}{}}000{cDf{}}{c{{Fl{e}}}{}{}}000000000000000{cM`{}}0000000{AhAh}{AhBCh}{AhBE`}:66666666`````{{BChc}Ab{{C`{{Gb{L`BCj}}}{{Bn{An}}}}HjHl}}{{BChc}Ab{{C`{{Gb{L`BCj}}}{{Bn{}}}}HjHl}}{{{D`{{BEb{L`}}}}c}Ab{{C`{{BEb{L`}}}{{Bn{An}}}}HjHl}}{{{D`{{BEb{L`}}}}c}Ab{{C`{{BEb{L`}}}{{Bn{}}}}HjHl}}{{{D`{c}}eBEd}{{AGd{c}}}{BEfBEh}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{D`{c}}G`eBEd}{{AGd{c}}}{BEfBEh}{{Bd{}{{B`{{Gb{L`L`}}}}}}Gf}}{{{j{c}}L`L`}{{j{c}}}Bl}{{BE`{D`{Eh}}}d}{{BEjAh}Ab}{{BElBEl}BEl}0`{{BEnAOlAh}{{Ad{Ab}}}}{BEn{{Ad{Bf}}}}```````````````````````{{cf}b{}}00{{BF`Gh}{{An{b}}}}{{BFbGh}b}0{ce{}{}}00000{BF`BF`}{BFbBFb}{BAhBAh}{{ce}b{}{}}00{{{D`{c}}}Dd{{AMb{Dd}}}}{{}BAh}{Enc{}}00000{Enb}00{{BAhBAh}d}{{ce}d{}{}}00{{BAhFd}Ff}{cc{}}{{{Gb{DdEn}}}BF`}1{{{Gb{DdEn}}}BFb}2{{eEn}B@l{{ALh{Dd}}}{{Bd{}{{B`{{Ej{{Gb{Dfc}}}}}}}}}}{{}En}00{ce{}{}}00{BF`Ab}{BFbAb}{{DdEn}BF`}{{DdEn}BFb}{{{Ej{Gh}}}BAh}{{BF`En}Ab}{{BFbEn}Ab}{{{D`{BAh}}{An{En}}}{{Ad{B@l}}}}0{{{D`{BAh}}{An{En}}}{{Ad{{Ej{Dd}}}}}}999{c{{Fl{e}}}{}{}}00000{cM`{}}00;;;{{{D`{AOl}}}{{Ad{AOl}}}}0`````{{HdHd}Hd}{{{D`{AOl}}{An{Ld}}}{{Ad{{Gb{{Ej{ANd}}Ld}}}}}}{{{BFd{Jl}}Ld{Ej{Hd}}}b}????{{}BFf}{Enc{}}000{Enb}0{BFfHd}{{BFhFd}Ff}{cc{}}0{{BFhc}bADj}``{{}En}0{ce{}{}}0{{{BFj{BFhce}}L`HdAOlgi}b{}BFl{{C`{}{{Bn{c}}}}}{{Cf{c}}}}????>>{{BFnLd{Ej{Hd}}}{{Ad{b}}}}0{{BFnLd{D`{Hd}}}{{Ad{b}}}}033{{BFf{D`{Cn}}}b}{{BFfKb}b}{{BFfJl}b}{{BFfJf}b}{{BFfHd}b}`````````````````````````````````````````````````````````````````````````````````````````````````````````{{cf}b{}}0000000000{{{AAn{ce}}}e{}BG`}{{{AAn{c}}}BGb{BGdLb}}{{{AAn{ce}}}{}LbBG`}{{{AAn{c}}}KbBGf}{{{AAn{ce}}}cLbBG`}{{{AAn{{D`{{BGh{c}}}}e}}}{{AAn{{D`{c}}e}}}{}BG`}{{{AAn{{BGh{c}}e}}}{{AAn{ce}}}{}BG`}{ce{}{}}00030000000000000000000000{{AIjAIjc}{{Ad{AIj}}}AIl}{{{AAn{c}}}{{An{AG`}}}{AG`Lb}}`{{BGjAb}{{Ad{Ab}}}}{{BGjc}{{Ad{Ab}}}A`}{MbMb}{BGlBGl}{{{AAn{ce}}}{{AAn{ce}}}Lb{BG`Nj}}{KnKn}{BCbBCb}{ALlALl}{BAfBAf}{KjKj}{BGnBGn}{BH`BH`}{BHbBHb}{{ce}b{}{}}0000000000{{{AAn{ce}}{AAn{ce}}}AMl{BHdLb}BG`}{AL`e{}{{AHj{c}}AFl}}0{{AL`AAb}e{}{{AHl{c}}AFl}}0{{ce}AMl{}{}}{{AHbB@`}AHb}{AHbAHb}{{FhAAb}{{A@b{Fh}}}}{ALlAAb}```{{}b}{cbBG`}{{}{{AAn{c}}}BHf}{{}Kn}{{}BCb}{{}ALl}{{}BAf}{{}Kj}`{Enc{}}00{{{AAn{ce}}}cLbBG`}11111111111111111111111{{{AAn{c}}}Bf{AG`Lb}}`{{{AAn{AAdc}}}{{Fl{{AAn{ec}}{AAn{AAdc}}}}}BG`{AAdHjHl}}{{{AAn{AAdc}}}{{AAn{ec}}}BG`{AAdHjHl}}{{{AAn{ce}}}{{BHh{ce}}}Lb{NjBG`}}{Enb}000{{{AAn{ce}}}bLbBG`}111111111{{MbMb}d}{{{AAn{BHj}}BHj}d}{{{AAn{Fh}}Fh}d}{{{AAn{ce}}{AAn{ce}}}d{BHlLb}BG`}{{BCbBCb}d}{{ALlALl}d}{{BAfBAf}d}{{KjKj}d}{{BHbBHb}d}{{ce}d{}{}}00000000000000000000{BGl{{Gb{JfJf}}}}`{{BAfc}BAf{{C`{EnALl}{{Bn{d}}}}}}{{AIlALdALd}{{Ad{ALd}}}}{{{AAn{BHn}}}{{Fl{bBI`}}}}{{AHbFd}{{Fl{bALf}}}}0{{MbFd}{{Fl{bALf}}}}{{BGlFd}{{Fl{bALf}}}}{{{AAn{ce}}Fd}{{Fl{bALf}}}{AAfLb}BG`}{{{AAn{ce}}Fd}{{Fl{bALf}}}{B@dLb}BG`}{{{AAn{ce}}Fd}{{Fl{bALf}}}LbBG`}{{BCbFd}Ff}{{ALlFd}{{Fl{bALf}}}}{{BAfFd}{{Fl{bALf}}}}{{KjFd}{{Fl{bALf}}}}{{BGnFd}{{Fl{bALf}}}}{{BH`Fd}{{Fl{bALf}}}}{{BHbFd}{{Fl{bALf}}}}`{BIbAHb}{cc{}}{BI`AHb}{BIdAHb}{BIfAHb}3{JfMb}4{BIh{{AAn{BIj}}}}{BIl{{AAn{BIl}}}}{BInc{}}7{{{D`{c}}}{{AAn{{D`{c}}}}}Nj}{{{BEb{c}}}{{AAn{{D`{c}}}}}{}}{c{{AAn{c}}}{}}{Bf{{AAn{Bf}}}}{{{A@b{ce}}}{{AAn{ce}}}LbBG`}{BJ`{{AAn{BIl}}}}{{{AAn{Bf}}}{{AAn{{D`{Cn}}}}}}{{{Ej{ce}}}{{AAn{{D`{c}}e}}}{}{BG`Nj}}{BIj{{AAn{BIj}}}}{BJb{{AAn{BJb}}}}{{{AHd{c}}}{{AAn{c}}}{BJdLb}}{BJf{{AAn{BJb}}}}{Df{{AAn{Bf}}}}{cc{}}0000{{{Ej{ALl}}}BAf}1111{{c{An{G`}}}BJh{}}{{{BJj{Jl}}{BJj{Cn}}{An{G`}}}BJl}{{{BJj{Jl}}{BJj{Cn}}{An{G`}}}BJn}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{e{{AAn{{D`{c}}}}}{}{{Fb{}{{B`{c}}}}}}{{gEn}{{BK`{Jl}}}Jd{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}0{e{{BK`{Jl}}}{{Fb{}{{B`{{An{d}}}}}}}{{Fb{}{{B`{{An{c}}}}}}}}{{gAAb}{{BK`{Jl}}}BEh{{Fb{}{{B`{{An{c}}}}}}}{{Fb{}{{B`{{An{e}}}}}}}}2{e{{AAn{{D`{c}}}}}Hj{{Gd{}{{B`{c}}}}}}{{}{{AAn{c}}}Lb}{c{{AAn{ec}}}BG`Lb}{Bf{{Fl{BKb}}}}{{Bfc}BKd{}}{{{AAn{ce}}{AAn{ce}}}d{BKfLb}BG`}{{{AAn{ce}}}{{An{c}}}LbBG`}{{{AAn{ce}}}cLbBG`}{BAf{{Ej{Bf}}}}{{EhEn}Gh}4{BKhd}{{{AAn{ce}}g}b{BKjLb}BG`ADj}{{BCbc}bADj}{{ALlc}bADj}{{Kjc}bADj}{{BHbc}bADj}{MbJf}{{}b}{cb{NjBG`}}{{BAfBf}{{An{En}}}}{{{D`{Jf}}}{{`{{Bd{}{{B`{En}}}}}}}}{{}En}000000000000`{BGlHd}`{ce{}{}}000000000000{{{AAn{ce}}}{{An{c}}}{}BG`}{{{AAn{ce}}}{}LbBG`}{{{AAn{BKl}}}Ab}{BAfd}{BGld}{Mbd}`{{{AAn{BHn}}}d}{cd{}}1{{{AAn{ce}}{AAn{ce}}}d{BKfLb}BG`}{BAfEn}`1{{AIjAIj}{{Ad{{Gb{AIjAIj}}}}}}{{DhDh}{{Ad{{Gb{DhDh}}}}}}{{{AAn{ce}}}cNj{BG`Nj}}{BKnAb}0{BL`Ab}``11``{{{AAn{ce}}{AAn{ce}}}d{BHlLb}BG`}{{BLbEn}{{An{En}}}}{{Bfc}BLd{}}{c{{AAn{c}}}{}}{{cAAbd}ALl{{ALh{Df}}}}{e{{AAn{c}}}{}{{Md{{BHh{c}}}{{Bn{c}}}}}}{{ce}{{AAn{ce}}}{}BG`}{{}{{AAn{{BGh{c}}}}}{}}{c{{AAn{{BGh{e}}c}}}BG`{}}{En{{AAn{{D`{{BGh{c}}}}}}}{}}{{Enc}{{AAn{{D`{{BGh{e}}}}c}}}BG`{}}3210`{{}Mb}{{}BGl}{{{AAn{ce}}{AAn{ce}}}{{An{AMl}}}{BKfLb}BG`}{c{{BLf{{AAn{c}}}}}{}}{{ce}{{BLf{{AAn{ce}}}}}{}BG`}`````{BKnAb}0{{{AAn{c}}BLh}b{AG`Lb}}{{{AAn{ce}}{AAn{ce}}}dLbBG`}{{BL`JbKj}{{Ad{Ab}}}}{{{AAn{BHn}}{D`{Cn}}}{{Fl{EnBI`}}}}{{{AAn{BHn}}BLj}{{Fl{bBI`}}}}{{{AAn{BHn}}{Ej{Cn}}}{{Fl{EnBI`}}}}{{{AAn{BHn}}Df}{{Fl{EnBI`}}}}{{{AAn{BHn}}{D`{BLl}}}{{Fl{EnBI`}}}}`{{{AAn{BHn}}BLn}{{Fl{HdBI`}}}}`{{AGhEnEn}AGh}0{{{AAn{c}}}{{An{AG`}}}{AG`Lb}}{{BM`Cn}Ab}{{JfJf}BGl}`{{{AAn{ce}}}EnLbBG`}>>{Mb{{An{Jf}}}}{ce{}{}}0000000000{cDf{}}0{AL`{{Fl{eg}}}{}{{AHj{c}}AFl}{}}0{{AL`AAb}{{Fl{eg}}}{}{{AHl{c}}AFl}{}}0{c{{Fl{e}}}{}{}}00{{{AAn{{D`{c}}e}}}{{Fl{{AAn{{BEb{c}}e}}}}}{}BG`}11111111111111111111111{{BLbEn}{{Fl{EnAHb}}}}{c{{Fl{{AAn{c}}BMb}}}{}}{{ce}{{Fl{{AAn{ce}}BMb}}}{}BG`}{{}{{Fl{{AAn{{BGh{c}}}}BMb}}}{}}{c{{Fl{{AAn{{BGh{e}}c}}BMb}}}BG`{}}10{c{{Fl{{BLf{{AAn{c}}}}BMb}}}{}}{{ce}{{Fl{{BLf{{AAn{ce}}}}BMb}}}{}BG`}{{{AAn{ce}}}{{Fl{c{AAn{ce}}}}}{}BG`}{cM`{}}000000000000{{{AAn{ce}}}cNj{BG`Nj}}`{{BM`Cn}Ab}{ce{}{}}000000000000{{{AAn{ce}}}EnLbBG`}``{{ALl{BMd{DfDf}}}ALl}{{BAf{BMd{DfDf}}}BAf}{{{AAn{BHn}}{D`{Cn}}}{{Fl{EnBI`}}}}{{{AAn{BHn}}{D`{BMf}}}{{Fl{EnBI`}}}}```````{{c{An{G`}}}BJh{}}{{{BJj{Jl}}{BJj{Cn}}{An{G`}}}BJl}{{{BJj{Jl}}{BJj{Cn}}{An{G`}}}BJn}`88{Enc{}}0{Enb}{{BMh{An{AAb}}}{{Fl{{BK`{Jl}}AHb}}}}{cc{}}{{}En}={BMhd}{EnBMh}{BMh{{D`{Jl}}}}{{BMhFh}b}{BMhb}{{BMh{D`{{A@b{Fh}}}}}b}1{{BMh{An{Fh}}}b}{BMh{{BMj{Jl}}}}{c{{Fl{e}}}{}{}}0{cM`{}}{ce{}{}}`{{cf}b{}}{BMlAAd}{BMl{{A@b{Fh}}}}133{BMlBMl}{{ce}b{}{}}{BMlAAb}{{}BMl}{Enc{}}0{Enb}{{BMlEn}b}{{BMlFd}{{Fl{bALf}}}}{cc{}}{{}En}={BMlEn}{EnBMl}{BMlb}60{ce{}{}}{c{{Fl{e}}}{}{}}0{cM`{}}{BMl{{An{BMn}}}}3```````{{AGhEnEn}AGh}0`{{}b}0{{}d}``{{eEnEn}{{BN`{Jl}}}{{Jd{Bf}}}{{Bd{}{{B`{c}}}}}}{{eEnEn}{{BFd{Jl}}}{{Jd{{D`{Cn}}}}}{{Bd{}{{B`{c}}}}}}{Hdb}```{{cf}b{}}::{B@lB@l}{{ce}b{}{}}{{B@lBf}d}{{}B@l}{Enc{}}0{Enb}{{B@lB@l}d}{{ce}d{}{}}00{{B@lFd}Ff}{BAhB@l}{BNbB@l}{BAfB@l}{{{D`{Ab}}}B@l}{cc{}}23{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{eB@l{{ALh{Kl}}}{{Fb{}{{B`{c}}}}}}{{B@lBf}{{An{Dd}}}}{{B@lEn}{{An{{Gb{AMfDd}}}}}}0{{B@lBf}{{An{Kl}}}}{{B@lBf}{{An{{Gb{EnAMfDd}}}}}}{BNd{{Ej{Bf}}}}{B@l{{Ej{Bf}}}}{{B@lc}bADj}{{BNdBf}{{An{En}}}}{{B@lBf}{{An{En}}}}{{}En}{{B@lEnAMfDd}{{Ad{{An{Dd}}}}}}{ce{}{}}{B@lc{}}{B@ld}{B@l{{`{{Bd{}{{B`{{Gb{AMfDd}}}}}}}}}}{B@l{{`{{Hn{}{{B`{Dd}}}}}}}}0{B@l{{`{{Hn{}{{B`{Kl}}}}}}}}{B@l{{`{{Hn{}{{B`{AMf}}}}}}}}{B@lEn}{{B@lB@l}b}{{}B@l}{{B@lEnAMfDd}{{Ad{B@l}}}}{{B@lBf}{{An{Dd}}}}{{B@lBfAMf}{{An{AMf}}}}{{B@lBfDd}{{An{Dd}}}}{{B@lEnDd}{{An{Dd}}}}3{{B@lEn}{{An{{Gb{AMfDd}}}}}}{{B@ld}BAf}{ce{}{}}{{B@lB@l}{{Ad{d}}}}{c{{Fl{e}}}{}{}}{{B@lBf}{{Ad{Dd}}}}{{B@lEn}{{Ad{{Gb{AMfDd}}}}}}{{B@lBf}{{Ad{Kl}}}}{{B@lBf}{{Ad{{Gb{EnAMfDd}}}}}}3{{BNdBf}{{Ad{En}}}}5{cM`{}}8{EnB@l}{{B@lAMfDd}{{An{Dd}}}}``````````````{{cf}b{}}0{BKl{{Ad{Ab}}}}0{{Bf{Ej{Eh}}AAb}{{Ad{Ab}}}}{{Bf{Ej{Eh}}AAb{An{BNf}}}{{Ad{Ab}}}}{{Abc}e{nJ`}{}}0{{AbAb}c{}}0{{AbAb}{{Ad{Ab}}}}{{BKlDj}Dl}0{BKl{{Ad{Dl}}}}0`{{AbEn}Eh}{BKlAAd}00{AbDh}{BKl{{j{c}}}Bl}0{AbBKl}{BKl{{Ad{En}}}}0{Ab{{Ad{En}}}}{Ab{{Ad{E`}}}}{Ab{{Ad{AGn}}}}{{BKlAb}{{Ad{Ab}}}}00000{Ab{{Ad{F`}}}}{ce{}{}}00000{{BKlDd}{{Ad{Ab}}}}{{AbDd}{{Ad{Ab}}}}0{Ab{{Ad{AIj}}}}55{{AbAb}{{Ad{Ab}}}}{{Abc}{{Ad{Ab}}}A`}{BKlEf}{BKl{{Ej{Eh}}}}0{Ab{{Ej{Eh}}}}{AbAb}{H`H`}1{BKl{{AAn{BKl}}}}{{ce}b{}{}}0{Abb}{Ab{{Ad{Hh}}}}{{}Ab}{Enc{}}00{Abc{}}111{{AbAb}c{}}0{{Abc}e{nJ`}{}}0{{AbAb}{{Ad{Jb}}}}{Enb}00{BKlAb}0{BKlDd}0{{H`H`}d}{{AbAb}d}{{Abc}{{Ad{F`}}}ALj}{{AbBf}{{Ad{F`}}}}{{AbAb}{{Ad{F`}}}}{{AbBf}c{}}1{{Abc}eALj{}}55{{ce}d{}{}}00{AbEn}{Ab{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}{{AbGhEn}{{Ad{Ab}}}}{Ab{{Ad{AHf}}}}{Ab{{Ad{AHh}}}}{BKl{{AHd{Kl}}}}0{{AbACh}{{Ad{Ab}}}}{{BKlF`}{{Ad{Ab}}}}{{AbF`d}{{Ad{Ab}}}}{{H`Fd}Ff}{{AbFd}Ff}0{AbDf}{cc{}}0{{{j{c}}}AbBl}1{{Bf{D`{Gh}}d}{{Ad{Ab}}}}{{Bf{D`{Gh}}Ddd}{{Ad{Ab}}}}{{BfEh}{{Ad{Ab}}}}{{Bf{Ej{Eh}}Dd}Ab}{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{cAb{{Fb{}{{B`{Df}}}}}}{cAb{{Fb{}{{B`{Jb}}}}}}{cAb{{Fb{}{{B`{{An{Hd}}}}}}}}{cAb{{Fb{}{{B`{{An{Jf}}}}}}}}{cAb{{Fb{}{{B`{Bf}}}}}}{cAb{{Fb{}{{B`{d}}}}}}{cAb{{Fb{}{{B`{Kb}}}}}}{cAb{{Fb{}{{B`{Hb}}}}}}{cAb{{Fb{}{{B`{Hd}}}}}}{cAb{{Fb{}{{B`{Jl}}}}}}0{cAb{{Fb{}{{B`{Jf}}}}}}2{cAb{{Fb{}{{B`{{An{d}}}}}}}}{cAb{{Fb{}{{B`{{An{Kb}}}}}}}};{cAb{{Fb{}{{B`{{An{Hb}}}}}}}}873{cAb{{Fb{}{{B`{{An{Jb}}}}}}}}7{cAb{{Fb{}{{B`{{An{Jl}}}}}}}}{{Bf{Ej{Kb}}}Ab}{{Bf{Ej{Jl}}}Ab}{{Bf{Ej{Hb}}}Ab}{{Bf{Ej{Jb}}}Ab}{{Bf{Ej{Jf}}}Ab}{{Bf{Ej{Hd}}}Ab}{{BfEnDd}Ab}{{AbEnEn}Ab}{{BKlEn}{{Ad{Gh}}}}{AbEn}{AbAl}{{BKlEn}{{An{Gl}}}}0{{BKlEnEn}{{An{Gl}}}}0{{BKlEn}Gh}0{{AbAb}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALj}{{AbBf}{{Ad{F`}}}}21{{AbBf}c{}}{BKld}{{H`c}bADj}{{Ab{An{En}}}Ab}{Ab{{Ad{ANh}}}}{Ab{{Ad{ANj}}}}{Ab{{Ad{ANl}}}}{Ab{{Ad{ANf}}}}{Ab{{Ad{Dl}}}}`{Ab{{Ad{Dh}}}}{{}En}00{ce{}{}}00{AbAOl}1{B@nAb}{AbAb}=={Ab{{Ad{F`}}}}000{BKlF`}0{{}d}00{AbH`}{AbBNh}{BKlEn}{{BKlEn}Ab}0<{{AbBf}c{}}{{Abc}{{Ad{F`}}}ALj}{{AbAb}{{Ad{F`}}}}201{Ab{{Ad{{An{c}}}}}J`}{BKl{{Ad{Ab}}}}0{BKl{{An{Jb}}}}0=0011211{{Abc}e{nJ`}{}}{{AbAb}c{}}0199{BKl{{Ad{En}}}}0{BKlBf}{{Bfc}Ab{{Jd{{D`{{An{Bf}}}}}}}}{{Bf{Jh{Jl}}}Ab}{{Bfc}Ab{{Jd{{D`{{An{{Ej{Cn}}}}}}}}}}{{Bfc}Ab{{Jd{{D`{{AHd{{D`{Cn}}}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Hd}}}}}}}}{{Bfc}Ab{{Jd{{D`{Ab}}}}}}{{Bfc}Ab{{Jd{{D`{Jf}}}}}}{{Bfc}Ab{{Jd{{D`{Hb}}}}}}{{Bfc}Ab{{Jd{{D`{{An{{D`{Cn}}}}}}}}}}{{Bf{Jh{Hd}}}Ab}{{Bfc}Ab{{Jd{{D`{{An{Ab}}}}}}}}{{Bfc}Ab{{Jd{{D`{Jb}}}}}}{{Bfc}Ab{{Jd{{D`{Kb}}}}}}{{Bfc}Ab{{Jd{{D`{Hd}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Jl}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Kb}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Jb}}}}}}}}{{Bfc}Ab{{Jd{{D`{Jl}}}}}}{{Bfc}Ab{{Jd{{D`{{D`{Cn}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Hb}}}}}}}}{{Bf{Jh{Kb}}}Ab}{{Bfc}AbB@n}{{Bfc}Ab{{Jd{{D`{d}}}}}}{{Bfc}Ab{{Jd{{D`{{An{{AHd{Bf}}}}}}}}}}{{Bfc}Ab{{Jd{{D`{{AHd{Bf}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Df}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{{AHd{{D`{Cn}}}}}}}}}}}}{{Bfc}Ab{{Jd{{D`{{An{Jf}}}}}}}}{{Bfc}Ab{{Jd{{D`{Bf}}}}}}{{Bfc}Ab{{Jd{{D`{{Ej{Cn}}}}}}}}{{BfAb}Ab}{{Bfc}Ab{{Jd{{D`{{An{d}}}}}}}}{{Bfc}Ab{{Jd{{D`{Gh}}}}}}{{Bf{Jh{Jf}}}Ab}{{Bfc}Ab{{Jd{{D`{Df}}}}}}{{BfDd}Ab}{{BKlEnEn}Ab}{{BfEn}Ab}{BNh{{An{c}}}{}}{{AbAb}{{Ad{F`}}}}{{AbBf}{{Ad{F`}}}}{{Abc}{{Ad{F`}}}ALj}2{{AbBf}c{}}{{Abc}eALj{}}{Ab{{Ad{`}}}}{BKlEn}`{AbBNj}{Ab{{Ad{Ab}}}}{{BKlJbKj}{{Ad{Ab}}}}0{BKlAb}{{Abc}e{nJ`}{}}0{{AbAb}c{}}{{BKlBf}b}{{AbBf}Ab}{{Ab{D`{Jl}}}{{Ad{Ab}}}}5{H`H`}{{BKlC`Kn}{{Ad{Ab}}}}0{{AbJbdd{An{Hd}}}{{Ad{Ab}}}}{{AbEndd{An{Hd}}}{{Ad{Ab}}}}{{AbH`}b}{{BKlJl}Ab}{BKlb}0{Abb}{{Ab{An{Hd}}}Ab}{BNh{{Gb{En{An{En}}}}}}{{BKlJlEn}Ab}{{AbDj}{{Ad{Ab}}}}{{BKlDj}{{Ad{Ab}}}}0{{BKlCn}{{An{Jb}}}}0{{BKlCn}{{Ad{Ab}}}}0{Ab{{Ad{Ll}}}}{{AbEn}{{Ad{{AHd{Bf}}}}}}{{AbDd}{{Ad{Ab}}}}{{Abc}e{nJ`}{}}0{{AbAb}c{}}0{Ab{{Ad{c}}}J`}{Ab{{Ad{Ab}}}}{{Ab{An{En}}}Ab}{{BKlDl}{{Ad{Ab}}}}{{BKl{D`{L`}}}{{Ad{Ab}}}}{{BKl{D`{L`}}}Ab}{{Ab{D`{L`}}d}Ab}{{AbDld}{{Ad{Ab}}}}{{BKlDl}Ab}{{Ab{D`{L`}}}Ab}{{AbDld}Ab}{{AbEnd}Eh}:{ce{}{}}0{Ab{{AHd{Ab}}}}{cDf{}}{{AbAb}{{Ad{Ab}}}}{c{{Fl{e}}}{}{}}0{{{Gb{ALlEh}}}{{Ad{Ab}}}}{{{Gb{Bf{Ej{Eh}}}}}{{Ad{Ab}}}}2{{{Gb{BfEh}}}{{Ad{Ab}}}}{{{Gb{ALl{Ej{Eh}}}}}{{Ad{Ab}}}}444{cM`{}}00{Ab{{Ad{ANb}}}}{Ab{{Ad{ALd}}}}{Ab{{Ad{ANd}}}}{Ab{{Ad{AN`}}}}{BKl{{Ad{Ab}}}}0{Ab{{Ad{Ab}}}}{BKl{{Ad{{j{c}}}}}Bl}`{{BKlCn}{{An{Jb}}}}0{{BKlCn}{{Ad{Ab}}}}0{ce{}{}}00{{AbBf}Ab}{{Abc}Ab{nJ`}}{{AbF`Ab}{{Ad{Ab}}}}````{{{BNl{}{{Bn{c}}}}Ab}c{}}{{BNnAb}{{Ad{Ab}}}}{{{j{Af}}Ab}{{Ad{Ab}}}}0`2100210021002100``{{BGjAb}{{Ad{Ab}}}}{{{j{Ed}}Ab}{{Ad{Ab}}}}0{{BGjc}{{Ad{Ab}}}A`}{{{j{Ed}}c}{{Ad{Ab}}}A`}0```{{cf}b{}};;{BO`BO`}{{ce}b{}{}}{{}BO`}{Enc{}}0{Enb}{{BO`BO`}d}{{ce}d{}{}}00{{BO`Fd}Ff}{cc{}}{{BO`c}bADj}{{}En}{ce{}{}}0{c{{Fl{e}}}{}{}}0{cM`{}}2``>{CdAb}033{CdCd}>1<<;754{AbCd}{{CdEh}b}65546{{CdEhe}c{}{{C`{Cd}{{Bn{c}}}}}}````````{{cf}b{}}9{{{Ej{AOl}}}{{Ad{AOl}}}}{c{{Ad{AOl}}}{{Fb{}{{B`{AOl}}}}}}{cAOl{{Fb{}{{B`{AOl}}}}}}{c{{An{AOl}}}{{Fb{}{{B`{AOl}}}}}}{{{j{c}}{j{e}}}{{Gb{{AHd{{j{c}}}}{AHd{{j{e}}}}}}}BlBl}{{{j{c}}{j{e}}{j{g}}}{{Gb{{AHd{{j{c}}}}{AHd{{j{e}}}}{AHd{{j{g}}}}}}}BlBlBl}{BObd}{c{{Ad{Dd}}}{{Fb{}{{B`{Gh}}}}}}{c{{Ad{{Gb{DdEn}}}}}{{Fb{}{{B`{Gh}}}}}}`{ce{}{}}00000{{{BOd{ec}}}{{BOd{ec}}}Nj{Nj{Bd{}{{B`{c}}}}}}{{ce}b{}{}}{{{j{c}}{j{c}}}{{Gb{{AHd{{j{c}}}}{AHd{{j{c}}}}}}}Bl}{{AbAb}{{Gb{AbAb}}}}{BObe{}{{BOf{c}}}}{BObe{}{{BOh{c}}}}>={{BObc}dBHl}{{{BOj{c}}}e{}{}}{Enc{}}{{{AGj{c}}}e{}{}}111101{Enb}00{cB@l{{Fb{}{{B`{Dd}}}}}}{c{{Ad{Dd}}}{{Fb{}{{B`{Dd}}}}}}{{AbBf}{{Ad{b}}}}{{{BOj{Ab}}{BOj{Ab}}}d}{{ce}d{}{}}00`{{BObcg}{{An{c}}}{}{}{{Cf{ce}{{Bn{c}}}}}}{cc{}}00{g{{Fl{ic}}}{}{}{{Fn{c}{{B`{e}}}}}{}}{c{{AGj{F`}}}{{Fb{}{{B`{d}}}}}}{c{{AGj{{j{e}}}}}{{Fb{}{{B`{}}}}}l}{eBOh{}{{Fb{}{{B`{c}}}}}}12{c{{AGj{{j{e}}}}}{{Gd{}{{B`{}}}}}l}{c{{AGj{F`}}}{{Gf{}{{B`{d}}}}}}{c{{AGj{{j{e}}}}}{{Gf{}{{B`{}}}}}l}{{DdDd}{{An{Dd}}}}{{AJfAJf}AJf}{{AbAb}{{Ad{b}}}}{{{BOj{Ab}}c}bADj}{{}En}00{ce{}{}}00{{{AGj{c}}}c{}}1{BBj{{Ej{c}}}{}}{c{{Ej{{BOn{BOl}}}}}{}}{c{{Ej{Df}}}{}}{B@hGh}{c{{AGj{c}}}{}}{{eEn}{{BOd{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{BOd{ec}}}An{}{{Bd{}{{B`{c}}}}}}{{{BOd{ec}}}An{}{{Bd{}{{B`{c}}}}El}}`{{{BOd{ec}}}{{Gb{En{An{En}}}}}{}{{Bd{}{{B`{c}}}}}}{{{D`{c}}JlEn}{{D`{c}}}{}}{{{j{c}}En}{{Ad{{Ej{{j{c}}}}}}}Bl}{{AOlEnd}{{Ad{{Ej{AOl}}}}}}={{BObEn}{{BOd{BObc}}}{}}{c{{Fl{e}}}{}{}}00{{DdDd}{{Ad{Dd}}}}111{cM`{}}00{ce{}{}}00{{Dde}c{}{{C`{Cd}{{Bn{c}}}}}}{{{D`{{Ej{c}}}}}{{Gb{En{Ej{En}}}}}{}}{AOl{{`{{Bd{}{{B`{AOl}}}}}}}}{{{D`{c}}}{{AGd{L`}}}{{Jd{{D`{Mb}}}}HjHl}}{{{D`{e}}}{{Ej{c}}}{HjHlCb}{{Jd{{D`{c}}}}}}{Ab{{Ej{Ab}}}}","D":"IGl","p":[[1,"unit"],[1,"bool"],[5,"Private",4903],[5,"ListType",1228],[5,"ChunkedArray",39],[10,"PolarsNumericType",1228],[10,"Num",4904],[10,"ToPrimitive",4905],[5,"Series",4325],[8,"PolarsResult",3616],[10,"NumOpsDispatchInner",4706],[6,"GroupsProxy",3217],[5,"BooleanType",1228],[5,"Settings",39],[6,"Option",4906],[17,"Item"],[8,"ArrayBox",4765],[10,"Iterator",4907],[1,"str"],[17,"Structure"],[5,"Flat",1228],[10,"PolarsDataType",1228],[17,"Output"],[10,"Fn",4908],[10,"Copy",4909],[5,"UnstableSeries",4765],[10,"FnMut",4908],[5,"Float64Type",1228],[5,"Float32Type",1228],[5,"BinaryType",1228],[1,"u8"],[1,"slice"],[5,"StringType",1228],[6,"DataType",1228],[5,"String",4910],[8,"ListChunked",1228],[5,"SortOptions",1146],[8,"IdxCa",1228],[5,"SortMultipleOptions",1146],[8,"BinaryChunked",1228],[10,"PolarsIntegerType",1228],[10,"NumOpsDispatchCheckedInner",4731],[8,"ChunkIdIter",39],[8,"ArrayRef",3616],[5,"Vec",4911],[10,"DoubleEndedIterator",4912],[1,"usize"],[8,"BooleanChunked",1228],[10,"IntoIterator",4913],[5,"Formatter",4914],[8,"Result",4914],[10,"Array",4915],[17,"Array"],[6,"Result",4916],[10,"FallibleIterator",4917],[5,"Bitmap",4918],[1,"tuple"],[10,"IntoParallelIterator",4919],[10,"TrustedLen",4920],[6,"AnyValue",1228],[5,"ObjectType",1228],[10,"PolarsObjectSafe",817],[10,"PolarsObject",817],[6,"IsSorted",4325],[1,"f32"],[1,"u64"],[5,"Int128Type",1228],[8,"DecimalChunked",1228],[10,"Send",4909],[10,"Sync",4909],[10,"ExactSizeIterator",4921],[10,"PolarsFloatType",1228],[10,"PolarsIterator",778],[5,"Iter",4922],[5,"IterNames",4922],[5,"Iter",4923],[1,"fn"],[5,"Map",4924],[6,"ChunkedArrayLayout",39],[10,"NumCast",4905],[1,"f64"],[10,"AsRef",4925],[1,"u32"],[5,"Range",4926],[5,"UInt32Type",1228],[1,"i64"],[5,"Int64Type",1228],[5,"Int32Type",1228],[1,"i32"],[5,"UInt64Type",1228],[10,"ParallelIterator",4919],[10,"IndexedParallelIterator",4919],[6,"QuantileInterpolOptions",3616],[5,"Field",1228],[5,"RollingOptionsFixedWindow",3616],[8,"IdxSize",3616],[10,"Sized",4909],[5,"RandomState",4927],[5,"BytesHash",4928],[8,"Array2",4929],[8,"ArrayView1",4929],[8,"StringChunked",1228],[6,"Either",4930],[5,"TypeId",4931],[5,"NullableIdxSize",3616],[10,"FnOnce",4908],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",476],[10,"ChunkedBuilder",504],[5,"BinViewChunkedBuilder",504],[10,"ViewType",4932],[5,"BooleanChunkedBuilder",504],[5,"NullChunkedBuilder",504],[5,"PrimitiveChunkedBuilder",504],[10,"Clone",4933],[8,"StringChunkedBuilder",504],[8,"BinaryChunkedBuilder",504],[10,"NewChunkedArray",504],[5,"AnonymousListBuilder",608],[5,"AnonymousOwnedListBuilder",608],[5,"ListBooleanChunkedBuilder",608],[5,"ListPrimitiveChunkedBuilder",608],[10,"ListBuilderTrait",608],[5,"ListStringChunkedBuilder",608],[5,"ListBinaryChunkedBuilder",608],[5,"ListNullChunkedBuilder",608],[5,"Box",4934],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[5,"BooleanArray",4935],[5,"BoolIterNoNull",778],[5,"SomeIterator",778],[5,"ObjectArray",817],[6,"ArrowDataType",1228],[10,"Any",4931],[10,"Debug",4914],[8,"ObjectValueIter",817],[5,"BitmapIter",4936],[6,"ZipValidity",4937],[5,"Arc",3616],[5,"ObjectChunkedBuilder",888],[8,"ObjectChunked",1228],[10,"AnonymousObjectBuilder",911],[5,"ObjectRegistry",911],[8,"ObjectConverter",911],[8,"BuilderConstructor",911],[17,"FuncRet"],[10,"ChunkApply",939],[10,"ChunkApplyKernel",939],[10,"ChunkSort",939],[10,"ChunkUnique",939],[10,"ChunkCast",939],[6,"FillNullStrategy",939],[10,"ChunkCompare",939],[10,"ChunkExplode",939],[5,"OffsetsBuffer",4938],[10,"ChunkFillNullValue",939],[10,"ChunkFilter",939],[10,"ChunkFull",939],[10,"ChunkFullNull",939],[10,"ChunkAnyValue",939],[10,"Hasher",4939],[10,"IsFirstDistinct",939],[10,"IsLastDistinct",939],[10,"ChunkAgg",939],[10,"ChunkQuantile",939],[10,"ChunkExpandAtIndex",939],[10,"ChunkReverse",939],[10,"ChunkRollApply",939],[10,"ChunkSet",939],[10,"ChunkShift",939],[10,"ChunkShiftFill",939],[10,"ChunkVar",939],[10,"ChunkTake",939],[10,"ChunkTakeUnchecked",939],[10,"ChunkBytes",939],[10,"ChunkZip",939],[10,"BinaryFnMut",1062],[10,"StaticArray",1228],[10,"TernaryFnMut",1062],[10,"Error",4940],[10,"UnaryFnMut",1062],[5,"PrimitiveArray",4941],[6,"SearchSortedSide",1102],[10,"SlicedArray",3616],[5,"NoNull",4789],[5,"RowsEncoded",4942],[8,"BinaryOffsetChunked",1228],[5,"NaiveDateTime",4943],[6,"PolarsError",3616],[6,"Cow",4944],[8,"Float32Chunked",1228],[8,"Float64Chunked",1228],[10,"ArrayFromIter",1228],[10,"ArrayFromIterDtype",1228],[10,"AsRefDataType",1228],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",4945],[10,"From",4925],[5,"CategoricalChunked",2596],[10,"CategoricalMergeOperation",2596],[10,"LogicalType",1228],[5,"Logical",1228],[5,"OwnedObject",1228],[6,"UnknownKind",1228],[6,"TimeUnit",1228],[5,"UInt8Type",1228],[5,"UInt16Type",1228],[5,"Int8Type",1228],[5,"Int16Type",1228],[5,"DateType",1228],[5,"TimeType",1228],[5,"BinaryOffsetType",1228],[5,"DecimalType",1228],[5,"DatetimeType",1228],[5,"DurationType",1228],[5,"CategoricalType",1228],[6,"ArrowTimeUnit",1228],[10,"ArrayCollectIterExt",3616],[8,"Utf8ViewArray",4932],[8,"UInt32Chunked",1228],[5,"Error",4914],[10,"Into",4925],[10,"NumericNative",1228],[5,"ArrowField",3616],[6,"IntegerType",4946],[6,"PrimitiveType",4947],[10,"Borrow",4948],[10,"PolarsAsRef",1223],[8,"String",4949],[10,"GetAnyValue",1228],[8,"Int128Chunked",1228],[6,"Ordering",4950],[6,"PhysicalType",4946],[8,"UInt8Chunked",1228],[8,"UInt16Chunked",1228],[8,"UInt64Chunked",1228],[8,"Int8Chunked",1228],[8,"Int16Chunked",1228],[8,"Int32Chunked",1228],[8,"Int64Chunked",1228],[8,"PlIdHashMap",1228],[5,"CategoricalChunkedBuilder",2596],[5,"GlobalRevMapMerger",2596],[6,"RevMapping",2735],[6,"CategoricalOrdering",2735],[5,"CatIter",2596],[1,"u128"],[5,"DataFrame",2924],[5,"StringCacheHolder",2787],[5,"ErrString",2816],[6,"PolarsWarning",2816],[10,"Display",4914],[6,"FloatFmt",2894],[1,"i128"],[1,"char"],[5,"Schema",4253],[10,"IntoSeries",4325],[6,"NullStrategy",2924],[6,"UniqueKeepStrategy",2924],[8,"PlHashSet",1228],[5,"ArrowSchema",3616],[5,"Row",3472],[5,"GroupBy",3217],[5,"RangeToInclusive",4926],[5,"RangeTo",4926],[5,"RangeFull",4926],[5,"RangeInclusive",4926],[5,"RangeFrom",4926],[5,"RecordBatchIter",2924],[5,"PhysRecordBatchIter",2924],[10,"IntoVec",4789],[5,"MeltArgs",3188],[10,"RangeBounds",4926],[8,"SchemaRef",4253],[6,"IndexOrder",3616],[5,"StructArray",4951],[8,"ArrowChunk",2924],[5,"GroupsIdx",3217],[8,"IdxVec",4952],[6,"GroupByMethod",3217],[5,"SlicedGroups",3217],[5,"GroupsProxyParIter",3217],[10,"UnindexedConsumer",4953],[6,"GroupsIndicator",3217],[8,"IdxItem",3217],[10,"IntoGroupsProxy",3217],[5,"Copied",4954],[5,"Zip",4955],[5,"GroupsProxyIter",3217],[8,"GroupsSlice",3217],[1,"array"],[8,"DynArgs",3616],[10,"IsFloat",4956],[10,"NativeType",4957],[10,"AggList",3456],[10,"TakeExtremum",3456],[10,"PhysicalAggExpr",3469],[6,"AnyValueBuffer",3472],[6,"AnyValueBufferTrusted",3472],[5,"BinaryArray",4958],[5,"IdHasher",3568],[5,"IdxHash",3568],[5,"HashMap",4959],[10,"BuildHasher",4939],[10,"VecHash",3568],[10,"Allocator",4960],[5,"BorrowedFd",4961],[10,"AsFd",4961],[10,"AsRawFd",4962],[20,"MaybeUninit",4963],[10,"NumOpsDispatchChecked",3616],[5,"ChunkId",3616],[5,"RollingVarParams",3616],[5,"RollingQuantileParams",3616],[6,"NonExistent",3616],[10,"Ord",4950],[10,"Default",4964],[5,"Weak",4965],[10,"Scalar",4966],[10,"PartialEq",4950],[5,"File",4967],[5,"Error",4968],[5,"TryReserveError",4969],[5,"Utf8Error",4970],[6,"Error",4971],[5,"OsString",4972],[5,"OsStr",4972],[5,"Path",4973],[1,"never"],[5,"PathBuf",4973],[5,"CStr",4974],[10,"ToOwned",4944],[5,"CString",4975],[10,"FromData",4176],[5,"Buffer",4976],[10,"FromDataUtf8",4176],[10,"FromDataBinary",4176],[5,"ListArray",4977],[6,"Ambiguous",3616],[10,"NamedFromOwned",3616],[10,"PartialOrd",4950],[10,"PolarsArray",3616],[10,"Hash",4939],[10,"SeriesTrait",4325],[10,"ChunkAggSeries",3616],[10,"QuantileAggSeries",3616],[10,"IndexToUsize",3616],[10,"NamedFrom",3616],[5,"Pin",4978],[5,"Request",4940],[5,"BorrowedCursor",4979],[5,"IoSliceMut",4980],[6,"SeekFrom",4980],[10,"VarAggSeries",3616],[5,"AllocError",4960],[5,"BTreeMap",4981],[5,"IoSlice",4980],[5,"AnonymousBuilder",4182],[5,"Offsets",4938],[5,"MutableNullArray",4205],[5,"MutableBitmap",4982],[5,"Utf8Array",4983],[8,"ArrowSchemaRef",4984],[10,"IndexOfSchema",4253],[8,"Metadata",4985],[5,"SeriesIter",4325],[8,"SeriesPhysIter",4325],[10,"LhsNumOps",4706],[10,"NumOpsDispatch",4706],[6,"NullBehavior",4739],[10,"CustomIterTools",4789],[5,"TrustMyLength",4789],[10,"FromIteratorReversed",4986],[10,"FromTrustedLenIterator",4789],[5,"Wrap",4789],[5,"LazyCompact",4987],[5,"SmartString",4988],[8,"FillNullLimit",939],[10,"InitHashMaps",1228],[10,"InitHashMaps2",1228],[5,"Nested",1228],[15,"IO",2879],[15,"Context",2879],[15,"Count",3453],[15,"Slice",3454],[10,"ListFromIter",3616],[10,"Utf8FromIter",4248],[10,"BinaryFromIter",4248]],"b":[[53,"impl-Add-for-%26ChunkedArray%3CT%3E"],[54,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[55,"impl-Add-for-ChunkedArray%3CT%3E"],[56,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[76,"impl-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CT%3E"],[78,"impl-ChunkedArray%3CStringType%3E"],[99,"impl-Settings"],[100,"impl-Flags-for-Settings"],[140,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[141,"impl-Div-for-%26ChunkedArray%3CT%3E"],[142,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[143,"impl-Div-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CT%3E"],[163,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[164,"impl-Debug-for-Settings"],[165,"impl-Binary-for-Settings"],[166,"impl-UpperHex-for-Settings"],[167,"impl-Octal-for-Settings"],[168,"impl-LowerHex-for-Settings"],[176,"impl-Settings"],[177,"impl-Flags-for-Settings"],[185,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[186,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[187,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[190,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[191,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[216,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[258,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[259,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[269,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[270,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkedArray%3CBooleanType%3E"],[276,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[277,"impl-ChunkedArray%3CBooleanType%3E"],[280,"impl-ChunkedArray%3CBooleanType%3E"],[281,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[284,"impl-ChunkedArray%3CBooleanType%3E"],[285,"impl-ChunkedArray%3CT%3E"],[286,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[287,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[288,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[289,"impl-Mul-for-ChunkedArray%3CT%3E"],[293,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[295,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[296,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[297,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[299,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[300,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[301,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[302,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[303,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[304,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[305,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[306,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[307,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[308,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[309,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[310,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[311,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[312,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[313,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[314,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[322,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[323,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkedArray%3CStringType%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[331,"impl-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkedArray%3CListType%3E"],[343,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[344,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[345,"impl-Rem-for-ChunkedArray%3CT%3E"],[346,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[372,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[373,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[375,"impl-Sub-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkedArray%3CBooleanType%3E"],[380,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[384,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[393,"impl-ChunkedArray%3CListType%3E"],[394,"impl-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[556,"impl-BinViewChunkedBuilder%3Cstr%3E"],[557,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[822,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[823,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[855,"impl-ObjectArray%3CT%3E"],[856,"impl-StaticArray-for-ObjectArray%3CT%3E"],[868,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[869,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[879,"impl-ObjectArray%3CT%3E"],[880,"impl-StaticArray-for-ObjectArray%3CT%3E"],[882,"impl-StaticArray-for-ObjectArray%3CT%3E"],[883,"impl-ObjectArray%3CT%3E"],[885,"impl-Array-for-ObjectArray%3CT%3E"],[886,"impl-ObjectArray%3CT%3E"],[889,"impl-ObjectChunkedBuilder%3CT%3E"],[890,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[892,"impl-ObjectChunkedBuilder%3CT%3E"],[893,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1457,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1458,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1459,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1460,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1461,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1462,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1463,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1464,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1539,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1540,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1541,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1542,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1543,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1544,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1826,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1827,"impl-PartialEq-for-DataType"],[1835,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1836,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1837,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1838,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1841,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1842,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1843,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1844,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1883,"impl-Debug-for-AnyValue%3C\'a%3E"],[1884,"impl-Display-for-AnyValue%3C\'_%3E"],[1886,"impl-Debug-for-DataType"],[1887,"impl-Display-for-DataType"],[1889,"impl-Debug-for-TimeUnit"],[1890,"impl-Display-for-TimeUnit"],[1901,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1903,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[1905,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1906,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1907,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1909,"impl-From%3C%26Field%3E-for-Field"],[1911,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1934,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1935,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1939,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1940,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1941,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1943,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1944,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1945,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1946,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1952,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1953,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1955,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1956,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1957,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1958,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1959,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1960,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1968,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1969,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1970,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1971,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1972,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1973,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2061,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2062,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2063,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2064,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2067,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2068,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2069,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2070,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2196,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2197,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2198,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2199,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2202,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2203,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2204,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2205,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2239,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2240,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2241,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2242,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2243,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2244,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2245,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2246,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2247,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2248,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2259,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2260,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2263,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2264,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2265,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2266,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2269,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2270,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2271,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2272,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2641,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2642,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2643,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2644,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2645,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2646,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2661,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2662,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2663,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2664,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2665,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2666,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2681,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2682,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2683,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2684,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2685,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2686,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2697,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2698,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2699,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2700,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2701,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2702,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2853,"impl-Display-for-ErrString"],[2854,"impl-Debug-for-ErrString"],[2946,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2947,"impl-Add%3C%26Series%3E-for-DataFrame"],[2948,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2986,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[2987,"impl-Div%3C%26Series%3E-for-DataFrame"],[2988,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3018,"impl-Display-for-DataFrame"],[3019,"impl-Debug-for-DataFrame"],[3025,"impl-From%3C%26Schema%3E-for-DataFrame"],[3026,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3053,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3054,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3055,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3056,"impl-Index%3C%26str%3E-for-DataFrame"],[3057,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3058,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3059,"impl-Index%3Cusize%3E-for-DataFrame"],[3060,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3085,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3086,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3087,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3102,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3103,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3104,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3136,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3137,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3138,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3158,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3159,"impl-TryFrom%3C(RecordBatch%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3329,"impl-Debug-for-GroupByMethod"],[3330,"impl-Display-for-GroupByMethod"],[3336,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3338,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3339,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3374,"impl-IntoIterator-for-%26GroupsIdx"],[3375,"impl-IntoIterator-for-GroupsIdx"],[3377,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3378,"impl-IntoParallelIterator-for-GroupsIdx"],[3737,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3738,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3862,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3863,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3864,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3896,"impl-Display-for-PolarsError"],[3897,"impl-Debug-for-PolarsError"],[3900,"impl-Debug-for-Arc%3CT,+A%3E"],[3901,"impl-Display-for-Arc%3CT,+A%3E"],[3902,"impl-Pointer-for-Arc%3CT,+A%3E"],[3911,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3913,"impl-From%3CError%3E-for-PolarsError"],[3914,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3915,"impl-From%3CError%3E-for-PolarsError"],[3919,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3920,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3923,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3924,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3925,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3926,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3927,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3928,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3929,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3930,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3931,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3932,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[3933,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3934,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3935,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4271,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4272,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4273,"impl-From%3CArrowSchema%3E-for-Schema"],[4274,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4276,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4277,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4345,"impl-Add%3CT%3E-for-Series"],[4346,"impl-Add%3CT%3E-for-%26Series"],[4347,"impl-Add-for-Series"],[4348,"impl-Add-for-%26Series"],[4409,"impl-Div-for-%26Series"],[4410,"impl-Div-for-Series"],[4411,"impl-Div%3CT%3E-for-Series"],[4412,"impl-Div%3CT%3E-for-%26Series"],[4423,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4424,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4425,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4426,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4427,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4428,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4446,"impl-Display-for-Series"],[4447,"impl-Debug-for-Series"],[4458,"impl-FromIterator%3CString%3E-for-Series"],[4459,"impl-FromIterator%3Cf64%3E-for-Series"],[4460,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4461,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4462,"impl-FromIterator%3C%26str%3E-for-Series"],[4463,"impl-FromIterator%3Cbool%3E-for-Series"],[4464,"impl-FromIterator%3Ci32%3E-for-Series"],[4465,"impl-FromIterator%3Cf32%3E-for-Series"],[4466,"impl-FromIterator%3C%26u64%3E-for-Series"],[4467,"impl-FromIterator%3Ci64%3E-for-Series"],[4468,"impl-FromIterator%3C%26i64%3E-for-Series"],[4469,"impl-FromIterator%3Cu32%3E-for-Series"],[4470,"impl-FromIterator%3Cu64%3E-for-Series"],[4471,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4472,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4473,"impl-FromIterator%3C%26f64%3E-for-Series"],[4474,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4475,"impl-FromIterator%3C%26bool%3E-for-Series"],[4476,"impl-FromIterator%3C%26i32%3E-for-Series"],[4477,"impl-FromIterator%3C%26u32%3E-for-Series"],[4478,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4479,"impl-FromIterator%3C%26f32%3E-for-Series"],[4480,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4481,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4482,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4483,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4484,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4485,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4486,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4498,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4499,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4500,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4501,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4502,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4503,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4541,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4542,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4543,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4544,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4545,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4546,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4560,"impl-Mul%3CT%3E-for-Series"],[4561,"impl-Mul-for-%26Series"],[4562,"impl-Mul-for-Series"],[4563,"impl-Mul%3CT%3E-for-%26Series"],[4569,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4570,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4571,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4572,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4573,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4574,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4575,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4576,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4577,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4578,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4579,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4580,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4581,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4582,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4583,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4584,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4585,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4586,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4587,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4588,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4589,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4590,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4591,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4592,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4593,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4594,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4595,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4596,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4597,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4598,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4599,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4600,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4601,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4602,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4603,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4608,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4609,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4610,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4611,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4612,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4613,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4622,"impl-Rem%3CT%3E-for-Series"],[4623,"impl-Rem%3CT%3E-for-%26Series"],[4624,"impl-Rem-for-%26Series"],[4652,"impl-Sub%3CT%3E-for-Series"],[4653,"impl-Sub%3CT%3E-for-%26Series"],[4654,"impl-Sub-for-%26Series"],[4655,"impl-Sub-for-Series"],[4676,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4677,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4679,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4680,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4849,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4850,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4852,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4853,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4855,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4856,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAALYM/Qw7DT4NPw1ADUENQg1HDUoNTw1QDXUN","e":"OzAAAAEAAGkO5QEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZQABAGkABgBxAAAAcwACAHkABAB/AAAAhAAHAI0ACACYAAQAnwABAKIACQCtAAAAsgAAALQAAQC4AAQAvgACAMMAAwDJAAMAzgADANUAAADXAAUA3wADAOoABQDzAAMA+gABAP8AAQACAQYADgEOAB8BBQAmARkAQwEDAEgBAABKAQQAUAEBAFYBAABYAQQAXwEAAGQBAgBoAQEAbAECAHEBBwB7AQMAhgEBAIwBAQCSAQgAnAEKAKgBAACqAQAArQEFALUBAAC3ASMA3AEpAAoCAgAQAiMAOgIFAEQCAABGAiYAbwJMAMMCDADXAjMADgMJABoDAQAeAwEAIQMSADYDEwBLAwcAVAMAAFYDAABZAwIAXgMOAG4DAABxAwAAcwMDAHgDAQB7AwEAfgMIAIgDAACKAwUAkgMBAJUDAACXAwEAmgMDAJ8DAwCkAwIAqAMDAK4DAACxAwAAuQMAAL4DAADBAwEAxgMBAMkDAADMAwAA1gMAAN8DAgDkAwUA7AMCAPIDAAD0AwAA9gMBAPwDAQD/AwEABgQBAAwEAAAPBAAAEgQAABQEAAAWBAAAGAQAAB0EBAAkBAEAJwQHADAEAgA2BAAAOAQDAD0EAQBABAUATAQVAGMEAQBnBAQAbQQDAHMEBwB+BA8AkAQMAJ8EBACwBAkAxAQDAMkECQDVBAIA2QQFAOEEAADjBAwA8wQAAPUEAAD6BAEA/QQAAP8EAgAEBQAABwUBAAsFAAANBQEAEAUAABIFAgAWBQsAIwUAACUFAQAoBQAAKgUBAC0FAAAvBQEAMgUAADQFAQA6BQAAPgUBAEIFAABFBQAARwUAAEkFBABPBQAAUgUHAFsFAQBeBQQAZAUBAGgFAABqBQAAbAUAAHAFAgB0BQAAdgUAAHgFAQB7BQAAfQUBAIAFAACCBQEAhQUAAIcFAQCKBQAAjAUAAI8FOgDQBQQA1wUJAOMFBADpBQgA8wUAAPUFqQCgBgcAqQZzAB4HAAAgB0YAbgcAAHAHAAByBwIAdgcAAHgHAQCPBwEAkwcXAK8HIwDVBwYA3gceAAMIPQBDCAAAZggJAHIIAAB0CAEAdwgBAHoIAAB/CAUAhggAAIkIAgCOCCEAsQgJALwIDQDLCBwA6QgGAPEIGgANCRUAJAkNADUJAAA3CQAAPAkcAFwJewDZCUoAJQoEACsKAQAuCgIAMgoDADcKIwBiCgIAZgoJAHQKAwB5ChcAkwoBAJYKBACcCg0AqwoFALIKAAC0ChUAywoBANEKAgDWCgEA2goJAOUKBADrCgEA8AoAAPIKAgD2CgEA+QoAAPsKAQABCwQABwsEAA0LDgAdCwoAKQsAACsLAgAwCwQANgskAFwLBQBjCwkAbgsAAHELAAB0CwoAgAsFAIwLEACfCxIAswsAALoLAQC+CwIAwgsAAMQLAADJCwMA0gsCAOMLAADmCwEA7gsMAAEMAQAODAIAFQwBAB8MAgAnDAAAKgwAADAMAAA5DAEAPAwAAD8MBABKDAQAUgwGAFsMCQBmDAAAagwEAHYMDQCFDAIAigwKAJYMAQCZDAMAngwDAKMMCQCuDAcAtwwBALoMGADUDCgA/gwGAAkNAAALDQIAEQ0DABcNAQAdDQcALQ0NADwNAQBDDQMASA0BAEwNAgBRDQAAUw0fAHYNDACFDQUAjA0HAJUNFgCuDQsAuw0OAMsNAADNDQAAzw0DANYNBgDgDQ4A8Q0BAPQNEQAIDgQAEA4FABgOCQAjDgIAKA4HADEOCwA+DgMAQw4WAFsOCABlDgUAbA4UAIQOEACWDgAAmA4BAJwOHAC7DgIAvw4SANMOBgDdDgEA4g4iAAgPAwANDwsAGg8aADcPEQBKDwIATg8AAFIPAABmDwAAaw8AAG4PAAB1DwAAeA8AAH0PAQCADwYAiQ8RAKoPAwCvDwIAsw8BALYPAQDRDwIA1w8EAN4PAADhDwcA6w8AAO0PAQDyDy0AKRAMADcQAAA5EAwASxAJAFcQBgBfEAAAYRAcAH8QAACBEAsAjhAAAJAQAQCZEAQAoBAFAKcQDAC1EAMAvxABAMIQAQDGEAEA2BAAANoQAADcEAAA4BADAOYQBADsEAMA8RAEAPoQAwADEQAACRECABERBQAYEQYAIhEDACoRAgAuEQEAMhEPAEYRAwBLEQAATREAAFARAgBeEQMAZBEAAGgRAABqER4AjBEAAJQRAQCXEQEAmhEAAKARAQCjEQIAqREDALURAwC+EQEAwREAAMMRAADJEQAA0REDANoRHwD7EQEA/xEBAAISAQAFEgEACRIBAA8SAgAUEgAAFhIAABoSAQAgEgEAJBIBACsSAAAtEgMAPhIBAEESDgBXEgEAXRICAGESAABjEhoAgRICAIYSDgCWEgEAmRIFAKASCgCsEgAArhIAALASBAC2EgQAvBIEAMMSAADGEgAAyRIIANMSAgDYEgwA5xIGAPESCAD7EgUABBMPABUTAgAZEwgAIxMEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNCMMMNNNNNNNNNNCHCCOCMMMOCCCCCONNNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFFGGFFPPPGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOHNONNNNNNNNNNNNNNNNNNHNOONNNNNNNOONONOOONNNNOONNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNHOONNNNNNNOOOOOONNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFINNNNNNOONNNNNNNNNOOONONNNNNONPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNEEEJJJJHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","export","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","is_cloud_url","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","set_rechunk","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReaderMmap","BatchedCsvReaderRead","CommentPrefix","CsvEncoding","CsvParserOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","OwnedBatchedCsvReaderMmap","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","_with_comment_prefix","batched_borrowed_mmap","batched_borrowed_read","batched_mmap","batched_read","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","comment_prefix","count_rows","decimal_comma","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoding","eol_char","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_path","has_header","has_header","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema","infer_schema_length","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_compressed","low_memory","low_memory","n_threads","new","new_multi","new_single","next_batches","next_batches","next_batches","next_batches","null_values","quote_char","raise_if_empty","raise_if_empty","sample_size","schema","schema_overwrite","separator","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtypes","with_dtypes_slice","with_encoding","with_end_of_line_char","with_ignore_errors","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_path","with_predicate","with_projection","with_quote_char","with_rechunk","with_row_index","with_schema","with_separator","with_skip_rows","with_skip_rows_after_header","with_try_parse_dates","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","ParquetStatistics","Statistics","borrow","borrow_mut","deref","deref_mut","deserialize","distinct_count","distinct_count","drop","eq","fmt","from","from","init","into","max_value","max_value","min_value","min_value","null_count","null_count","try_from","try_into","type_id","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","__clone_box","borrow","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref_mut","drop","fmt","from","init","into","into_thrift","key_value_metadata","key_value_metadata","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from_thrift","try_into","type_id","version","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIter","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[83,"polars_io::avro"],[149,"polars_io::cloud"],[219,"polars_io::cloud::options"],[398,"polars_io::csv"],[400,"polars_io::csv::read"],[642,"polars_io::csv::write"],[782,"polars_io::export"],[808,"polars_io::ipc"],[1061,"polars_io::json"],[1157,"polars_io::mmap"],[1178,"polars_io::ndjson"],[1180,"polars_io::ndjson::core"],[1260,"polars_io::parquet"],[1263,"polars_io::parquet::metadata"],[1294,"polars_io::parquet::read"],[1430,"polars_io::parquet::write"],[1612,"polars_io::partition"],[1628,"polars_io::pl_async"],[1649,"polars_io::predicates"],[1703,"polars_io::prelude"],[1706,"polars_io::utils"],[1717,"dyn_clone::sealed"],[1718,"alloc::boxed"],[1719,"std::io"],[1720,"core::result"],[1721,"serde::de"],[1722,"std::path"],[1723,"polars_core::frame"],[1724,"polars_error"],[1725,"core::fmt"],[1726,"core::fmt"],[1727,"std::path"],[1728,"std::io"],[1729,"core::option"],[1730,"serde::ser"],[1731,"core::any"],[1732,"polars_arrow::datatypes::schema"],[1733,"std::io"],[1734,"alloc::string"],[1735,"alloc::vec"],[1736,"object_store"],[1737,"alloc::sync"],[1738,"std::io::error"],[1739,"crossterm::command"],[1740,"std::io::error"],[1741,"object_store::path"],[1742,"bytes::bytes"],[1743,"core::ops::range"],[1744,"object_store"],[1745,"parquet_format_safe::thrift::varint::decode"],[1746,"core::convert"],[1747,"polars_core::schema"],[1748,"polars_core::datatypes::dtype"],[1749,"core::num::nonzero"],[1750,"polars_arrow::datatypes::field"],[1751,"polars_parquet::parquet::metadata::row_metadata"],[1752,"polars_error"],[1753,"futures_io::if_std"],[1754,"core::marker"],[1755,"core::marker"],[1756,"polars_arrow::datatypes::schema"],[1757,"core::any"],[1758,"polars_arrow::array::growable::structure"],[1759,"polars_arrow::array::struct_::mutable"],[1760,"polars_arrow::bitmap::immutable"],[1761,"polars_arrow::scalar"],[1762,"polars_arrow::array::struct_::iterator"],[1763,"polars_arrow::bitmap::utils::iterator"],[1764,"polars_arrow::bitmap::utils::zip_validity"],[1765,"polars_parquet::parquet::metadata::column_order"],[1766,"parquet_format_safe::parquet_format"],[1767,"parquet_format_safe::parquet_format"],[1768,"polars_parquet::parquet::error"],[1769,"polars_core::series"],[1770,"core::iter::traits::iterator"],[1771,"polars_parquet::arrow::write::file"],[1772,"std::sync::mutex"],[1773,"core::marker"],[1774,"tokio::runtime::task::join"],[1775,"polars_core::datatypes::field"],[1776,"core::marker"]],"i":[0,0,0,0,0,0,3,4,0,0,3,4,3,4,3,4,3,4,0,5,0,4,3,4,3,4,3,4,3,4,4,3,4,3,3,3,4,4,4,0,5,14,6,3,4,3,4,3,4,3,4,3,4,0,0,0,0,3,0,14,6,23,3,0,0,0,0,0,4,3,4,14,3,4,3,4,3,4,3,4,0,3,4,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,43,39,44,43,39,39,0,43,43,39,44,43,39,44,43,39,44,44,43,39,39,44,39,44,43,39,44,43,39,39,43,43,43,0,43,44,43,39,44,43,39,44,43,39,44,0,39,44,39,44,43,44,43,39,44,43,39,44,43,39,44,43,39,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,75,75,0,0,0,0,0,0,74,66,75,0,0,0,66,74,73,74,66,75,65,65,65,65,65,68,71,69,72,65,73,74,66,75,68,71,69,72,65,73,74,66,75,73,74,66,75,73,74,66,75,73,0,73,73,74,68,71,69,72,65,73,74,66,75,68,71,69,72,65,73,74,66,75,73,74,66,75,68,71,71,69,72,72,65,73,74,66,75,73,73,73,74,66,75,73,73,73,74,74,74,66,66,66,75,75,75,65,73,74,66,75,68,71,69,72,65,73,74,66,75,65,65,73,73,74,66,75,73,0,65,73,68,71,69,72,65,73,74,66,75,68,71,69,72,65,73,74,66,75,0,65,73,73,65,66,66,68,71,69,72,73,73,65,73,65,73,73,73,73,74,66,75,73,73,73,74,66,75,65,73,68,71,69,72,65,73,74,66,75,68,71,69,72,65,73,74,66,75,73,68,71,69,72,65,73,74,66,75,68,71,69,72,65,73,74,66,75,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,84,0,0,0,84,84,84,0,0,82,83,84,82,80,80,81,82,83,84,80,81,82,83,84,82,83,84,82,83,84,83,83,82,83,84,80,81,82,83,84,80,81,82,83,84,82,83,84,80,81,82,83,84,82,83,84,82,82,82,83,83,83,84,84,84,80,81,83,82,83,84,80,81,82,83,84,82,83,84,80,82,80,82,80,81,82,83,84,80,81,82,83,84,83,82,80,80,83,83,83,83,82,83,84,82,83,82,83,84,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,80,81,82,83,84,80,80,80,80,80,80,80,80,80,80,81,0,0,88,88,88,88,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,0,0,0,0,0,0,0,0,99,99,97,98,99,100,91,92,92,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,97,98,99,100,97,98,99,100,98,101,104,105,101,104,105,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,97,98,99,106,91,107,104,92,93,105,101,97,98,99,100,97,98,99,98,98,98,99,99,99,104,105,106,91,107,92,93,106,97,98,99,106,91,107,104,92,93,105,101,97,98,99,100,101,97,98,99,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,98,97,106,101,106,91,107,104,92,105,92,106,91,97,98,99,106,91,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,93,105,101,97,98,99,100,106,91,107,104,92,105,104,105,106,91,107,92,100,106,91,100,106,91,100,100,93,0,113,0,113,0,0,0,109,113,110,112,111,109,113,110,112,111,109,109,109,109,113,110,112,111,109,113,110,112,111,109,109,113,110,112,111,109,109,109,109,109,110,111,109,113,110,112,111,109,109,111,113,110,112,111,109,113,110,112,111,109,109,110,112,111,109,111,109,113,110,112,111,109,113,110,112,111,109,113,110,112,111,109,113,110,112,111,109,111,111,110,111,111,111,111,112,77,77,0,77,0,77,77,77,77,77,77,77,77,77,77,67,67,77,77,77,77,0,0,0,0,115,115,115,115,119,115,119,115,115,115,115,115,119,115,119,115,119,115,115,115,115,119,115,119,115,115,115,119,115,119,119,115,119,115,115,115,115,115,119,119,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,119,115,119,115,115,119,115,115,115,115,115,119,115,119,119,119,119,119,119,119,119,115,115,0,0,0,0,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,137,0,137,137,0,0,0,0,137,136,137,133,135,134,133,135,136,137,134,133,135,136,137,136,137,136,137,137,134,133,135,136,137,134,133,135,136,137,136,137,134,133,135,136,137,136,137,136,136,136,137,137,137,133,135,134,136,137,134,133,135,136,137,135,133,135,136,137,134,133,135,136,137,134,133,135,136,137,134,134,134,136,0,134,133,134,133,135,136,133,135,134,133,135,136,137,133,133,135,136,137,134,133,135,136,137,134,133,135,136,137,134,133,135,136,137,133,135,136,134,133,135,136,137,133,133,135,133,135,133,135,133,135,133,135,133,0,143,0,143,0,143,143,0,0,0,0,143,143,143,0,142,143,144,145,146,140,141,140,142,143,144,145,146,141,140,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,142,142,143,141,140,142,143,144,145,146,141,140,142,143,144,145,146,142,143,144,145,146,141,140,142,143,144,145,146,141,142,143,144,145,146,142,142,142,143,143,143,144,144,144,145,145,145,146,146,146,141,140,142,143,144,145,146,141,140,142,143,144,145,146,141,142,143,144,145,146,141,140,142,143,144,145,146,141,140,142,143,144,145,146,142,140,142,142,143,144,145,146,140,142,142,143,144,145,146,141,140,142,143,144,145,146,141,140,142,143,144,145,146,144,145,146,141,140,142,143,144,145,146,141,140,142,143,144,145,146,140,140,140,140,141,141,0,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,0,0,156,156,156,156,156,156,156,156,0,156,156,158,156,156,156,0,156,156,0,0,0,0,0,0,79,162,161,162,161,161,162,161,162,161,162,161,162,161,162,79,162,161,162,161,162,162,162,162,162,161,162,161,162,161,162,161,162,161,161,162,161,160,162,162,162,162,161,162,161,162,161,162,161,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{cb}d{}}0``{ce{}{}}000{ff}{hh}{{ce}d{}{}}0`{{jc}{{n{l}}}A`}`{{}h}{Abc{}}000{c{{Ad{f}}}Af}{c{{Ad{h}}}Af}{Abd}0`{{ff}Ah}{{hh}Ah}{{ce}Ah{}{}}00000`{jAj}{Al{{B`{An}}}}{{lAn}{{B`{d}}}}{{fBb}Bd}{{hBb}Bd}{cc{}}0{{fc}dBf}{{hc}dBf}{{}Ab}0{ce{}{}}0`{cAh{{Bj{Bh}}}}````{cAlBl}{clA`}{Bn{{B`{{Cb{C`}}}}}}```````{{fc}AdCd}{{hc}AdCd}{{AlAh}Al}77{c{{Ad{e}}}{}{}}000{cCf{}}0`99````````{{cb}d{}}{{{Ch{c}}}{{B`{Cj}}}{BlCl}};;;;;;{CnCn}{{ce}d{}{}}{Abc{}}00000{Abd}00{{CnCn}Ah}{{ce}Ah{}{}}00{{{Ch{c}}}{{B`{An}}}{BlCl}}{{{D`{c}}An}{{B`{d}}}A`}{{CnBb}{{Ad{dDb}}}}{cc{}}00{{Cnc}dBf}{{}Ab}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}A`}{{{Ch{c}}}{{B`{Dd}}}{BlCl}}{{{Ch{c}}Ah}{{Ch{c}}}{BlCl}}4{c{{Ad{e}}}{}{}}00000{cCf{}}00666{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}A`}{{{Ch{c}}{Cb{Ab}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}A`}{{{Ch{c}}{Cb{{Dh{Ab}}}}}{{Ch{c}}}{BlCl}}```{{cb}d{}}<<<<<<`{{Dj{Cb{Dl}}}{{B`{{Ed{Dn{Eb{E`}}}}}}}}{EfEf}{{ce}d{}{}}{{}Dn}{Abc{}}00000{Abd}{Ehd}11{{DnDn}Ah}{{ce}{{Ad{gEj}}}{}El{}}`{Eh{{En{d}}}}{{EfBb}Bd}{{DnBb}Bd}{cc{}}00{F`{{B`{Dn}}}}{{EfFb}{{B`{Fd}}}}{{EfFb{Ff{Ab}}}{{B`{Fd}}}}{{EfFb{Fh{{Ff{Ab}}}}}{{B`{{Dh{Fd}}}}}}{{Dj{Cb{Dl}}}{{B`{{Dh{Df}}}}}}{{EfFb}{{B`{Fj}}}}{{}Ab}00{ce{}{}}00{{Dj{Cb{Dl}}}{{B`{Eh}}}}{{{Eb{E`}}}Ef}{Dj{{B`{Dn}}}}{{{Eb{E`}}Fb}{{B`{Eh}}}}``{{ce}{{Ad{gEj}}}{}El{}}`{{ci}{{Ad{gEj}}}{}{}{}{{Fn{e}{{Fl{g}}}}}}6{c{{Ad{e}}}{}{}}00000{cCf{}}00888{{Eh{Fh{G`}}}{{En{Ab}}}}{{ce}{{Ad{AbEj}}}{}Gb}``````````````````````````````````````````````````````{{cb}d{}}000{GdDj}{GfDj}{GhDj}>>>>>>>>>>{{DlDj}{{B`{{`{E`}}}}}}00{DlDl}{GdGd}{GfGf}{GhGh}{{ce}d{}{}}000{{}Dl}{Abc{}}000000000{c{{Ad{Dl}}}Af}{c{{Ad{Gd}}}Af}{c{{Ad{Gf}}}Af}{c{{Ad{Gh}}}Af}{Abd}0000{{DlDl}Ah}{{GjGj}Ah}{{GdGd}Ah}{{GfGf}Ah}{{GhGh}Ah}{{ce}Ah{}{}}00000000000{{DlBb}Bd}{{GdBb}{{Ad{dDb}}}}{{GfBb}{{Ad{dDb}}}}{{GhBb}{{Ad{dDb}}}}{cc{}}0000{Dj{{Ad{Gjc}}}{}}{Dj{{Ad{Gd}}}}{Dj{{Ad{Gf}}}}{Dj{{Ad{Gh}}}}{{Djg}{{B`{Dl}}}{{Bj{Dj}}}{{Gl{Df}}}{{H`{}{{Gn{{Ed{ce}}}}}}}}{{Dlc}dBf}{{Gdc}dBf}{{Gfc}dBf}{{Ghc}dBf}{{}Ab}0000{ce{}{}}0000`{{Dlc}AdCd}{{Gdc}AdCd}{{Gfc}AdCd}{{Ghc}AdCd}4444{c{{Ad{e}}}{}{}}000000000{cCf{}}000066666{{Dle}Dl{{Gl{Df}}}{{H`{}{{Gn{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gl{Df}}}{{H`{}{{Gn{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gl{Df}}}{{H`{}{{Gn{{Ed{Ghc}}}}}}}}``````````````````{{cb}d{}}000{{{Hb{c}}{Cb{Hd}}}{{Hb{c}}}Hf}{{{Hb{c}}}{{B`{Hh}}}Hf}{{{Hb{c}}}{{B`{Hj}}}Hf}{{{Hb{{n{Hf}}}}{Cb{Hl}}}{{B`{Hn}}}}{{{Hb{{n{Hf}}}}{Cb{Hl}}}{{B`{I`}}}}??????????????????{IbIb}{IdId}{HdHd}{IfIf}{{ce}d{}{}}000`{{AjG`{Cb{G`}}{Cb{Hd}}G`Ah}{{B`{Ab}}}}`{{}Ib}{{}Id}{Abc{}}00000000000000000{c{{Ad{Ib}}}Af}{c{{Ad{Id}}}Af}{c{{Ad{Hd}}}Af}{c{{Ad{If}}}Af}{Abd}{Hnd}111{I`d}22222``{{IbIb}Ah}{{IdId}Ah}{{HdHd}Ah}{{IfIf}Ah}{{ce}Ah{}{}}00000000000{{{Hb{c}}}{{B`{An}}}Hf}{{IbBb}Bd}{{IdBb}Bd}{{HdBb}Bd}{{IfBb}Bd}{cc{}}00000000{c{{B`{{Hb{Ih}}}}}{{Gl{Aj}}}}{{{Hb{c}}Ah}{{Hb{c}}}Hf}`{{Ibc}dBf}{{Idc}dBf}{{Hdc}dBf}{{Ifc}dBf}`{{IjG`{Cb{Ab}}Ah{Cb{Dd}}AbAb{Cb{Hd}}{Cb{G`}}G`{Cb{If}}AhAh{Cb{Ab}}Ah}{{B`{{Ed{DdAbAb}}}}}}{{{Hb{c}}{Cb{Ab}}}{{Hb{c}}}Hf}`{{}Ab}00000000{ce{}{}}00000000{{{Fh{G`}}}Ah}9``{c{{Hb{c}}}Hf}{Df{{Cb{Hd}}}}{G`Hd}{{HhAb}{{B`{{Cb{{Dh{An}}}}}}}}{{HnAb}{{B`{{Cb{{Dh{An}}}}}}}}{{HjAb}{{B`{{Cb{{Dh{An}}}}}}}}{{I`Ab}{{B`{{Cb{{Dh{An}}}}}}}}``{{{Hb{c}}Ah}{{Hb{c}}}Hf}`{{{Hb{c}}Ab}{{Hb{c}}}Hf}```{{Ibc}AdCd}{{Idc}AdCd}{{Hdc}AdCd}{{Ifc}AdCd}``>>>>5`{c{{Ad{e}}}{}{}}00000000000000000`{cCf{}}00000000{ce{}{}}000000007{{{Hb{c}}{Cb{{Dh{Df}}}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{Dj}}}{{Hb{c}}}Hf}:{{{Hb{c}}{Cb{Hl}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{{Fh{Il}}}}}{{Hb{c}}}Hf}{{{Hb{c}}Id}{{Hb{c}}}Hf}{{{Hb{c}}G`}{{Hb{c}}}Hf}>>{{{Hb{c}}{Cb{Ab}}}{{Hb{c}}}Hf}0{{{Hb{c}}{Cb{If}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{e}}}{{Hb{c}}}Hf{{Gl{Aj}}}}{{{Hb{c}}{Cb{{Eb{In}}}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{{Dh{Ab}}}}}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{G`}}}{{Hb{c}}}Hf}{{{Hb{c}}Ah}{{Hb{c}}}Hf}{{{Hb{c}}{Cb{f}}}{{Hb{c}}}Hf};8{{{Hb{c}}Ab}{{Hb{c}}}Hf}02`````````{{cb}d{}}00`{{{J`{c}}Dd}{{B`{{Jb{c}}}}}A`}{ce{}{}}000000000{JdJd}{JfJf}{JhJh}{{ce}d{}{}}00``{{}Jd}{{}Jf}{{}Jh}{Abc{}}000000000{c{{Ad{Jd}}}Af}{c{{Ad{Jf}}}Af}{c{{Ad{Jh}}}Af}{Abd}0000{{JdJd}Ah}{{JfJf}Ah}{{JhJh}Ah}{{ce}Ah{}{}}00000000{{{J`{c}}An}{{B`{d}}}A`}{{{Jb{c}}}{{B`{d}}}A`}`{{JdBb}Bd}{{JfBb}Bd}{{JhBb}Bd}{cc{}}0000{{Jdc}dBf}{{Jfc}dBf}{{Jhc}dBf}{{{J`{c}}Ah}{{J`{c}}}A`}`0`{{}Ab}0000{ce{}{}}0000``{{{J`{c}}Ab}{{J`{c}}}A`}{c{{J`{c}}}A`}````{{Jdc}AdCd}{{Jfc}AdCd}{{Jhc}AdCd}``555{c{{Ad{e}}}{}{}}000000000{cCf{}}000077777{{{J`{c}}Jj}{{J`{c}}}A`}{{{J`{c}}{Cb{Df}}}{{J`{c}}}A`}0{{{J`{c}}{Cb{Ab}}}{{J`{c}}}A`}{{{J`{c}}Df}{{J`{c}}}A`}0{{{J`{c}}G`}{{J`{c}}}A`}{{{J`{c}}Jh}{{J`{c}}}A`}14{{{Jb{c}}An}{{B`{d}}}A`}``>>{Abc{}}0{{JlJn}{{Ad{K`Kb}}}}``{Abd}{{K`K`}Ah}{{K`Bb}{{Ad{dDb}}}}{KdK`}{cc{}}{{}Ab}{ce{}{}}``````{c{{Ad{e}}}{}{}}0{cCf{}}2``````````````{{cb}d{}}000{{{Kf{c}}}{{B`{Cj}}}Bl}{{{Kh{c}}Dd}{{B`{{Kj{c}}}}}A`}{{{Kh{c}}Dd}{{B`{{`{c}}}}}{KlKnL`}}666666666666666666666666{LbLb}{LdLd}{LfLf}{LhLh}{{ce}d{}{}}000`{{Lj{Cb{Ll}}}{{B`{Ln}}}}{{M`c}{{n{l}}}A`}{{Mbc}{{n{l}}}A`}{{Lj{Cb{Ll}}LhAh}{{B`{An}}}}{{}M`}{{}Mb}{{}Ld}{{}Lf}{{}Lh}{Abc{}}00000000000000000000000{c{{Ad{Lb}}}Af}{c{{Ad{Ld}}}Af}{c{{Ad{Lf}}}Af}{Abd}00000000000{{LbLb}Ah}{{LdLd}Ah}{{LfLf}Ah}{{ce}Ah{}{}}00000{M`Aj}{MbAj}{{{Md{c}}}{{B`{An}}}Hf}{{{Kf{c}}}{{B`{An}}}Bl}{{{Mf{c}}An}{{B`{d}}}A`}{{{Kh{c}}An}{{B`{d}}}A`}{{{Kj{c}}}{{B`{d}}}A`}{{{Md{c}}{Cb{{Eb{In}}}}Ah}{{B`{An}}}Hf}{{LbBb}Bd}{{LdBb}Bd}{{LfBb}Bd}{cc{}}00000000000{{Dj{Cb{Dl}}}{{B`{Lj}}}}{{Lbc}dBf}{{Ldc}dBf}{{Lfc}dBf}{{}Ab}00000000000{ce{}{}}00000000000``{{{Md{c}}Ah}{{Md{c}}}Hf}{Lj{{B`{Ll}}}}{c{{Md{c}}}Hf}{c{{Kf{c}}}Bl}{c{{Mf{c}}}A`}{{}M`}{c{{Kh{c}}}A`}{{}Mb}{c{{Kh{c}}}{KlKnL`}}{{{Md{c}}}{{B`{Mh}}}Hf}{{{Kf{c}}}{{B`{Dd}}}Bl}{{Lbc}AdCd}{{Ldc}AdCd}{{Lfc}AdCd}={{{Kf{c}}Ah}{{Kf{c}}}Bl}????{c{{Ad{e}}}{}{}}00000000000000000000000{cCf{}}00000000000{ce{}{}}00000000000{{{Md{c}}{Cb{{Dh{Df}}}}}{{Md{c}}}Hf}{{{Kf{c}}{Cb{{Dh{Df}}}}}{{Kf{c}}}Bl}{{{Mf{c}}{Cb{Lf}}}{{Mf{c}}}{}}{{M`{Cb{Lf}}}M`}{{{Kh{c}}{Cb{Lf}}}{{Kh{c}}}A`}{{Mb{Cb{Lf}}}Mb}{{M`Aj}M`}{{MbAj}Mb}{{{Md{c}}{Cb{Ab}}}{{Md{c}}}Hf}{{{Kf{c}}{Cb{Ab}}}{{Kf{c}}}Bl}{{{Mf{c}}Ah}{{Mf{c}}}{}}{{{Kh{c}}Ah}{{Kh{c}}}A`}{{Lhc}Lh{{Gl{{Cb{{Eb{In}}}}}}}}{{{Md{c}}{Cb{{Dh{Ab}}}}}{{Md{c}}}Hf}{{{Kf{c}}{Cb{{Dh{Ab}}}}}{{Kf{c}}}Bl}{{Lhc}Lh{{Gl{{Cb{{Dh{Df}}}}}}}}{{{Md{c}}{Cb{f}}}{{Md{c}}}Hf}{{{Kf{c}}{Cb{f}}}{{Kf{c}}}Bl}{{Lhc}Lh{{Gl{{Cb{f}}}}}}{{Lhc}Lh{{Gl{{Cb{Ab}}}}}}{{{Kj{c}}An}{{B`{d}}}A`}```````{{cb}d{}}{ce{}{}}000000000{MjMj}{{ce}d{}{}}{{}Mj}{Abc{}}000000000{c{{Ad{Mj}}}Af}{Abd}0000{{MjMj}Ah}{{ce}Ah{}{}}00{{{Ml{c}}An}{{B`{d}}}A`}{{{Mn{c}}}{{B`{An}}}Hf}{{MjBb}Bd}{cc{}}0000{{Mjc}dBf}{{{Mn{c}}{Cb{Ab}}}{{Mn{c}}}Hf}{{}Ab}0000?????`{c{{Ml{c}}}A`}{c{{N`{c}}}A`}{c{{Mn{c}}}Hf}{{Mjc}AdCd}{{{Mn{c}}Ah}{{Mn{c}}}Hf}{ce{}{}}{c{{Ad{e}}}{}{}}000000000{cCf{}}000022222{{{Mn{c}}Jj}{{Mn{c}}}Hf}4{{{Ml{c}}Nb}{{Ml{c}}}A`}{{{Mn{c}}Nb}{{Mn{c}}}Hf}{{{Mn{c}}{Cb{{Dh{Df}}}}}{{Mn{c}}}Hf}{{{Mn{c}}Hl}{{Mn{c}}}Hf}{{{Mn{c}}Dd}{{Mn{c}}}Hf}{{{N`{c}}An}{{B`{d}}}A`}`````99{Abc{}}{Ij{{Fh{G`}}}}1{Abd}{cIjHf}{cc{}}{{}Ab}?{Hf{{Cb{{Fh{G`}}}}}}{Hf{{Cb{Ih}}}}{c{{Ad{e}}}{}{}}0{cCf{}}{ce{}{}}`{{c{Cb{Ab}}}{{B`{Dd}}}Nd}``{{cb}d{}}{Nf{{Eb{Nh}}}}{NfNj}04444{Nf{{n{Nh}}}}{NfNf}{{ce}d{}{}}{NfNl}{Abc{}}000{Abd}0{{NfNf}Ah}{{NfNh}Ah}{Nf{{Fh{Jl}}}}{{{Nn{c}}}{{B`{An}}}Hf}{{NfBb}{{Ad{dDb}}}}{cc{}}{O`Nf}{ObNf}2{c{{B`{{Nn{Ih}}}}}{{Gl{Aj}}}}{Nl{{Fh{Jl}}}}{{{Nn{c}}{Cb{Ab}}}{{Nn{c}}}Hf}{{}Ab}0{ce{}{}}0{Nf{{Ed{{Dh{Jl}}{Dh{{n{Nh}}}}{Cb{Od}}}}}}{Nf}{Nf{{Ol{{Dh{{n{Of}}}}OhOj}}}}{NfAb}{{{Nn{c}}Ah}{{Nn{c}}}Hf}{c{{Nn{c}}}Hf}{{Nl{Dh{{n{Nh}}}}{Cb{Od}}}Nf}{NlNf}{{NlAb}Nf}{{Nf{Cb{Od}}}d}{{NfAbAb}d}0{{cAbAb}e{}{}}011{{NfAbAb}Nf}0{Nf{{Cb{Od}}}}{Nf{{n{Nh}}}}?{c{{Ad{e}}}{}{}}000{{Nl{Dh{{n{Nh}}}}{Cb{Od}}}{{Ad{NfKb}}}}{cCf{}}044{Nf{{Fh{{n{Nh}}}}}}{NfOh}{ce{}{}}0{{{Nn{c}}{Cb{Jj}}}{{Nn{c}}}Hf}{{{Nn{c}}Ah}{{Nn{c}}}Hf}{{{Nn{c}}{Cb{Ab}}}{{Nn{c}}}Hf}0{{{Nn{c}}{Cb{e}}}{{Nn{c}}}Hf{{Gl{Aj}}}}2{{{Nn{c}}Hl}{{Nn{c}}}Hf}{{{Nn{c}}Dd}{{Nn{c}}}Hf}{{Nf{Cb{Od}}}Nf}{{Nf{Cb{Od}}}{{n{Nh}}}}`````{{cb}d{}}99{OnOn}{{ce}d{}{}}{{OnAb}A@`}``{Abc{}}0{Abd}{{OnBb}{{Ad{dDb}}}}{cc{}}{{}Ab}{ce{}{}}{OnA@b}{On{{Cb{{Dh{A@d}}}}}}```{OnA@f}`3{c{{Ad{e}}}{}{}}{A@b{{Ad{OnA@h}}}}1{cCf{}}`6`````````??{{{A@j{c}}Ab}{{B`{A@l}}}Hf}{{A@nAb}{{B`{A@l}}}}8888888888{AA`AA`}{AAbAAb}{{ce}d{}{}}0{{}AAb}{Abc{}}000000000{c{{Ad{AA`}}}Af}{c{{Ad{AAb}}}Af}{Abd}0000{{AA`AA`}Ah}{{AAbAAb}Ah}{{ce}Ah{}{}}00000{{{A@j{c}}}{{B`{An}}}Hf}{A@n{{B`{An}}}}{{A@lAb}Ah}{{AA`Bb}Bd}{{AAbBb}Bd}{cc{}}0000{{Dj{Cb{Dl}}{Cb{Mh}}{Cb{AAd}}}{{B`{A@n}}}}{{{A@j{c}}}{{B`{AAd}}}Hf}{A@n{{B`{AAd}}}}{{AA`c}dBf}{{AAbc}dBf}{{}Ab}0000{ce{}{}}0000{A@lAh}`0`{{{Cb{{Fh{Ab}}}}Cj{Cb{{Fh{AAf}}}}{Cb{f}}}An}`{c{{A@j{c}}}Hf}{{A@lAb}{{B`{{Cb{{Dh{An}}}}}}}}{{{A@j{c}}}{{B`{Ab}}}Hf}{A@n{{B`{Ab}}}}`{{{A@j{c}}AAb}{{A@j{c}}}Hf}{{A@nAAb}A@n}{A@lMh}{{{A@j{c}}}{{B`{Mh}}}Hf}{A@n{{B`{Mh}}}}{{AA`c}AdCd}{{AAbc}AdCd}{{{A@j{c}}Ah}{{A@j{c}}}Hf}0{{A@nAh}A@n}??{c{{Ad{e}}}{}{}}000000000{cCf{}}000032`{ce{}{}}0000{{{A@j{c}}{Cb{{Dh{Df}}}}}{{A@j{c}}}Hf}{{{A@j{c}}{Cb{{Dh{AAf}}}}}{{A@j{c}}}Hf}{{A@n{Cb{{Dh{AAf}}}}}A@n}{{{A@j{c}}{Cb{Ab}}}{{A@j{c}}}Hf}{{A@n{Cb{Ab}}}A@n}{{{A@j{c}}{Cb{{Eb{In}}}}}{{A@j{c}}}Hf}{{A@n{Cb{{Eb{In}}}}}A@n}{{{A@j{c}}{Cb{{Dh{Ab}}}}}{{A@j{c}}}Hf}{{A@n{Cb{{Dh{Ab}}}}}A@n}{{{A@j{c}}{Cb{f}}}{{A@j{c}}}Hf}{{A@n{Cb{f}}}A@n}{{{A@j{c}}{Cb{Mh}}}{{A@j{c}}}Hf}```````````````{{cb}d{}}0000{{{AAh{c}}Dd}{{B`{{AAj{c}}}}}A`}>>>>>>>>>>>>>>{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{ABdABd}{{ce}d{}{}}0000``{{}AAl}{{}AAn}{Abc{}}0000000000000{c{{Ad{AAl}}}Af}{c{{Ad{AAn}}}Af}{c{{Ad{AB`}}}Af}{c{{Ad{ABb}}}Af}{c{{Ad{ABd}}}Af}{Abd}000000{{{AAj{c}}An}{{`{{ABh{}{{Gn{{B`{{ABf{Kb}}}}}}}}}}}A`}{{AAlAAl}Ah}{{AAnAAn}Ah}{{AB`AB`}Ah}{{ABbABb}Ah}{{ABdABd}Ah}{{ce}Ah{}{}}00000000000000{{{AAj{c}}}{{B`{ABj}}}A`}{{{AAh{c}}An}{{B`{ABj}}}A`}{{AAlBb}Bd}{{AAnBb}Bd}{{AB`Bb}Bd}{{ABbBb}Bd}{{ABdBb}Bd}{cc{}}000000{{{AAj{c}}}{{ABn{{ABl{c}}}}}A`}{{AAlc}dBf}{{AAnc}dBf}{{AB`c}dBf}{{ABbc}dBf}{{ABdc}dBf}{{}Ab}000000{ce{}{}}000000`{c{{AAh{c}}}{A`A`}}`{{AAlc}AdCd}{{AAnc}AdCd}{{AB`c}AdCd}{{ABbc}AdCd}{{ABdc}AdCd}{{{AAh{c}}Ah}{{AAh{c}}}A`}`77777{c{{Ad{e}}}{}{}}0000000000000{G`{{B`{AB`}}}}{AC`{{B`{ABb}}}}{ACb{{B`{ABd}}}}{cCf{}}000000<<<<<<<{{{AAh{c}}AAn}{{AAh{c}}}A`}{{{AAh{c}}{Cb{Ab}}}{{AAh{c}}}A`}07{{{AAj{c}}An}{{B`{d}}}A`}{{{AAj{c}}{Dh{{ABf{Kb}}}}}{{B`{d}}}A`}`{ce{}{}}0{Abc{}}0{Abd}{{{ACd{c}}An}{{B`{d}}}{jL`ACf}}{cc{}}{{}Ab}5{{cei}{{ACd{c}}}{jL`ACf}{{Gl{Aj}}}{{Bj{Dj}}}{{H`{}{{Gn{g}}}}}}??;6{{{ACd{c}}Ah}{{ACd{c}}}{jL`ACf}}``{{AChc}{}ACj}{{AChc}{}{ACjL`}}998875{{}ACh}5:{AClABj}{{AChc}ACn{ACjL`}}{c{{Ad{e}}}{}{}}0{{AC`e}{}ACj{{Fn{}{{Fl{c}}}}}}{cCf{}}?1````{{An{Cb{In}}Ah}{{B`{d}}}}{In{{Cb{AD`}}}}{ce{}{}}000{ADb{{Fh{ADd}}}}{Abc{}}000{c{{Ad{ADd}}}Af}{c{{Ad{ADb}}}Af}{Abd}0{ADdIl}{{InAn}{{B`{AAf}}}}{{ADdBb}Bd}{{ADbBb}Bd}{cc{}}0{AAfADd}{ADfADd}{ADd{{Cb{AAf}}}}00{{ADbDj}{{B`{ADd}}}}{{}Ab}0??{{ADf{Cb{AAf}}{Cb{AAf}}{Cb{AAf}}}ADd}{{Hl{Dh{ADd}}{Cb{Ab}}}ADb}{ADd{{Cb{Ab}}}}{ADb{{Cb{Ab}}}}{ADbHl}{{ADdc}AdCd}{{ADbc}AdCd}{{AD`ADb}{{B`{Ah}}}}:::{c{{Ad{e}}}{}{}}000{cCf{}}0{ce{}{}}0```````{{CjCj{Cb{{Fh{Df}}}}Dj}{{B`{d}}}}{{DdDd{Cb{{Fh{Df}}}}Dj}{{B`{d}}}}0{c{{B`{Ij}}}{BlHfADh}}{{cAb}{{Dh{{Ed{AbAb}}}}}{{ABh{}{{Gn{Ab}}}}}}{{{Cb{{Fh{Df}}}}Dd{Cb{{Fh{AAf}}}}Ah}{{Cb{{Dh{Ab}}}}}}{BhAj}","D":"CJd","p":[[5,"Private",1717],[1,"unit"],[5,"RowIndex",0],[5,"HiveOptions",0],[10,"WriterFactory",0],[10,"SerWriter",0],[5,"Box",1718],[10,"Write",1719],[1,"usize"],[6,"Result",1720],[10,"Deserializer",1721],[1,"bool"],[5,"PathBuf",1722],[10,"SerReader",0],[5,"DataFrame",1723],[8,"PolarsResult",1724],[5,"Formatter",1725],[8,"Result",1725],[10,"Hasher",1726],[5,"Path",1722],[10,"AsRef",1727],[10,"Read",1719],[10,"ArrowReader",0],[8,"ArrowChunk",1728],[6,"Option",1729],[10,"Serializer",1730],[5,"TypeId",1731],[5,"AvroReader",83],[5,"ArrowSchema",1732],[10,"Seek",1719],[6,"AvroCompression",83],[5,"AvroWriter",83],[5,"Error",1725],[5,"Schema",1733],[5,"String",1734],[5,"Vec",1735],[1,"str"],[5,"CloudOptions",219],[5,"CloudLocation",149],[10,"ObjectStore",1736],[5,"Arc",1737],[1,"tuple"],[5,"PolarsObjectStore",149],[5,"CloudWriter",149],[5,"Error",1738],[10,"Command",1739],[8,"Result",1738],[5,"Url",1740],[5,"Path",1741],[5,"Bytes",1742],[5,"Range",1743],[1,"slice"],[5,"ObjectMeta",1736],[17,"Output"],[10,"FnOnce",1744],[1,"u8"],[10,"VarInt",1745],[6,"AmazonS3ConfigKey",219],[6,"AzureConfigKey",219],[6,"GoogleConfigKey",219],[6,"CloudType",219],[10,"Into",1727],[17,"Item"],[10,"IntoIterator",1746],[5,"CsvReader",400],[6,"CommentPrefix",400],[10,"MmapBytesReader",1157],[5,"BatchedCsvReaderMmap",400],[5,"BatchedCsvReaderRead",400],[8,"SchemaRef",1733],[5,"OwnedBatchedCsvReaderMmap",400],[5,"OwnedBatchedCsvReader",400],[5,"CsvParserOptions",400],[6,"CsvEncoding",400],[6,"NullValues",400],[5,"File",1747],[6,"ReaderBytes",1157],[6,"DataType",1748],[10,"PhysicalIoExpr",1649],[5,"CsvWriter",642],[5,"BatchedWriter",642],[5,"CsvWriterOptions",642],[5,"SerializeOptions",642],[6,"QuoteStyle",642],[8,"NonZeroUsize",1749],[5,"Field",1750],[5,"RowGroupMetaData",1751],[5,"Statistics",782],[6,"PolarsError",1724],[5,"MutableStatistics",1752],[5,"IpcStreamReader",808],[5,"IpcWriter",808],[5,"BatchedWriter",808],[10,"AsyncWrite",1753],[10,"Unpin",1754],[10,"Send",1754],[5,"IpcScanOptions",808],[5,"IpcWriterOptions",808],[6,"IpcCompression",808],[5,"IpcReadOptions",808],[5,"IpcReaderAsync",808],[5,"FileMetadata",1755],[1,"i64"],[5,"IpcStreamWriterOption",808],[5,"IpcWriterOption",808],[5,"IpcReader",808],[5,"IpcStreamWriter",808],[8,"ArrowSchemaRef",1732],[5,"JsonWriterOptions",1061],[5,"JsonWriter",1061],[5,"JsonReader",1061],[5,"BatchedWriter",1061],[6,"JsonFormat",1061],[10,"BufRead",1719],[5,"StructArray",1180],[10,"Array",1756],[10,"Any",1731],[6,"ArrowDataType",1757],[5,"JsonLineReader",1180],[5,"GrowableStruct",1758],[5,"MutableStructArray",1759],[5,"Bitmap",1760],[10,"Scalar",1761],[5,"StructValueIter",1762],[5,"BitmapIter",1763],[6,"ZipValidity",1764],[5,"FileMetaData",1263],[6,"ColumnOrder",1765],[5,"FileMetaData",1766],[5,"KeyValue",1766],[5,"SchemaDescriptor",1767],[6,"Error",1768],[5,"ParquetReader",1294],[5,"BatchedParquetReader",1294],[5,"ParquetAsyncReader",1294],[5,"ParquetOptions",1294],[6,"ParallelStrategy",1294],[8,"FileMetaDataRef",1263],[5,"Series",1769],[5,"ParquetWriter",1430],[5,"BatchedWriter",1430],[5,"ParquetWriteOptions",1430],[6,"ParquetCompression",1430],[5,"GzipLevel",1430],[5,"BrotliLevel",1430],[5,"ZstdLevel",1430],[8,"RowGroupIter",1430],[10,"Iterator",1770],[1,"u64"],[5,"FileWriter",1771],[5,"Mutex",1772],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1612],[10,"Sync",1754],[5,"RuntimeManager",1628],[10,"Future",1773],[10,"GetSize",1628],[5,"JoinHandle",1774],[10,"StatsEvaluator",1649],[5,"BatchStats",1649],[5,"ColumnStats",1649],[5,"Field",1775],[10,"Sized",1754]],"b":[[1200,"impl-PartialEq-for-StructArray"],[1201,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1206,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1207,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1226,"impl-StructArray"],[1227,"impl-Array-for-StructArray"],[1230,"impl-Array-for-StructArray"],[1231,"impl-StructArray"],[1244,"impl-StructArray"],[1245,"impl-Array-for-StructArray"],[1258,"impl-StructArray"],[1259,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOMEnAAAAAEAAwAPABQAAAAWABMAKwACADAAAwA2AAAAOQACAD0AAgBBAAYASQAKAFwAAABeABcAeQADAIAAAQCDAA0AlAAAAJkABgCiAA0AsgACALgAAwC+AAIAxQAAAMgAAADNAA4A4gABAO4AAAD6AAEA/QAAABIBEAAmATAAXAEDAGEBCABvARwAkwEEAJwBAgChAQMApgEeAMYBNQD9AQMADAIFABQCCQApAgEALgIFADUCAAA3AgwARQIlAHICAAB5AgAAhAIAAIwCFACjAiEAxwICAM8CAgDTAgAA1QIFAOECAgDoAgMA7QIWABEDAwAYAwMAHQMAACUDBAArAwAALgMAADEDAAAzAwEANwMDADwDIQBfAz4AnwMDAK8DDwDMAwAAzgMHANgDOAAbBAIAIAQAACMEAQAmBAAALAQjAFEEAABXBAAAWQQEAGUEGACABAEAhgQBAIkECACTBAAAlQQIAJ8EAAChBAUAqAQKALQEAQC3BAEAvAQCAMIEAADEBAAAzAQDANQEBQDbBAEA3gQAAOEEAQDlBAUA7AQAAPEEBQD6BAMA/wQAAAgFAQALBQEADgUAABAFAAATBQAAFQUAABgFMABOBQkAXQUAAF8FAwBkBQAAZgUBAGkFAQBsBQIAcAUSAIUFBQCMBQEAjwUCAJMFAACVBQAAlwUBAJoFAACcBQEAnwUAAKEFAwCmBR0AxgUwAPkFBAAFBgwAHAYEACMGIwBMBgAATgYFAFUGAABXBgQAXQYCAGEGBABnBgEAagYAAGwGBQB0BgIAeAYDAH0GBwCHBgEAkQYBAJoGAgCgBg4AsQYBALQGAQA="}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPKPGPPPFPFFPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPGPPPGKFPFIPPPPPPPPGKPPPIPPPPPPPKPPPPPPPPPPPPPFPPPPPFKPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPKPPPPPFPPPPPKKPPPPPPPPPFPPFPFPPPPPFPPPPKPPPFPPFPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNHHOHHHHHHHNNHNNHHHHHHHHHHHHHHHHHHOONNNNHHHHHNOONHHNHHHHHHOOOHOOOOHOHHOHHHHOOHHHHOOONONNNNOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNMNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONNONNNNNNONNMNNOOOONNNNNNNNNOMNNMNNCOONOONNMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNMNNNMNNNNNNNNNNNNNNNNNHHCCCFKNNNNNMNNNNNNNNFKKFNNNNNNNNNNNNNNMNMMOMNNNNONNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFFFPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONNOONNNONNNNNOOONONOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalNameSpace","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","Correlation","Count","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","GetOutput","GroupsToRows","Gt","GtEq","Hash","Hist","Implode","Interpolate","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","KeepName","Kurtosis","Last","Len","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PctChange","PeakMax","PeakMin","Plus","Pow","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","Reverse","Rolling","RollingCovOptions","RollingExpr","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Sort","SortBy","SpecialEq","Std","StringExpr","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","TemporalExpr","Ternary","Then","ToPhysical","TopK","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_mean","rolling_median","rolling_min","rolling_quantile","rolling_skew","rolling_std","rolling_sum","rolling_var","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_dot","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","DatetimeArgs","DurationArgs","UnionArgs","__clone_box","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","borrow","borrow_mut","cast","clone","clone_into","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","default","deref","deref_mut","drop","dtype_col","dtype_cols","duration","fold_exprs","format_str","from","hour","hours","init","int_range","int_ranges","into","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","parallel","pearson_corr","quantile","rechunk","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","to_owned","to_supertypes","try_from","try_into","type_id","vzip","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","get_current_optimizations","group_by","group_by_dynamic","group_by_stable","has_header","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","outer_join","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","raise_if_empty","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_end_of_line_char","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","expressions","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","AggregationContext","PartitionedAggregation","PhysicalExpr","PhysicalIoHelper","as_expression","as_partitioned_aggregator","as_stats_evaluator","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","expr","finalize","fmt","fmt","from","from","has_window_function","init","init","into","into","is_literal","to_field","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","Outer","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","RollingOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","center","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cmp","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_constant_duration","is_full_days","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","merges_join_keys","method","min_periods","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parse","parsed_int","partial_cmp","period","period","predicate","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weeks","weeks_only","weights","window_size","with_columns","aggs","apply","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","schema","selection","slice","sort_options","coalesce","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1224,"polars_lazy::dsl::AggExpr"],[1231,"polars_lazy::dsl::BooleanFunction"],[1234,"polars_lazy::dsl::Expr"],[1268,"polars_lazy::dsl::FunctionExpr"],[1310,"polars_lazy::dsl::binary"],[1330,"polars_lazy::dsl::cat"],[1331,"polars_lazy::dsl::dt"],[1387,"polars_lazy::dsl::functions"],[1482,"polars_lazy::dsl::python_udf"],[1527,"polars_lazy::dsl::string"],[1589,"polars_lazy::dsl::udf"],[1595,"polars_lazy::frame"],[2020,"polars_lazy::frame::pivot"],[2022,"polars_lazy::physical_plan"],[2025,"polars_lazy::physical_plan::executors"],[2041,"polars_lazy::physical_plan::expressions"],[2084,"polars_lazy::physical_plan::planner"],[2085,"polars_lazy::prelude"],[2671,"polars_lazy::prelude::DslPlan"],[2724,"polars_lazy::prelude::JoinType"],[2725,"polars_lazy::prelude::LiteralValue"],[2728,"dyn_clone::sealed"],[2729,"polars_error"],[2730,"core::result"],[2731,"core::convert"],[2732,"core::convert"],[2733,"polars_core::series"],[2734,"core::option"],[2735,"core::ops::function"],[2736,"core::marker"],[2737,"core::marker"],[2738,"core::ops::function"],[2739,"polars_core::chunked_array::ops::sort::options"],[2740,"polars_core::chunked_array::ops::sort::options"],[2741,"alloc::vec"],[2742,"alloc::string"],[2743,"core::clone"],[2744,"polars_core::utils"],[2745,"polars_time::windows::group_by"],[2746,"polars_core::datatypes::time_unit"],[2747,"serde::de"],[2748,"polars_core::series::ops"],[2749,"core::marker"],[2750,"polars_core::chunked_array::ops"],[2751,"core::fmt"],[2752,"core::fmt"],[2753,"polars_plan::dsl::function_expr::range"],[2754,"polars_plan::dsl::function_expr::datetime"],[2755,"polars_plan::dsl::function_expr::list"],[2756,"polars_plan::dsl::function_expr::array"],[2757,"polars_plan::dsl::function_expr::strings"],[2758,"polars_plan::dsl::function_expr::struct_"],[2759,"polars_plan::dsl::function_expr::business"],[2760,"polars_plan::dsl::function_expr::cat"],[2761,"polars_plan::logical_plan::options"],[2762,"polars_core::schema"],[2763,"polars_plan::logical_plan"],[2764,"polars_core::datatypes::field"],[2765,"core::hash"],[2766,"polars_ops::chunked_array::interpolate"],[2767,"core::fmt"],[2768,"core::ops::function"],[2769,"polars_arrow::legacy::kernels::rolling::no_nulls"],[2770,"polars_core::chunked_array::ops::rolling_window"],[2771,"polars_core::datatypes"],[2772,"polars_core::chunked_array"],[2773,"core::marker"],[2774,"serde::ser"],[2775,"polars_core::series::series_trait"],[2776,"polars_ops::chunked_array::list::to_struct"],[2777,"core::any"],[2778,"polars_arrow::legacy::kernels::time"],[2779,"polars_core::frame"],[2780,"polars_error"],[2781,"pyo3::types::any"],[2782,"pyo3::instance"],[2783,"polars_core::schema"],[2784,"polars_utils::aliases"],[2785,"polars_io::cloud::options"],[2786,"core::iter::traits::collect"],[2787,"polars_core::frame::explode"],[2788,"std::path"],[2789,"std::path"],[2790,"polars_utils::arena"],[2791,"polars_plan::logical_plan::aexpr"],[2792,"polars_utils::arena"],[2793,"pyo3::instance"],[2794,"polars_core::frame"],[2795,"polars_io::csv::read::options"],[2796,"polars_io::csv::read::options"],[2797,"polars_core::frame::group_by::proxy"],[2798,"core::fmt"],[2799,"chrono_tz::timezones"],[2800,"core::cmp"],[2801,"polars_plan::dot"],[2802,"ahash::random_state"],[2803,"hashbrown::map"],[2804,"polars_core::datatypes::any_value"],[2805,"chrono::naive::datetime"]],"i":[0,0,0,0,0,0,25,4,0,32,4,50,50,36,4,50,50,25,25,25,25,0,25,25,25,4,25,0,25,0,25,4,25,0,25,0,0,25,25,4,4,25,25,32,25,25,25,25,25,25,25,0,25,36,25,25,48,4,0,25,36,36,25,25,25,25,4,0,25,4,57,0,0,0,25,0,0,25,25,4,32,25,36,25,4,0,0,25,4,25,0,57,36,36,25,25,32,25,0,50,50,50,50,50,50,50,50,50,50,50,50,57,0,4,25,32,4,25,0,0,4,25,25,36,36,25,36,36,32,25,32,25,32,0,32,25,36,25,36,36,32,48,25,50,36,36,4,25,0,36,56,25,25,25,36,25,25,32,25,25,25,25,25,25,4,0,25,25,25,25,56,0,25,25,25,25,4,0,0,25,25,25,25,25,25,4,4,4,0,32,25,0,25,0,4,32,25,25,4,0,25,25,25,36,0,25,25,25,0,25,32,0,4,4,0,0,36,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,3,3,3,3,4,4,4,4,0,8,9,4,0,55,51,4,8,9,4,0,4,4,0,4,4,4,0,4,0,4,4,4,4,4,4,4,8,9,4,8,9,4,4,0,4,0,55,4,30,32,0,0,4,0,4,0,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,0,54,39,41,30,42,41,0,4,0,4,4,4,4,4,4,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,0,0,0,0,0,0,8,9,4,4,4,4,8,9,0,4,0,4,4,4,0,4,60,60,4,0,0,0,0,51,52,53,4,16,16,16,51,52,54,55,56,57,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,16,50,25,51,52,53,54,55,56,57,41,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,32,4,48,36,16,16,16,50,25,53,54,55,56,57,9,4,4,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,9,4,0,4,0,0,0,4,32,4,4,48,36,16,16,50,25,53,54,55,56,57,4,4,4,4,48,48,48,36,36,36,50,50,50,53,53,53,54,54,54,55,55,55,56,56,56,57,57,57,72,72,4,4,4,4,54,4,4,4,4,4,74,74,4,4,4,4,0,9,4,4,16,4,4,30,42,39,78,4,4,48,36,36,16,50,50,25,25,51,52,53,54,55,56,57,41,0,55,54,0,4,43,8,97,9,3,103,74,44,45,46,47,32,4,4,4,4,4,4,4,4,4,4,4,4,4,4,48,36,16,16,16,16,16,16,16,16,16,16,16,16,50,25,25,25,25,25,51,52,53,54,55,56,56,57,41,16,41,4,0,9,4,9,4,8,9,4,43,66,14,97,30,78,4,4,3,32,4,4,48,36,50,25,53,54,55,56,57,9,4,4,51,52,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,41,0,0,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,100,9,3,4,3,4,4,4,4,4,4,4,4,0,4,0,4,3,3,4,8,9,74,103,4,0,9,4,0,9,4,4,0,4,4,4,4,4,4,4,103,4,0,4,97,97,16,16,4,16,103,16,4,0,4,4,0,97,4,97,97,97,97,0,8,9,4,0,0,9,4,0,0,8,9,4,4,51,52,52,0,8,9,4,0,53,51,52,4,51,4,8,9,4,4,41,4,4,52,4,4,4,97,97,16,51,52,41,4,4,0,4,4,41,4,45,47,3,4,4,4,4,4,0,4,3,4,103,103,4,0,4,4,0,4,4,4,0,4,4,74,0,4,4,97,4,41,8,9,4,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,3,4,4,55,55,16,4,9,9,4,4,51,52,32,4,48,36,16,16,16,50,25,53,54,55,56,57,9,9,4,9,8,9,4,4,4,4,4,4,4,4,9,4,8,9,4,4,0,4,8,9,4,4,54,4,0,4,4,103,103,0,8,9,4,0,16,9,4,4,4,0,44,46,0,51,52,51,9,4,4,8,103,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,4,97,4,36,50,25,8,9,103,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,97,97,4,97,30,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,0,3,9,8,9,4,4,8,9,4,4,4,8,9,4,43,8,97,9,3,103,74,44,45,46,47,32,4,48,36,16,50,25,51,52,53,54,55,56,57,41,52,0,45,47,53,51,51,52,97,52,51,52,51,52,51,52,52,51,52,51,52,97,97,51,52,51,51,52,51,4,51,199,200,201,199,200,201,199,202,203,204,205,206,207,207,208,209,205,210,211,212,213,214,210,209,212,206,215,214,216,215,215,216,208,212,213,214,214,213,211,209,216,205,207,211,217,218,219,220,221,222,223,224,225,222,226,226,220,221,217,220,221,217,221,217,227,228,223,229,230,218,230,231,232,233,234,235,217,236,237,238,239,240,241,231,229,235,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,124,0,0,51,0,0,0,0,0,0,0,124,124,0,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,52,124,124,124,124,0,0,0,0,0,124,51,52,124,0,0,124,0,0,0,0,0,0,51,52,52,0,51,52,51,52,0,124,0,0,124,0,0,0,0,51,52,0,0,0,0,51,52,51,124,124,124,124,124,124,52,51,0,0,0,0,130,106,130,106,130,106,130,130,130,106,130,106,130,130,106,130,130,130,130,130,130,106,130,130,106,106,130,106,130,106,130,130,106,130,106,130,106,106,130,106,130,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,128,134,138,143,144,136,145,146,128,134,135,136,128,128,134,136,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,128,128,144,145,141,128,128,141,128,134,138,143,144,136,145,146,141,128,134,138,143,144,136,145,146,147,147,144,145,128,128,155,146,155,146,147,147,143,128,128,128,138,144,145,146,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,128,128,128,128,135,141,141,128,128,134,138,143,144,136,145,146,128,155,146,128,128,155,146,141,128,141,155,146,128,128,128,135,147,147,147,143,136,128,146,135,135,141,128,128,128,134,138,143,144,136,145,146,128,128,128,128,143,134,145,135,138,135,141,128,134,138,143,144,136,145,146,128,135,141,128,134,138,143,144,136,145,146,147,147,128,128,135,128,154,128,128,135,128,128,134,143,136,145,128,128,128,128,128,128,144,128,128,147,143,136,138,144,145,138,135,143,136,143,136,128,135,128,128,145,147,143,136,147,143,136,0,155,146,128,155,146,128,143,147,143,136,144,145,128,128,135,128,155,146,147,143,136,138,144,145,136,128,128,128,128,128,128,136,138,128,128,128,128,128,155,146,128,128,128,128,128,128,138,128,155,146,128,128,128,155,146,135,128,128,134,128,128,128,141,128,134,138,143,144,136,145,146,128,143,135,141,128,134,138,143,144,136,145,146,135,141,128,134,138,143,144,136,145,146,155,146,135,141,128,134,138,143,144,136,145,146,128,128,128,145,135,128,135,141,128,134,138,143,144,136,145,146,135,136,143,128,128,128,128,128,143,128,143,143,143,143,143,136,143,136,143,147,143,143,136,136,143,128,147,143,136,147,143,136,128,128,143,147,143,136,128,147,128,143,143,136,136,143,136,143,143,128,143,143,128,128,143,128,128,0,0,0,0,0,0,0,178,178,178,178,178,177,178,178,178,178,178,178,178,178,0,0,0,0,179,179,179,182,182,184,182,184,182,184,182,184,182,184,179,182,179,180,182,180,179,184,182,184,182,182,184,182,184,179,179,182,184,182,184,182,184,182,184,0,0,0,0,151,151,188,189,189,68,151,0,68,189,189,188,68,0,0,189,0,68,68,189,189,189,68,68,68,151,189,189,189,189,189,0,68,0,0,0,0,151,0,0,173,173,68,188,188,0,0,189,173,173,188,151,0,0,68,189,0,0,0,0,68,68,151,189,68,68,68,189,189,189,189,189,189,189,68,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,68,63,63,63,137,137,137,137,167,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,115,150,110,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,68,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,68,115,150,110,63,63,168,170,68,170,63,63,115,150,110,167,168,153,169,173,170,109,190,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,109,68,68,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,68,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,150,150,150,110,110,110,63,63,63,167,167,167,168,168,168,153,153,153,169,169,169,151,151,151,173,173,173,170,170,170,190,190,190,150,115,150,110,63,63,137,167,168,153,169,151,151,173,173,170,188,109,189,190,68,190,115,115,150,110,63,165,167,168,196,153,153,169,151,173,170,188,109,189,190,68,189,195,150,110,63,167,168,153,169,151,173,170,188,109,189,190,153,167,150,167,150,110,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,63,63,63,153,150,104,196,189,167,168,169,170,189,151,109,115,63,63,63,165,63,173,63,63,153,150,110,165,63,63,63,150,110,165,195,170,137,137,165,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,68,167,190,153,150,170,153,153,68,189,115,150,110,63,167,168,153,169,151,173,170,188,109,189,190,68,63,151,173,63,63,63,63,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,189,190,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,153,115,150,110,63,165,167,168,196,153,169,151,173,170,188,109,189,190,68,115,63,63,115,115,165,242,242,243,244,245,246,247,248,249,249,250,244,251,244,247,242,248,252,243,253,250,245,254,255,255,256,257,242,255,253,242,253,258,247,242,255,248,252,256,257,246,249,254,251,249,246,255,249,246,257,246,243,243,259,260,260,260],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000000{fh}{{fh}{{l{hj}}}}00{hh}{{hh}}1{{hn}h}{{}h}{A`h}{Abh}{{hAd}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}``{{hc}h{{Aj{h}}}}4321{{hcAd}h{{Aj{h}}}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{Bnj}}}{{C`{h}{{Bd{{l{Bnj}}}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}{{ce{B`{{An{Al}}}}Ad}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}?{{hhCdCf}h}{hh}0000{{hh}h}1>=1>=1{{hCh}h}{{cCj}h{{Ah{{Af{h}}}}}}3{ch{{Aj{h}}}}`{hA`}{ClCn}{D`h}{{{Db{h}}}h}{nh}{{h{Bf{Dd}}}h}`{hDf}{{hDhh}h}{ce{}{}}000000000000000000000000000000000000000000000000000<{{hh{Dj{Ad}}{Db{Dl}}}h}`{{Dnn}{{l{E`j}}}}{{Eb{Db{h}}}{{l{hj}}}}{{Cl{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{EdBbBb}{{l{Bbj}}}}{{Eb{Db{h}}}h}{{hCf}h}0`{hEf}{hh}0{{hhh}h}{{hh}h}0{EhEh}{EjEj}{ElEl}{EnEn}{D`D`}7{F`F`}{DhDh}{{{B`{c}}}{{B`{c}}}Fb}{FdFd}{CbCb}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{EbEb}{{ce}d{}{}}000000000000000000{{{Af{h}}}h}{nh}{ch{{Gd{E`}}}}{{eAd}{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{e{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{A`c}h{{Aj{h}}}}{{Abc}h{{Aj{h}}}}{hh}00021{{hhGf}h}{{hAd}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}111{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}2{{GhhGjAd}h}0{{h{Db{Gl}}{Bf{{Db{E`}}}}AdAd}h}{{hhGnH`{Bf{Hb}}{Bf{E`}}}h}{Ffh}11```{{}h}{{}{{B`{{An{Al}}}}}}{{}{{B`{{An{Hd}}}}}}{{}{{B`{{An{Ed}}}}}}{{}Ff}{{}Fh}{{}Fl}{{}Fn}{{}G`}{{}Gb}{hh}{Gjc{}}000000000000000{{{B`{c}}}{}{}}111111111111111111111111111111111111{c{{l{D`}}}Hf}{c{{l{h}}}Hf}{c{{l{F`}}}Hf}{c{{l{Dh}}}Hf}{c{{l{{B`{Bb}}}}}Hf}{c{{l{{B`{{An{Hh}}}}}}}Hf}{c{{l{{B`{{An{Cl}}}}}}}Hf}{c{{l{Fd}}}Hf}{c{{l{Cb}}}Hf}{c{{l{Fj}}}Hf}{c{{l{Fl}}}Hf}{c{{l{Fn}}}Hf}{c{{l{G`}}}Hf}{c{{l{Gb}}}Hf}{{AbCdHj}h}{{hCdHj}h}{{hh}}{{hc}h{{Aj{h}}}}{Gjd}0000000000000000000000000{hh}{Abh}1`{hHl}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Fhh}{{hGlAd}h}{{D`D`}Ad}{{hh}Ad}:{{F`F`}Ad}{{DhDh}Ad}{{{B`{{An{c}}}}{B`{{An{c}}}}}AdHn}{{{B`{Bb}}{B`{Bb}}}Ad}{{FdFd}Ad}{{CbCb}Ad}{{FjFj}Ad}{{FlFl}Ad}{{FnFn}Ad}{{G`G`}Ad}{{GbGb}Ad}{{hc}h{{Aj{h}}}}{{ce}Ad{}{}}00000000000000000000000000{{I`hAd}h}0{{hIb}h}{{hhGnAd}h}11`{{hc}h{{Gd{E`}}}}{{hc}h{{Ah{{Af{Cf}}}}}}{hh}0{{hhh}h}{{IdCd}h}{{Idn}h}::{{hIf}h};{{}h}{Abh}66{{}{{B`{{An{Al}}}}}}7{{hh}h}{{ClIh}{{l{dIj}}}}{{EdIh}{{l{dIj}}}}{{DnIh}{{l{dIj}}}}{{IlIh}{{l{dIj}}}}{{hIh}{{l{dIj}}}}0{{F`Ih}{{l{dIj}}}}{{DhIh}{{l{dIj}}}}0{{{B`{c}}Ih}{{l{dIj}}}{}}{{FdIh}{{l{dIj}}}}0{{CbIh}{{l{dIj}}}}0{{FfIh}{{l{dIj}}}}{{FhIh}{{l{dIj}}}}{{FjIh}{{l{dIj}}}}{{FlIh}{{l{dIj}}}}{{FnIh}{{l{dIj}}}}{{G`Ih}{{l{dIj}}}}{{GbIh}{{l{dIj}}}}{{EbIh}{{l{dIj}}}}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}``{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{{h{Bf{Dd}}}h}{cc{}}00000000000{Inh}{Cdh}{D`h}{nh}{Ddh}{Dlh}{J`h}{Jbh}8{Glh}{Jdh}{Jfh}{Gfh}{Adh}=={Jh{{B`{{An{Cl}}}}}}{Jj{{B`{{An{Cl}}}}}}{Jl{{B`{{An{Cl}}}}}}{Jn{{B`{{An{Cl}}}}}}{Fd{{B`{{An{Cl}}}}}}{K`{{B`{{An{Cl}}}}}}{cc{}}{Kb{{B`{{An{Cl}}}}}}{Cb{{B`{{An{Cl}}}}}}{Kd{{B`{{An{Cl}}}}}}{Kf{{B`{{An{Cl}}}}}}{Kh{{B`{{An{Cl}}}}}}5{JhCb}6{KbCb}{KhCb}{FdCb}99999{GbG`}:::{Cf{{B`{{An{Al}}}}}}`{{hc{B`{{An{Al}}}}Kj}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}`{{AbhAd}h}{{hc}h{{Aj{h}}}}{{Abhh}h}{{hGjGj}h}{{A`hAd}h}43{Efh}{{HdKlKnL`L`}{{Bf{L`}}}}{{AlKlKn{Af{L`}}}L`}{LbGj}{Cl{{Bf{{B`{{An{Al}}}}}}}}{{IlKl}{{l{{An{Kl}}j}}}}99{fAd}{{D`c}dLd}{{hc}dLd}{{hDdDdDdDd}h}{{F`c}dLd}{{Dhc}dLd}{{Fdc}dLd}{{Cbc}dLd}{{Fjc}dLd}{{Flc}dLd}{{Fnc}dLd}{{G`c}dLd}{{Gbc}dLd}{{Abh}h}{{h{Bf{Gj}}}h}{{h{Bf{h}}{Bf{Gj}}AdAd}h}``{hh}{{}Gj}0000000000000000000000000`{{hhCdCf}h}{{hhh}h}{{hLf}h}{ce{}{}}0000000000000000000000000{h}{LhAb}{AbAb}{f{{l{{`{Lj}}j}}}}{{hccLl}h{{Aj{h}}}}{fAd};;;{{hc}h{{Aj{h}}}}<<<<<<<<11<{{A`hAd}h}{{AbhAd}h}{Idh}{Lnh}{{hAdAd}h}{{}h}{Abh}{hh}210{hAb}{chM`}{{hGl}h}3;;3;;{{Lnc}h{{Bh{n}{{Bd{{l{E`j}}}}}}BjBl}}{{hc{B`{{An{Al}}}}}h{{Bh{Bb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Lb{Bf{E`}}}{{l{L`j}}}}{{Lbc}{{l{L`j}}}{{Mb{Cf}{{Bd{Cf}}}}}}{c{{B`{{An{Al}}}}}{{Bh{Cf}{{Bd{Cf}}}}BjBl}}{c{{B`{{An{Al}}}}}{{Bh{{Af{Cf}}}{{Bd{Cf}}}}BjBl}}{{hc}h{{C`{h}{{Bd{h}}}}}}{c{{B`{{An{Al}}}}}{{Bh{L`}{{Bd{L`}}}}BjBl}}{{Ln{An{Bh}}}h}{c{{B`{{An{Al}}}}}{{Bh{{Af{L`}}}{{Bd{L`}}}}BjBl}}:{{ce{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}{{Ah{{Af{h}}}}}}{{hc{Af{h}}{B`{{An{Al}}}}}h{{Bh{{Af{Bb}}}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hCb{Af{h}}AdAd}h}2{Lb{{l{L`j}}}}{{hMdAd}h}1111{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}42104321{hf}```54321```2`{{hh}}543{hLn}`44`{h}{{hc}h{{Aj{h}}}}0;{{{Af{L`}}}Lb}{c{{B`{c}}}{}}{{hhh}Ff}{{}Fh}{{n{Db{L`}}{B`{{An{Al}}}}c}EbCl}{{h{Mf{h}}}d}0<<<`6{{Ejc}h{{Aj{h}}}}{{Enc}h{{Aj{h}}}}{f{{l{{An{n}}j}}}}{{he}h{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{heGb}h{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{hh}h}{hh}0{{hhGf}h}{{}h}{f{{Db{h}}}}{{hc}h{{Aj{h}}}}{{Lnn}h}05`{{h{Db{Gl}}{Bf{{Db{E`}}}}AdAdAd}h}{{hGj{Bf{{Db{E`}}}}AdAdAd}h}{{nhMh}h}{{hhMh}h}9{{hMj{Bf{Dd}}}h}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{hAd}h}{{hh}}{{Id{Db{E`}}}h}{{ch}h{{Aj{h}}}};{{hcc{Bf{c}}{Bf{Cf}}}h{{Aj{h}}}}{{Lb{Bf{Cf}}}{{l{L`j}}}}{{h{Af{Cd}}}h}`{A`h}{Abh}{hh}00{{hMl}h}{{hhFj}h}0{{h{An{Bh}}{B`{{An{Al}}}}Mn}h}{{hGjc}h{{C`{{Nb{N`}}}{{Bd{{Bf{Gl}}}}}}BjBlNd}}{{hNf}h}000{{hMhGlNf}h}{{hGjAd}h}222{f{{Db{{An{n}}}}}}{{hJ`}h}{{hDl}h}``{{}{{B`{{An{Al}}}}}}{{hhAdAd{Bf{Dd}}}h}{{AbhAdAd{Bf{Dd}}}h}01{{hcNh}h{{Aj{h}}}}``{{D`c}lNj}{{hc}lNj}{{F`c}lNj}{{Dhc}lNj}{{{B`{{An{Hh}}}}c}lNj}{{{B`{{An{Cl}}}}c}lNj}{{{B`{Bb}}c}lNj}{{Fdc}lNj}{{Cbc}lNj}{{Fjc}lNj}{{Flc}lNj}{{Fnc}lNj}{{G`c}lNj}{{Gbc}lNj}{{Abc}h{{Aj{h}}}}0{{hNl}h}1{{A`h}h}{{Abh}h}{{hh}h}{{hce}h{{Aj{h}}}{{Aj{h}}}}{hh}{{h{Bf{Dd}}}h}111{{hAd}h}{{Abhh}h}4{{A`Ch}h}{{AbCh}h}{{hCh}h}{{heCj}h{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{hhGfAd}h}8{{A`Gf}h}{{AbGf}h}{{hGf}h}{hNn}`{{hCf}h}`{hId}{{hh}}{{Lnn}h}0{nh}{A`h}{Abh}{hh}{c{{l{hj}}}{{Ah{{Af{h}}}}}}{{}{{B`{{An{Al}}}}}}{{Abh}h}{{h{Bf{Gj}}}h}44{{hhh}h}{{Ehc}Ej{{Aj{h}}}}{{Elc}En{{Aj{h}}}}{{hhGnH`}h}```{{AbGj}h}{h{{l{E`j}}}}{{hKlKn}{{l{L`j}}}}={Lnh}{ce{}{}}000000000000000000={Lb{{l{L`j}}}}{cE`{}}000{{A`{Bf{{An{Bh}}}}}h}{{AbO`{Bf{{An{Bh}}}}Gj}h}5{{hh}h}{c{{l{e}}}{}{}}000000000000000000000000000000000000000000000000000{{Lbc}{{l{L`j}}}{{Mb{Cf}{{Bd{{l{Cfj}}}}}}}}{{Lbc}{{l{L`j}}}{{Mb{{Af{Cf}}}{{Bd{{l{Cfj}}}}}}}}{{hc}{{l{hj}}}{{C`{h}{{Bd{{l{hj}}}}}}}}{{Lbc}{{l{L`j}}}{{Mb{L`}{{Bd{{l{L`j}}}}}}}}{{Cl{Db{Gf}}}{{l{dj}}}}{cOb{}}0000000000000000000000000`{fh}{{Abc}h{{Aj{h}}}}{A`h}{Abh}{hh}02100{{hAdAd}h}{{A`Gf}h}{{AbGf}h}{{hGf}h}{ce{}{}}0000000000000000000000000`{cEh{{Aj{h}}}}{{Ejc}El{{Aj{h}}}}{{Enc}El{{Aj{h}}}}`{{Ffh}Ff}0{{Fhh}Fh}{{LbCf}{{l{L`j}}}}{{Fhhhh}Fh}{{Ffhhh}Ff}1434334343{{Lb{Bf{Cf}}}{{l{L`j}}}}{Lb{{l{L`j}}}}65{{FfHb}Ff}{{Ff{Bf{E`}}}Ff}78{{hc}h{{Aj{h}}}}````````````````````````````````````````````````````````````````````````````````````````{{DfAd}h}{Dfh}??{{Dfh}h}{Gjc{}}0{Gjd}2{cc{}}54{{}Gj}{ce{}{}}5{c{{l{e}}}{}{}}0{cOb{}}2``{{Hlh{Dj{Ad}}{Db{Dl}}Od}h}{Hlh}44{{HlHb}h}1{{HlhHb}h}{{HlE`}h}333;;:393873333333333{{Hlh}h}44{{Hl{Bf{E`}}hOf}h}{{Hlcc}h{{Ah{n}}}}6{{Hln}h}7607777777{{HlhE`}h};;:<8878```{{cb}d{}}{{}h}{c{{l{hj}}}{{Ah{{Af{h}}}}}}`0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{{hhCdCf}h}{{cCj}h{{Ah{{Af{h}}}}}}{ch{{Aj{h}}}}{{{Db{h}}}h}{nh}{ce{}{}}0{{hCf}h}{OhOh}{{ce}d{}{}}{{{Af{h}}}h}5{c{{Ol{{Db{Oj}}}}}{{A@b{}{{On{A@`}}}}}}{ch{{Gd{E`}}}}{{cOh}{{Ol{A@`}}}{{Ah{{Af{A@`}}}}}}{{eAd}{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}11{e{{l{hj}}}{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{cnAd}h{{Ah{{Af{h}}}}}}{{hhGf}h}{{hceAd}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{hhGnH`{Bf{Hb}}{Bf{E`}}}h}0{Ffh}11``{{}Oh}{Gjc{}}0{Gjd}{Cfh}{ch{{Ah{{Af{Cf}}}}}}{Fhh}{{hce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{nc}{{l{hj}}}{{Ah{{Af{h}}}}}}{cc{}}``{{}Gj}{{hhCdCf}h}{{hhh}h}{ce{}{}}{hh}0{{hhc{B`{{An{Al}}}}}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBl}}{nh}00```0````2`{{hhGf}h}{{nhMh}h}`{{ce}h{{Bh{BbBb}{{Bd{{l{{Bf{Bb}}j}}}}}}BjBlFb}{{Ah{{Af{h}}}}}}{{ch}h{{Aj{h}}}}{{hhFj}h}0``{{hhGfAd}h}6{{hhGnH`}h}0```:`{c{{l{e}}}{}{}}0{cOb{}}<``````{{cb}d{}}===={{Md{Af{Bb}}}{{l{{Bf{Bb}}j}}}}{{A@dOj}{{l{Ojj}}}}{A@dA@d}{{ce}d{}{}}{Gjc{}}000{c{{l{A@d}}}Hf}{Gjd}0{{A@dA@d}Ad}{{ce}Ad{}{}}00{{A@dIh}{{l{dIj}}}}{cc{}}0{{{A@h{A@f}}}A@d}{Md{{Bf{{B`{{An{Al}}}}}}}}{{}Gj}0{ce{}{}}0{{{A@h{A@f}}{Bf{Cf}}Ad}Md}{{A@dc}lNj}2{c{{l{e}}}{}{}}000{{Md{Db{Gf}}}{{l{dj}}}}{cOb{}}055`{{NnAd}h}{Nnh}77{{NnnAd}h}{{NnhAd}h}{{Nnh}h}1{Gjc{}}0{Gjd}25{{NnhGj}h}3{{Nnn}{{l{hj}}}}54{cc{}}598{{}Gj}{ce{}{}}{{Nn{Bf{Cf}}{Bf{Gj}}}h}8;;{{NnGjA@j}h}0{{NnhhAd}h}0{{NnhhAdCd}h}>{{Nnhh}h}<99<9<<<<<<{{NnCfFlh}h}={{NnFl}h}{{Nn{Bf{Hb}}{Bf{E`}}Flh}h}{{NnGj}h}{{NnhAd}h}{Nnh}400{c{{l{e}}}{}{}}0{cOb{}}={{Nnh}h}````````````````````{{cb}d{}}00000000{{A@`Ad}A@`}{{A@lc}A@`{{Ah{{Af{h}}}}}}{{A@nAd}A@n}{AA`Ad}{{{An{AAb}}AAd}{{Ol{A@`}}}}{{A@`A@`cc}A@`{{Aj{h}}}}{{A@lcAAf}A@`{{Bh{Oj}{{Bd{{Ol{Oj}}}}}}BjBl}}{AA`Cn}{ce{}{}}0000000000000000000{{A@`AAhcCj}A@`{{Ah{{Af{h}}}}}}{A@`A@`}``{AAjd}{{A@`{AAl{nCf}}Ad}A@`}{{A@`CfAd}A@`}{AAjAAj}4{A@lA@l}{AAdAAd}{AAnAAn}{AB`AB`}{AA`AA`}{ABbABb}{ABdABd}{{ce}d{}{}}00000000{ABf{{Bf{ABh}}}}0``{A@`{{Ol{Oj}}}}{A@`{{Ol{AAj}}}}````{{ABf{Db{A@`}}}{{Ol{A@`}}}}0{{AAn{Db{A@`}}}{{Ol{A@`}}}}{A@`A@`}{{A@`A@`}A@`}{{}A@`}{{}AAd}{{}AB`}{{}ABb}{{}ABd}{Gjc{}}0000000000000000000{A@`{{Ol{E`}}}}0{A@`E`}0{Gjd}{AAjd}11{{A@`e}A@`{{Ah{n}}}{{ABj{}{{On{c}}}}}}2222222{{A@`{Bf{{Db{h}}}}}A@`}``{{A@`Ad}{{Ol{E`}}}}{{A@`e}A@`{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}``{AAj{{Bf{{Ol{Oj}}}}}}{{A@`Gj}{{Ol{Oj}}}}{AAj{{Ol{Oj}}}}``{{A@`c}A@`{{Aj{h}}}}0{{A@`h}A@`}{A@nA@`}{ABf{{Ol{A@`}}}}00{AAn{{Ol{A@`}}}}{AA`{{Ol{A@`}}}}{A@`A@`}{{ABdIh}{{l{dIj}}}}{{A@nAd}A@n}{cc{}}0{HhA@`}1{A@lA@`}2222222{A@`ABd}{{A@`e}A@l{{Aj{h}}Fb}{{Ah{{Af{c}}}}}}{{A@`hcABl}A@l{{Ah{{Af{h}}}}}}1{{AAnAd}AAn}{{A@l{Bf{Gj}}}A@`}`{{A@nABn}A@n}`{{}Gj}000000000{{A@`A@`cc}A@`{{Aj{h}}}}{ce{}{}}000000000{ABf{{Ol{{Bf{AC`}}}}}}0{{A@`A@`ccACb}A@`{{Ah{{Af{h}}}}}}{A@`A@n}?{A@`A@`}{ACdA@`}16{{A@nc}A@n{{Ah{{Af{h}}}}}}{{A@`AAh}A@`}``<{{AA`Ad}AA`}`{{A@`cACf{Bf{{An{Il}}}}{Bf{n}}}A@`{{Bh{Oj}{{Bd{{Ol{Oj}}}}}}BjBl}}{{A@`A@dACf{Bf{AAf}}Ad}A@`}666{{A@`ACh}A@`}`{{A@`A@`n}{{Ol{A@`}}}}8{ABf{{Bf{Gj}}}}{AAn{{Bf{Gj}}}}{AA`{{Bf{Gj}}}}````<{cAAn{{Ah{ACj}}}}{cAA`{{Ah{ACj}}}}{{{An{{Af{ACl}}}}}AAn}{{{An{{Af{ACl}}}}}AA`}?={{A@`{AD`{ACn}}{AD`{ADb}}}{{Ol{ADd}}}}{{A@`A@`cc}A@`{{Aj{h}}}}`{ABfACj}{AAnACj}{AA`ACj}{ABf{{Af{ACl}}}}{AAn{{Af{ACl}}}}{AA`{{Af{ACl}}}}```{A@`{{Ol{{ADf{OjOj}}}}}}``{{A@`hMh}A@`}{{AAnAd}AAn}{ABfAd}{AAnAd}{AA`Ad}``{{A@`ei}A@`{{Ah{n}}}{{ABj{}{{On{c}}}}}{{Ah{n}}}{{ABj{}{{On{g}}}}}}{A@`A@`}{{A@nc}A@n{{Ah{{Af{h}}}}}}{{A@`hcMl}A@l{{Ah{{Af{h}}}}}}``{ABf{{Bf{ADh}}}}{AAn{{Bf{ADh}}}}{AA`{{Bf{ADh}}}}```{{AA`ADj}{{Ol{Oj}}}}{{KlADlAd}A@`}{{cAB`}{{Ol{A@`}}}{{Ah{ACj}}}}{{{An{{Af{ACl}}}}AB`}{{Ol{A@`}}}}{{cABb}{{Ol{A@`}}}{{Ah{ACj}}}}{{{An{{Af{ACl}}}}ABb}{{Ol{A@`}}}}{A@`{{Ol{AAf}}}}{{AA`{Bf{Gj}}}{{Ol{AAf}}}}`{{A@`c}A@`{{Ah{{Af{h}}}}}}0{{A@`A@`cc}A@`{{Aj{h}}}}{{A@`c}A@`{{Aj{h}}}}{{A@`ce}A@`{{Aj{h}}}{{Aj{h}}}}``{{A@`AClADn}{{Ol{d}}}}{{A@`AClAE`}{{Ol{d}}}}{{A@`E`{Bf{ABh}}AE`}{{Ol{d}}}}{{A@`AClAEb}{{Ol{d}}}}{{A@`AClAEd}{{Ol{d}}}}{{A@`E`{Bf{ABh}}AEd}{{Ol{d}}}}`{{A@`CdAAh}A@`}``{{A@`cCj}A@`{{Gd{AEf}}}}{{A@`cCj}A@`{{Ah{{Af{h}}}}}}{{A@`Gf}A@`}``{{A@nc}A@n{{Ah{n}}}}{A@`A@`}{{A@`AAh}A@`}{{A@l{Bf{Gj}}}A@`}{A@`{{Ol{{ADf{ADd{AD`{ACn}}{AD`{ADb}}}}}}}}0{{A@`Ad}{{Ol{E`}}}}{ce{}{}}00000000{{A@`AAhcCj}A@`{{Ah{{Af{h}}}}}}{{AAnAd}AAn}{c{{l{e}}}{}{}}0000000000000000000``{cOb{}}000000000{{A@`{Bf{{Db{E`}}}}AEh}A@`}0{{A@`e}A@`{{Ah{n}}}{{ABj{}{{On{c}}}}}}`{{A@nAEj}A@n}>7777777777{{A@nA@`}A@n}{{AA`{Bf{AEl}}}AA`}7{{A@`h}A@`}{{A@`c}A@`{{Ah{{Af{h}}}}}}0{{A@`Ad}A@`}0{{AAn{Bf{n}}}AAn}{{A@`c}A@`{{Ah{{Af{A@`}}}}}}<{{AAn{Bf{AAf}}}AAn}{{AAnAEn}AAn}{{AAnGf}AAn}?{{AA`Ad}AA`}{{AAn{Bf{Gj}}}AAn}{{AA`{Bf{Gj}}}AA`}{{AAnAd}AAn}{{ABfc}ABf{{Aj{{Bf{Gj}}}}}}3{{AAnc}AAn{{Aj{{Bf{Gj}}}}}}3{{AA`c}AA`{{Aj{{Bf{Gj}}}}}}{{AAn{Bf{AF`}}}AAn}{{A@`ABd}A@`}{{ABfACl}ABf}{{AAnACl}AAn}{{AA`ACl}AA`}{{ABf{An{{Af{ACl}}}}}ABf}{{AAn{An{{Af{ACl}}}}}AAn}{{AA`{An{{Af{ACl}}}}}AA`}{{A@`Ad}A@`}0{{AAn{Bf{Gf}}}AAn}{{ABfAd}ABf}>{{AA`Ad}AA`}3{{ABfc}ABf{{Aj{{Bf{ADh}}}}}}{{A@`n{Bf{AAh}}}A@`}{{AAn{Bf{ADh}}}AAn}{{AAnc}AAn{{Aj{{Bf{ADh}}}}}}{{AA`{Bf{ADh}}}AA`}{{AA`c}AA`{{Aj{{Bf{ADh}}}}}}{{AAn{Bf{AAf}}}AAn}{{AA`{Bf{AAf}}}AA`}{{AAnc}{{Ol{AAn}}}{{Bh{Kl}{{Bd{{Ol{Kl}}}}}}}}{{AAnGf}AAn}={{AAnGj}AAn}0>>{{AAnAd}AAn}?{A@`A@`}{{Ojei{Bf{m}}Ad{Bf{h}}{Bf{n}}}{{Ol{Oj}}}{{Ah{n}}}{{ABj{}{{On{c}}}}}{{Ah{n}}}{{ABj{}{{On{g}}}}}{{Ah{n}}}{{ABj{}{{On{k}}}}}}0`````{ce{}{}}0{Gjc{}}0{Gjd}``{cc{}}{{}Gj}4{c{{l{e}}}{}{}}0{cOb{}}6````{AFf{{Bf{h}}}}{AFf{{Bf{AFh}}}}{AFf{{Bf{AFj}}}}{AFl{{Bf{AFj}}}}::::999988`{{AFlOj}{{Ol{Bb}}}}````{{AFfIh}AGb}{{AG`Ih}AGb}::`99=={AFfAd}{{AFfKl}{{Ol{L`}}}}::::99??{{ADd{AD`{ACn}}{AD`{ADb}}}{{Ol{{AGd{AFb}}}}}}``````````````````````````````````````````````````````````````````````````````{{cb}d{}}000000000000000{{GnCd{Bf{AGf}}}{{l{Cdj}}}}00{AAbAd}00{AAbCn}`{ce{}{}}00000000000000000000000000000000000````{NfNf}{ABlABl}{MlMl}{GnGn}{ADnADn}{AE`AE`}{ACbACb}{AEbAEb}{ABnABn}{AEjAEj}{AEdAEd}{AGhAGh}{MjMj}{AGjAGj}{AGlAGl}{HhHh}{{ce}d{}{}}000000000000000```{{GnGn}AGn}{{ce}AGn{}{}}``{Hh{{l{{An{Kl}}j}}}}`{GnCd}{GnAd}{{}Nf}{{}ABl}{{}Ml}{{}ADn}{{}AE`}{{}ACb}{{}AEb}{{}AEj}{{}AEd}{{}Mj}{{}AGl}{{}Hh}{Gjc{}}00000000000000000000000000000000000`{HhE`}0{c{{l{Nf}}}Hf}{c{{l{ABl}}}Hf}{c{{l{Ml}}}Hf}{c{{l{Gn}}}Hf}{c{{l{ADn}}}Hf}{c{{l{AE`}}}Hf}{c{{l{ACb}}}Hf}{c{{l{AEb}}}Hf}{c{{l{ABn}}}Hf}{c{{l{AEj}}}Hf}{c{{l{AEd}}}Hf}{c{{l{AGh}}}Hf}{c{{l{Mj}}}Hf}{c{{l{AGj}}}Hf}{c{{l{AGl}}}Hf}{c{{l{Hh}}}Hf}{{HhE`{ADf{GjGj}}AH`{AHd{E`E`AHb}}}{{l{dIj}}}}{Gjd}00000000000000000{{NfNf}Ad}{{ABlABl}Ad}{{MlMl}Ad}{{GnGn}Ad}{{ADnADn}Ad}{{AE`AE`}Ad}{{ACbACb}Ad}{{AEbAEb}Ad}{{ABnABn}Ad}{{AEjAEj}Ad}{{AEdAEd}Ad}{{AGhAGh}Ad}{{MjMj}Ad}{{AGjAGj}Ad}{{AGlAGl}Ad}{{ce}Ad{}{}}00000000000000000000000000000000`{{NfIh}{{l{dIj}}}}{{ABlIh}{{l{dIj}}}}{{MlIh}{{l{dIj}}}}{{GnIh}{{l{dIj}}}}0{{AAbIh}{{l{dIj}}}}{{ADnIh}{{l{dIj}}}}{{AE`Ih}{{l{dIj}}}}{{ACbIh}{{l{dIj}}}}{{AEbIh}{{l{dIj}}}}{{ABnIh}{{l{dIj}}}}0{{AEjIh}{{l{dIj}}}}0{{AEdIh}{{l{dIj}}}}{{AGhIh}{{l{dIj}}}}{{MjIh}{{l{dIj}}}}{{AGjIh}{{l{dIj}}}}{{AGlIh}{{l{dIj}}}}{{HhIh}{{l{dIj}}}}``{cc{}}0000000{ABnACb}1111111111{AGjCf}{{AHf{Db{Bb}}ABl}{{l{{ADf{Bb{Db{Bb}}AFn}}j}}}}{{ABlc}dLd}{{Mlc}dLd}{{Gnc}dLd}{{ADnc}dLd}{{AE`c}dLd}{{ACbc}dLd}{{AEbc}dLd}{{ABnc}dLd}{{AEjc}dLd}{{AEdc}dLd}{{AGhc}dLd}{{Mjc}dLd}{{AGjc}dLd}{{AGlc}dLd}``````{{}Gj}00000000000000000{ce{}{}}00000000000000000{{Gn{Bf{n}}}Ad}{GnAd}0``{M`h}{AHhh}{AGjh}````{AGjAGj}{ABnAd}``{GnCd}6{{GnCd}Gn}`1{AEjAd}8{CdGn}{ABnACb}```{nGn}`{{GnGn}{{Bf{AGn}}}}```{{AHf{Db{Bb}}Ml}{{l{{ADf{Bb{Db{Bb}}AFn}}j}}}}`{{AAbADj}{{l{Ojj}}}}{{AAb{Bf{Gj}}}{{l{{An{Kl}}j}}}}`{{Nfc}lNj}{{ABlc}lNj}{{Mlc}lNj}{{Gnc}lNj}{{ADnc}lNj}{{AE`c}lNj}{{ACbc}lNj}{{AEbc}lNj}{{ABnc}lNj}{{AEjc}lNj}{{AEdc}lNj}{{AGhc}lNj}{{Mjc}lNj}{{AGjc}lNj}{{AGlc}lNj}{{Hhc}lNj}`````{ACbn}`{Hh{{l{{ADf{ADd{AD`{ACn}}{AD`{ADb}}}}j}}}}{AGj{{Bf{AHj}}}}{ce{}{}}000000000000000{cE`{}}00{{GnCd{Bf{AGf}}ceg}{{l{Cdj}}}{{Bh{Cd}{{Bd{Cd}}}}}{{Bh{Cd}{{Bd{AHl}}}}}{{Bh{AHl}{{Bd{Cd}}}}}}{{GnCd{Bf{AGf}}}{{l{Cdj}}}}00{c{{l{e}}}{}{}}000000000000000{AHj{{l{AGjj}}}}11111111111111111111{cOb{}}00000000000000000`666666666666666666`{GnCd}{GnAd}````````````````````````````````````````````````````````````","D":"GCl","p":[[5,"Private",2728],[1,"unit"],[5,"MetaNameSpace",6],[6,"Expr",6],[6,"PolarsError",2729],[6,"Result",2730],[1,"str"],[5,"ArrayNameSpace",6],[5,"ListNameSpace",6],[1,"bool"],[1,"slice"],[10,"AsRef",2731],[10,"Into",2731],[10,"FunctionOutputField",6],[5,"Arc",2732],[5,"SpecialEq",6],[5,"Series",2733],[17,"Output"],[6,"Option",2734],[10,"Fn",2735],[10,"Send",2736],[10,"Sync",2736],[6,"VisitRecursion",2737],[10,"FnMut",2735],[6,"FunctionExpr",6],[1,"i64"],[6,"DataType",2738],[5,"SortOptions",2739],[5,"SortMultipleOptions",2739],[10,"SeriesUdf",6],[10,"Any",2740],[6,"AggExpr",6],[5,"Vec",2741],[1,"u64"],[5,"BinaryNameSpace",1310],[6,"Operator",6],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6],[5,"String",2742],[5,"UserDefinedFunction",6],[10,"SeriesBinaryUdf",6],[5,"CategoricalNameSpace",6],[5,"When",6],[5,"Then",6],[5,"ChainedWhen",6],[5,"ChainedThen",6],[6,"Excluded",6],[10,"Clone",2743],[6,"BooleanFunction",6],[5,"DatetimeArgs",6],[5,"DurationArgs",6],[5,"RollingCovOptions",6],[5,"StrptimeOptions",6],[5,"JoinOptions",6],[6,"WindowType",6],[6,"WindowMapping",6],[10,"IntoVec",2744],[1,"u8"],[10,"ExprEvalExtension",6],[1,"usize"],[1,"f64"],[5,"Duration",2085],[6,"ClosedWindow",2745],[6,"TimeUnit",2746],[10,"BinaryUdfOutputField",6],[10,"Deserializer",2747],[6,"DslPlan",2085],[6,"NullBehavior",2748],[5,"DateLikeNameSpace",1331],[10,"Sized",2736],[10,"ListNameSpaceExtension",6],[5,"EWMOptions",2749],[5,"StructNameSpace",6],[6,"FillNullStrategy",2750],[5,"Formatter",2751],[5,"Error",2751],[10,"UdfSchema",6],[1,"f32"],[1,"u32"],[1,"i8"],[1,"i16"],[1,"u16"],[6,"BinaryFunction",2752],[6,"RangeFunction",2753],[6,"TemporalFunction",2754],[6,"ListFunction",2755],[6,"ArrayFunction",2756],[6,"StringFunction",2757],[6,"StructFunction",2758],[6,"BusinessFunction",2759],[6,"CategoricalFunction",2760],[5,"FunctionOptions",2761],[5,"Schema",2762],[6,"Context",2763],[5,"Field",2764],[5,"FieldsMapper",6],[10,"Hasher",2765],[6,"InterpolationMethod",2766],[10,"IntoListNameSpace",6],[10,"Display",2751],[6,"ClosedInterval",2767],[5,"ExprNameNameSpace",6],[10,"Literal",2085],[10,"FnOnce",2735],[5,"PythonUdfExpression",1482],[5,"UnitVec",2768],[6,"QuantileInterpolOptions",2769],[5,"RankOptions",2085],[5,"RollingGroupOptions",2085],[5,"RollingOptionsFixedWindow",2770],[5,"Float64Type",2771],[5,"ChunkedArray",2772],[10,"Copy",2736],[5,"RollingOptions",2085],[6,"SearchSortedSide",2773],[10,"Serializer",2774],[6,"IsSorted",2775],[5,"StringNameSpace",1527],[6,"ListToStructWidthStrategy",2776],[5,"TypeId",2740],[6,"Roll",2777],[6,"NonExistent",2778],[5,"UnionArgs",1387],[5,"DataFrame",2779],[8,"PolarsResult",2729],[17,"Item"],[5,"LazyFrame",1595],[10,"IntoParallelIterator",2780],[5,"PythonFunction",1482],[5,"PyAny",2781],[5,"Py",2782],[1,"char"],[5,"LazyGroupBy",1595],[5,"JoinBuilder",1595],[5,"LazyJsonLineReader",1595],[10,"AnonymousScan",2085],[5,"ScanArgsAnonymous",1595],[8,"SchemaRef",2762],[8,"IdxSize",2783],[5,"InProcessQuery",1595],[8,"PlHashMap",2784],[5,"LazyCsvReader",1595],[5,"ScanArgsIpc",1595],[5,"ScanArgsParquet",1595],[5,"OptState",1595],[10,"LazyFileListReader",1595],[5,"CloudOptions",2785],[10,"IntoIterator",2786],[5,"DynamicGroupOptions",2085],[6,"JoinType",2085],[8,"PathIterator",1595],[5,"JoinArgs",2085],[10,"IntoLazy",1595],[8,"AllowedOptimizations",1595],[5,"MeltArgs",2787],[5,"Path",2788],[5,"PathBuf",2788],[6,"IR",2789],[5,"Arena",2790],[6,"AExpr",2791],[5,"Node",2790],[1,"tuple"],[5,"RowIndex",2792],[5,"AnonymousScanArgs",2085],[8,"PyObject",2782],[5,"CsvWriterOptions",2085],[5,"IpcWriterOptions",2085],[5,"JsonWriterOptions",2085],[5,"ParquetWriteOptions",2085],[8,"String",2793],[6,"UniqueKeepStrategy",2779],[6,"JoinValidation",2085],[8,"NonZeroUsize",2794],[6,"CsvEncoding",2795],[6,"NullValues",2795],[10,"Executor",2025],[5,"Dummy",2025],[10,"PhysicalExpr",2041],[10,"PartitionedAggregation",2041],[10,"StatsEvaluator",2796],[5,"PhysicalIoHelper",2041],[6,"GroupsProxy",2797],[5,"AggregationContext",2041],[8,"Result",2751],[5,"Box",2798],[6,"Tz",2799],[6,"RankMethod",2085],[6,"LiteralValue",2085],[5,"AnonymousScanOptions",2085],[6,"Ordering",2800],[5,"DotNode",2801],[5,"RandomState",2802],[5,"HashMap",2803],[10,"PolarsTemporalGroupby",2085],[5,"Null",2085],[6,"AnyValue",2804],[5,"NaiveDateTime",2805],[15,"Quantile",1224],[15,"Min",1224],[15,"Max",1224],[15,"IsBetween",1231],[15,"Any",1231],[15,"All",1231],[15,"SortBy",1234],[15,"Filter",1234],[15,"Cast",1234],[15,"Sort",1234],[15,"Gather",1234],[15,"RenameAlias",1234],[15,"Ternary",1234],[15,"Function",1234],[15,"Window",1234],[15,"AnonymousFunction",1234],[15,"Slice",1234],[15,"BinaryExpr",1234],[15,"QCut",1268],[15,"Entropy",1268],[15,"Log",1268],[15,"Hist",1268],[15,"Cut",1268],[15,"EwmMeanBy",1268],[15,"Correlation",1268],[15,"Round",1268],[15,"RoundSF",1268],[15,"Clip",1268],[15,"BackwardFill",1268],[15,"ForwardFill",1268],[15,"Random",1268],[15,"GatherEvery",1268],[15,"Rank",1268],[15,"EwmMean",1268],[15,"EwmStd",1268],[15,"EwmVar",1268],[15,"ValueCounts",1268],[15,"Replace",1268],[15,"CumCount",1268],[15,"CumSum",1268],[15,"CumProd",1268],[15,"CumMin",1268],[15,"CumMax",1268],[15,"GroupBy",2671],[15,"Sort",2671],[15,"Cache",2671],[15,"ExtContext",2671],[15,"DataFrameScan",2671],[15,"Select",2671],[15,"HStack",2671],[15,"Scan",2671],[15,"MapFunction",2671],[15,"Filter",2671],[15,"Distinct",2671],[15,"Slice",2671],[15,"Sink",2671],[15,"Join",2671],[15,"Union",2671],[15,"HConcat",2671],[15,"PythonScan",2671],[15,"Outer",2724],[15,"Range",2725]],"b":[[432,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[433,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[434,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[499,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[500,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[501,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[549,"impl-PartialEq-for-Expr"],[550,"impl-Expr"],[553,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[554,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[619,"impl-Display-for-Expr"],[620,"impl-Debug-for-Expr"],[622,"impl-Debug-for-Operator"],[623,"impl-Display-for-Operator"],[625,"impl-Display-for-BooleanFunction"],[626,"impl-Debug-for-BooleanFunction"],[627,"impl-Debug-for-FunctionExpr"],[628,"impl-Display-for-FunctionExpr"],[654,"impl-From%3Cf32%3E-for-Expr"],[655,"impl-From%3Ci64%3E-for-Expr"],[656,"impl-From%3CAggExpr%3E-for-Expr"],[657,"impl-From%3C%26str%3E-for-Expr"],[658,"impl-From%3Cu64%3E-for-Expr"],[659,"impl-From%3Ci32%3E-for-Expr"],[660,"impl-From%3Cu32%3E-for-Expr"],[661,"impl-From%3Ci8%3E-for-Expr"],[663,"impl-From%3Cf64%3E-for-Expr"],[664,"impl-From%3Ci16%3E-for-Expr"],[665,"impl-From%3Cu16%3E-for-Expr"],[666,"impl-From%3Cu8%3E-for-Expr"],[667,"impl-From%3Cbool%3E-for-Expr"],[670,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[671,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[672,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[673,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[674,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[675,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[677,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[678,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[679,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[680,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[681,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[683,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[685,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[686,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[687,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[718,"impl-Hash-for-Expr"],[719,"impl-Expr"],[975,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[976,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[977,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1753,"impl-From%3CDslPlan%3E-for-LazyFrame"],[1755,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[1983,"impl-LazyCsvReader"],[1984,"impl-LazyFileListReader-for-LazyCsvReader"],[1985,"impl-LazyJsonLineReader"],[1986,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2004,"impl-LazyCsvReader"],[2005,"impl-LazyFileListReader-for-LazyCsvReader"],[2006,"impl-LazyJsonLineReader"],[2007,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2408,"impl-Debug-for-Duration"],[2409,"impl-Display-for-Duration"],[2415,"impl-Debug-for-JoinType"],[2416,"impl-Display-for-JoinType"],[2417,"impl-Debug-for-JoinValidation"],[2418,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoH/QAEABEAFwAKACMAAAAmAA0ANQAFADwABgBEAAIASQAAAEsAEABdABIAcQAAAHMAAwB4AA0AhwALAJQAAgCYABgAtAAIAL4AAwDDAAMAyQAHANIAAQDVAAAA1wAZAPIAAAD3AAAA+gABAP4AAAAEAQAABgEAABEBAAAUAQAAGwEAAB0BAQAiAQAAJQEzAFoBAABcAQAAXgEBAGMBAABqASUAkwEAAK0BDAC7AUIAAAIAAAICGQAdAgAAHwIAACUCAQAoAgoANAIaAFcCAABaAgEAXwIAAGUCAABoAhUAfwIAAI8CBwCYAgQAnwIFAKYCBACsAgAArgICALYCAAC6AgAAwAIBAMUCBQDOAgEA0QIIAN0CAQDgAhkAGAMCABwDAAAvAwAANwMAAEQDAABHAwUAUAMAAFMDAABjAwAAZgMCAG4DAgByAwMAewMBAH8DAgCFAwEAkAMAAJIDAQCZAwAAmwMAAKMDAQCpAwEArAMAALEDAgDDAwUAygMPAOMDAADqAwAA8QMAAPYDAAD4AwAA+gMAAAAEAAAFBAAABwQAAAkEAgARBBMAJgQEAC4EMwBkBAAAZgQbAI4EAACQBBoArgQBAL8EAADDBAEAyAQTAN8EAQDiBAEA5QQBAOgEBADuBDAAIAUDACUFAgAqBQIALwUDADcFAQBABQIARgUAAEgFAABVBQAAZAUDAG4FAQByBQAAegUBAH0FAQCEBQAAkQUFAJ0FAgCpBQIArQUDALIFAAC1BQAAuAUDAMAFIwDmBQMA7AULAPkFAwABBgIABQYAAAgGAAANBgIAEQYBADEGAwA9BgMARAYAAEYGDABWBgEAWgYVAHEGAQB2BhEAigYBAI0GAACUBgAAlwYYALQGAwC5BgYA0wYBANYGAADaBgAA3AYAAOoGAADsBgoACAcBAA0HAQARBwAAEwcAABgHAQAeBwMAIwcDACkHAAArBwAALQcEADsHAwBIBwQATgcAAFIHAQBVBwAAYQcAAG4HAQBxBwkAfAcTAJIHCQCfBwEAogcJAK0HAAC1BwEAwQcAAMMHAADHBwEAygcBANYHAADYBwAA5QcFAOwHBgD0BwAA9gcFAP4HAAABCAoADQgAABAIAAASCAEAFggCABsIAAAdCA4ALwgAADIIAgA2CAMAPAgAAEIIAQBICAAASggGAFQIAgBYCAAAWwgKAGcIAgBsCAAAbggAAHMIEwCKCCUAtAgfANUIAwDbCAAA3QhEACMJQQBmCRQAhAkAAJAJEACiCQAApQkRAMkJAADMCQAAzwkCANUJAgDZCQMA3gkAAOEJAADjCQEA5gkBAOoJAQDvCRQABQpkAGsKAQBvCjkA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPKKPIFKGGPIPPPPPKNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNHONONNNNNNNNNNNNNNOOEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","Cross","CrossJoin","DataFrameJoinOps","Inner","InnerJoinIds","JoinArgs","JoinDispatch","JoinType","JoinValidation","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Outer","SeriesJoin","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_join_suffix_name","_left_join_from_series","_left_join_from_series","_outer_join_from_series","_outer_join_from_series","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default_join_ids","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","inner_join","into","into","into","join","join_nulls","left_join","merges_join_keys","needs_checks","new","outer_join","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validation","coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[201,"polars_ops::frame::join::JoinType"],[202,"polars_ops::prelude"],[204,"polars_ops::series"],[253,"polars_core::datatypes"],[254,"polars_core::datatypes"],[255,"polars_core::series"],[256,"polars_error"],[257,"core::marker"],[258,"core::option"],[259,"core::iter::traits::collect"],[260,"polars_core::datatypes"],[261,"polars_core::chunked_array::ops::sort::options"],[262,"polars_core::frame"],[263,"dyn_clone::sealed"],[264,"alloc::string"],[265,"core::fmt"],[266,"core::fmt"],[267,"polars_arrow::array::primitive"],[268,"core::convert"],[269,"core::result"],[270,"core::any"],[271,"core::fmt"]],"i":[0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,0,7,3,3,3,3,0,0,0,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,25,0,0,0,26,0,0,34,0,0,34,0,0,0,0,0,34,0,35,35,35,35,34,0,32,34,35,0,30,30,0,30,30,0,30,30,30,30,32,34,35,32,34,35,32,34,35,32,34,35,36,36,36,36,32,35,0,32,34,35,32,34,35,32,34,35,32,34,35,32,32,32,34,34,34,35,35,35,32,34,34,35,35,32,32,34,35,32,34,35,42,42,42,42,32,32,34,35,45,32,34,35,45,32,45,34,35,32,45,0,32,32,32,32,34,35,34,35,32,34,35,32,34,35,32,34,35,32,54,0,0,51,0,51,51,0,0,0,51,49,49,50,51,51,0,0,0,51,51,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,0,53,53,0,0,0,0,0,0,0,51,51,51,51,53,53],"f":"```````{bd}{{f{j{h}}}l}0{{fd}l}01100`{{n{j{A`}}e}{{Ad{Ab}}}Af{{Al{}{{Ah{{Aj{c}}}}}}}}2211```{AnB`}{{BbBdBf}{{Ad{Bh}}}}0{{BbBhBf}{{Ad{Bh}}}}0{BbBj}000{{Bb{j{Ab}}}{{Ad{B`}}}}0{{BbBlBf}{{Ad{Ab}}}}03322{Bb{{Ad{Ab}}}}0{BbAb}00011{Bb{{Ad{Bj}}}}0{BbB`}0{{BbAb}{{Ad{B`}}}}0{{BbBlBn}B`}0{{BbC`}{{Ad{B`}}}}0{{Bbh}Ab}077{Bb{{Ad{B`}}}}00011{{BbB`}B`}0`{CbBh}```{CdCf}```````````````````{{cCh}Cj{}}00{{Cf{j{Bd}}{j{Bd}}{Aj{Bd}}Cf}Cf}{{Cl{j{A`}}BfBf}Cf}0`{{ClCnCfD`}{{Ad{Cf}}}}0{{BdBd}Db}{{ClCfAbAbD`Bf{Aj{{j{Bd}}}}}{{Ad{Cf}}}}0{{ClCfAbAbD`}{{Ad{Cf}}}}0{ce{}{}}00000{D`D`}{DdDd}{DfDf}{{ce}Cj{}{}}00{{DhCf{Aj{Bd}}{Aj{{Dj{BlBn}}}}}{{Ad{Cf}}}}0{{DhCf{Aj{{Dj{BlBn}}}}Bf}{{Ad{{Dj{CfCf}}}}}}0{{}D`}{{}Df}{{}Dl}{Bnc{}}00000{BnCj}00{{D`D`}Bf}{{DdDd}Bf}{{DfDf}Bf}{{ce}Bf{}{}}00000000{{D`Dn}E`}{{DdDn}E`}0{{DfDn}E`}0{cc{}}{DdD`}11{{D`c}CjEb}{{Ddc}CjEb}{{Dfc}CjEb}{{EdAbDfBf}{{Ad{{Dj{EfBf}}}}}}0{{EdAbDfBf}{{Ad{{Dj{{Eh{A`}}{Eh{A`}}}}}}}}0`{{}Bn}00{{EjCfee}{{Ad{Cf}}}{{El{Bd}}}{{Al{}{{Ah{c}}}}}}{ce{}{}}00{{EjCfeeD`}{{Ad{Cf}}}{{El{Bd}}}{{Al{}{{Ah{c}}}}}}`2{DdBf}{DfBf};4{{CfCfBf}{{Ad{Cn}}}}`{D`Bd}`555{cDb{}}0{c{{En{e}}}{}{}}00000{cF`{}}00```````````{{cCh}Cj{}}{Fb{{Aj{Bn}}}}0{FdAb};;{{AbAbAb}{{Ad{Ab}}}}{{AbAb}{{Ad{Ab}}}}0{FfFf}{{ce}Cj{}{}}{{{j{Ab}}}{{Ad{Ab}}}}{{AbBn}{{Ad{Bj}}}}{{}Ff}{Bnc{}}0{BnCj}{{FfFf}Bf}{{ce}Bf{}{}}00{{FfDn}{{En{CjFh}}}}{cc{}}{{Ffc}CjEb}{{}Bn}{ce{}{}}{AbBf}{{FjC`}{{Ad{Bf}}}}0{{{j{Ab}}}{{Ad{{Aj{Ab}}}}}}00{Ab{{Ad{Ab}}}}0{{BlBd}{{Ad{Ab}}}}25{c{{En{e}}}{}{}}0{cF`{}}{{FjBfBf}{{Ad{Cf}}}}0","D":"Dn","p":[[10,"AsBinary",4],[8,"BinaryChunked",253],[10,"BinaryNameSpaceImpl",4],[1,"u8"],[1,"slice"],[8,"BooleanChunked",253],[10,"ChunkedSet",4],[8,"IdxSize",254],[5,"Series",255],[8,"PolarsResult",256],[10,"Copy",257],[17,"Item"],[6,"Option",258],[10,"IntoIterator",259],[10,"AsList",23],[8,"ListChunked",253],[10,"ListNameSpaceImpl",23],[1,"str"],[1,"bool"],[8,"StringChunked",253],[8,"IdxCa",260],[1,"i64"],[1,"usize"],[5,"SortOptions",261],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",262],[5,"Private",263],[1,"unit"],[10,"JoinDispatch",78],[8,"LeftJoinIds",78],[5,"JoinArgs",78],[5,"String",264],[6,"JoinType",78],[6,"JoinValidation",78],[10,"CrossJoin",78],[1,"tuple"],[8,"ChunkJoinOptIds",78],[5,"Formatter",265],[8,"Result",265],[10,"Hasher",266],[10,"SeriesJoin",78],[8,"InnerJoinIds",78],[5,"PrimitiveArray",267],[10,"DataFrameJoinOps",78],[10,"AsRef",268],[6,"Result",269],[5,"TypeId",270],[10,"ArgAgg",204],[10,"SeriesSealed",204],[6,"SearchSortedSide",204],[5,"Error",265],[10,"SeriesMethods",204],[15,"Outer",201]],"b":[[152,"impl-Display-for-JoinType"],[153,"impl-Debug-for-JoinType"],[154,"impl-Display-for-JoinValidation"],[155,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANYAEgAAAAgACwABAA8AAwAVAA8AKQAyAGAABQBoABMAfgAeAJ4AAAChAAoAsQAAALMAAgC3ABYAzwAFANcAAgDdAAwA6wABAO8ADAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"core::fmt"],[121,"core::fmt"],[122,"core::option"],[123,"core::hash"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,3,3,3,3,0,3,3,3,3,3,3,3,19,0,19,0,0,0,17,19,17,17,20,17,19,20,17,19,17,17,17,17,17,19,17,19,17,11,20,17,20,17,19,20,17,19,20,17,19,17,17,17,17,17,19,17,20,17,19,11,20,17,20,17,19,17,20,17,19,17,17,11,20,17,17,19,20,17,19,20,17,19,20,17,19,20,17,19,0,0],"f":"`{{cb}d{}}{ce{}{}}0{ff}{{ce}d{}{}}{{}f}{hc{}}0{hd}{{fj}{{n{l}}}}{cc{}}`{f{{Ab{A`l}}}}{f{{Ad{A`}}}}{{}h}:`7{{{Ab{A`l}}}f}{{fjl}d}{f{{Ah{Af}}}}{fAf}{c{{n{Aj}}}{{Al{j}}}}?{c{{An{e}}}{}{}}0{cB`{}}{{fj}d}{ce{}{}}{{f{Ah{Af}}}f}``````{{cb}d{}}0``222222``{BbBd}`{BbBb}{BfBf}{{ce}d{}{}}0`{{Afj}Bd}{{Bhj}Bd}{{}Bb}{hc{}}00000{hd}00{{BbBb}Bd}{{ce}Bd{}{}}00{{BbBj}{{An{dBl}}}}{{BfBj}{{An{dBl}}}}`{cc{}}00{{Afj}{{n{{C`{Bn}}}}}}{{Bhj}{{n{{C`{Bn}}}}}}{{Bbc}dCb}{{}h}00`{ce{}{}}00{BbBd}`{{AfjBn}{{n{d}}}}{{BhjBn}{{n{d}}}}`33{c{{An{e}}}{}{}}00000{cB`{}}00555{{}{{Ad{j}}}}0","D":"Dh","p":[[5,"Private",109],[1,"unit"],[5,"SQLContext",0],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",31],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",31],[1,"bool"],[6,"Context",31],[5,"DefaultFunctionRegistry",31],[5,"Formatter",120],[5,"Error",120],[5,"UserDefinedFunction",121],[6,"Option",122],[10,"Hasher",123]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_core::datatypes::time_unit"],[308,"polars_arrow::legacy::time_zone"],[309,"core::option"],[310,"polars_core::chunked_array::logical::datetime"],[311,"polars_error"],[312,"chrono::naive::time"],[313,"polars_core::chunked_array::logical::time"],[314,"polars_core::datatypes"],[315,"polars_core::frame"],[316,"alloc::string"],[317,"polars_core::utils"],[318,"dyn_clone::sealed"],[319,"core::fmt"],[320,"core::fmt"],[321,"core::result"],[322,"core::any"],[323,"core::clone"],[324,"polars_core::datatypes"],[325,"polars_core::datatypes::dtype"],[326,"polars_core::frame::group_by::proxy"],[327,"polars_core::datatypes::dtype"],[328,"core::ops::function"],[329,"polars_core::series"],[330,"polars_core::datatypes"]],"i":[4,0,0,4,4,0,0,0,0,0,4,0,0,0,0,11,12,44,3,0,13,0,0,16,18,18,0,0,0,25,25,25,25,25,0,0,25,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,4,0,0,0,42,43,0,43,0,4,42,43,4,4,42,43,0,43,0,43,43,43,0,43,41,3,4,42,43,44,3,3,3,47,41,3,4,42,43,44,47,41,3,4,42,43,44,41,3,4,42,43,44,41,3,4,42,43,44,3,3,3,3,43,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,0,0,3,4,42,43,3,3,3,4,4,4,42,42,42,43,43,43,41,3,3,4,42,43,47,41,3,4,42,43,44,44,44,44,44,0,0,3,4,42,43,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,3,3,3,3,3,3,3,3,3,44,47,44,3,3,3,44,44,44,41,3,4,42,43,44,3,3,3,44,44,44,44,3,44,3,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,47,41,3,4,42,43,44,43,3,3,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"`````````````{{bddfhj{n{l}}}{{Ab{A`}}}}{dAd}{{Af{n{l}}}{{Ab{Af}}}}{{Ah{n{l}}}{{Ab{Ah}}}}```{{Ajff{n{l}}}{{Ab{Aj}}}}`{{bAlAlfh}{{Ab{An}}}}{{B`{n{l}}Bbb}{{Ab{B`}}}}{{Bdcbff}{{Ab{Bf}}}{{Bj{Bh}}}}0``````````{{cBl}Bn{}}{C`Bb}{ce{}{}}0{CbCb}{{ce}Bn{}{}}{Cdc{}}0{CdBn}{{CbCb}Ad}{{ce}Ad{}{}}00{{CbCf}Ch}{cc{}}{{Cbc}BnCj}`{{}Cd}:{{Cbb}Ad};{c{{Cl{e}}}{}{}}0{cCn{}}````?=={{{D`{c}}}{{D`{c}}}{DbDd}}<;;:6{b{{n{Cb}}}}5?`{{{D`{c}}b}nDd}{{Df{Dj{Dh}}{n{j}}}{{n{c}}}{}}`{ce{}{}}6{{c{n{j}}}{{Ab{{Dn{}{{Dl{e}}}}}}}{}{}}76````````````````````````{{cBl}Bn{}}00000{{fE`{n{l}}}{{Ab{E`}}}}0033333333333333{EbEb}{ff}{hh}{EdEd}{EfEf}{EhEh}{{ce}Bn{}{}}00000{{ff}Ej}{{ce}Ej{}{}}{fE`}{fAd}{{}Ef}{Cdc{}}0000000000000{CdBn}000000{{fElb}{{Ab{Bn}}}}{{f{n{b}}b}{{Ab{Bn}}}}{{ff}Ad}{{hh}Ad}{{EdEd}Ad}{{EfEf}Ad}{{ce}Ad{}{}}00000000000{{EbCf}Ch}{{fCf}Ch}0{{hCf}Ch}{{EdCf}Ch}{{EfCf}Ch}{cc{}}000000{{EhE`h{n{l}}}{{Ab{Eb}}}}00{{EhEbhj{n{l}}Ef}{{Ab{En}}}}{{ff{Dj{E`}}hj{n{l}}}{{Ab{F`}}}}{{Eh{Dj{E`}}hj{n{Fb}}AdAdEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{fc}BnCj}{{hc}BnCj}{{Edc}BnCj}{{Efc}BnCj}{{}Cd}000000{ce{}{}}0000000{{f{n{b}}}Ad}{fAd}0{fE`}1{{fE`}f}12{E`f}{{fff}Eh}{En{{n{c}}}{}}`{bf}`{{ff}{{n{Ej}}}}{{EhE`{n{l}}}{{Ab{E`}}}}00::::::{cBh{}}{{fE`{n{l}}ceg}{{Ab{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{d}}}}}{{Fj{d}{{Fh{E`}}}}}}{{fE`{n{l}}}{{Ab{E`}}}}33330303{c{{Cl{e}}}{}{}}0000000000000{cCn{}}000000{Ef{{n{Fl}}}}=>``{FnG`}{Gb{{Ab{Gd}}}}{Gb{{Ab{Gf}}}}0{Gb{{Ab{Gh}}}}22112{Gb{{Ab{Gj}}}}322{{Gbb}{{Ab{G`}}}}0334","D":"Gb","p":[[1,"str"],[5,"NaiveDateTime",306],[5,"Duration",85],[6,"ClosedWindow",85],[6,"TimeUnit",307],[6,"Tz",308],[6,"Option",309],[8,"DatetimeChunked",310],[8,"PolarsResult",311],[1,"bool"],[10,"PolarsMonthEnd",0],[10,"PolarsMonthStart",0],[10,"PolarsRound",0],[5,"NaiveTime",312],[8,"TimeChunked",313],[10,"PolarsTruncate",0],[8,"StringChunked",314],[10,"PolarsUpsample",0],[5,"DataFrame",315],[5,"String",316],[10,"IntoVec",317],[5,"Private",318],[1,"unit"],[10,"AsString",28],[6,"Pattern",28],[1,"usize"],[5,"Formatter",319],[8,"Result",319],[10,"Hasher",320],[6,"Result",321],[5,"TypeId",322],[5,"DatetimeInfer",60],[10,"Clone",323],[10,"PolarsNumericType",314],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85],[6,"Label",85],[6,"StartBy",85],[5,"Window",85],[6,"Ordering",324],[6,"DataType",325],[5,"BoundsIter",85],[8,"GroupsSlice",326],[8,"TimeZone",325],[5,"Vec",327],[1,"tuple"],[17,"Output"],[10,"Fn",328],[1,"u32"],[10,"AsSeries",285],[5,"Series",329],[10,"TemporalMethods",285],[8,"Int32Chunked",314],[8,"Int8Chunked",314],[8,"BooleanChunked",314],[8,"Int16Chunked",314]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQCCCCCCCQCCCECCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","open_file","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[116,"polars_utils::atomic"],[136,"polars_utils::binary_search"],[138,"polars_utils::cache"],[174,"polars_utils::cell"],[194,"polars_utils::clmul"],[198,"polars_utils::contention_pool"],[213,"polars_utils::cpuid"],[215,"polars_utils::float"],[221,"polars_utils::floor_divmod"],[223,"polars_utils::functions"],[227,"polars_utils::hashing"],[259,"polars_utils::idx_vec"],[303,"polars_utils::index"],[365,"polars_utils::io"],[366,"polars_utils::iter"],[379,"polars_utils::mem"],[380,"polars_utils::min_max"],[387,"polars_utils::nulls"],[392,"polars_utils::ord"],[394,"polars_utils::partitioned"],[413,"polars_utils::slice"],[427,"polars_utils::sort"],[429,"polars_utils::sync"],[451,"polars_utils::sys"],[465,"polars_utils::total_ord"],[515,"polars_utils::unwrap"],[517,"polars_utils::vec"],[530,"num_traits"],[531,"core::cmp"],[532,"core::marker"],[533,"core::fmt"],[534,"core::marker"],[535,"core::cmp"],[536,"core::hash"],[537,"core::default"],[538,"core::ops::function"],[539,"core::result"],[540,"core::ops::function"],[541,"core::cmp"],[542,"alloc::borrow"],[543,"alloc::sync"],[544,"alloc::vec"],[545,"core::convert"],[546,"core::ops::range"],[547,"core::cmp"],[548,"core::slice::iter"],[549,"core::slice::iter"],[550,"std::fs"],[551,"std::path"],[552,"core::error"],[553,"core::iter::traits::iterator"],[554,"hashbrown::map"],[555,"hashbrown::map"],[556,"core::slice::index"],[557,"num_traits::cast"],[558,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,112,0,0,0,0,0,112,10,11,113,114,112,10,11,113,114,0,0,12,13,12,13,12,12,13,12,13,12,13,13,13,12,13,12,13,12,13,12,13,13,13,13,13,13,12,12,12,12,12,13,13,12,13,12,12,12,12,13,12,12,12,12,12,13,12,13,12,13,12,12,13,12,12,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,34,31,34,31,31,31,31,34,31,34,31,34,31,34,34,31,31,31,31,34,31,31,34,31,34,31,31,34,31,31,34,31,34,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,43,43,43,43,43,0,44,0,0,0,0,0,0,50,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,64,0,0,0,0,62,63,62,63,0,62,63,62,63,62,63,62,63,62,63,62,62,62,62,63,62,63,62,62,63,64,64,62,62,63,62,63,62,63,66,63,62,62,66,62,63,67,63,68,62,62,63,62,63,62,63,62,63,0,0,0,0,77,0,77,71,71,71,71,73,57,77,0,0,79,79,79,79,79,79,65,65,0,65,65,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,85,87,87,89,0,90,90,91,91,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,104,0,0,0,0,104,0,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,104,99,104,92,100,92,92,101,101,92,92,100,99,99,99,99,0,105,0,0,0,107,0,0,107,107,108,109,110,109,111],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Ah{c}}c}Aj{}}{ce{}{}}000{{{Ah{c}}}Al{}}{AjAj}{{{Ah{c}}}{{Ah{c}}}An}{{ce}Al{}{}}0{{AjAj}B`}{{ce}B`{}{}}{{}Aj}{{}{{Ah{c}}}{}}<<<<{AbAl}0{{AjAj}Bb}{{ce}Bb{}{}}00{{AjBd}Bf}{cc{}}0{{{Ah{c}}Aj}c{}}0{{{Ah{c}}c}{{Bh{Aj}}}{}}1{{Ajc}AlBj}{{}Ab}0{ce{}{}}0{{{Ah{c}}}Bb{}}{{{Ah{c}}}Ab{}}<{{AjAj}{{Bh{B`}}}}{{{Ah{c}}}{{Bh{c}}}{}}{{{Ah{c}}Ajc}Al{}}{{{Ah{c}}Aje}AlBl{{C`{c}{{Bn{c}}}}}}{{{Ah{c}}AjAj}Al{}}{{{Ah{c}}Aj}cBl}88{c{{Cb{e}}}{}{}}000{{{Ah{c}}Aje}{{Cb{Al`}}}Bl{{Cd{c}{{Bn{{Cb{c`}}}}}}}}{cCf{}}0{Ab{{Ah{c}}}{}}`<<{ChCh}{{ce}Al{}{}}{{}Ch}{Chc{}}{Abc{}}01{AbAl}{cc{}}{{}Ab}{ce{}{}}{ChAl}{AbCh}2>><{{{Cj{c}}c}AbCl}0``3333{{{Cn{ce}}}{{Cn{ce}}}AnAn};{{}{{Cn{ce}}}{D`Db}{}}999988{{{Dd{ceg}}cBb}e{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}88{{{Cn{eg}}c}{{Bh{g}}}{D`DbDf}{{Dh{c}}D`Db}{}}0{{{Cn{eg}}ci}g{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{{C`{e}{{Bn{g}}}}}}99{{{Cn{ce}}ce}e{D`Db}{}}99{{gAb}{{Dd{ceg}}}{D`DbAn}j{{Cd{c}{{Bn{e}}}}}}{Ab{{Cn{ce}}}{D`Db}{}};{c{{Cb{e}}}{}{}}0{{{Cn{eg}}ck}{{Cb{gi}}}{D`Db{Dl{}{{Dj{}}}}Df}{{Dh{c}}D`Db}{}{}{{C`{e}{{Bn{{Cb{gi}}}}}}}}11{cCf{}}0`>>{{}{{Dn{c}}}Bl}{Abc{}}0{AbAl}{cc{}}{E`c{}}{c{{Dn{c}}}{}}{{{Dn{c}}}{}Df}{{{Dn{c}}}cDf}{{}Ab}{ce{}{}}{{{Dn{c}}}c{}}5{{}}>><{{EbEb}Eb}0{EbEb}0`44<<;:{{{Ed{c}}}cBl}65{Ab{{Ed{c}}}Bl}{{{Ed{c}}c}AlBl}{c{{Cb{e}}}{}{}}0{cCf{}}{{}Bb}0`00{EfBb}10`{{EhEh}{{Ej{EhEh}}}}{{{El{c}}e}{{El{c}}}An{{Cd{c}{{Bn{c}}}}}}{{{Cj{e}}{Bh{Ab}}}{{En{c}}}An{{F`{{Cj{c}}}}}}{{AbAb{Fb{Ab}}}{{Fb{Ab}}}}{{{El{c}}g}{{Cb{{El{c}}e}}}An{}{{Cd{c}{{Bn{{Cb{ce}}}}}}}}``{ce{}{}}0{FdFd}{{ce}Al{}{}}{Abc{}}0{FfEb}{FdEb}{AbAl}{{FdFd}Bb}{{ce}Bb{}{}}00{{FdBd}Bf}{cc{}}{{Fdc}AlBj}{{EbAb}Ab}{{}Ab}={FdBb}{{{Bh{{Cj{Fh}}}}Eb}Fd}??{Fdc{}}95{c{{Cb{e}}}{}{}}0{cCf{}}2``{{{Fj{c}}}{{Cj{c}}}{}}000{ce{}{}}0{{{Fj{c}}}Ab{}}{{{Fj{c}}}{{Fj{c}}}{}}{{ce}Al{}{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}e{}{}}{Abc{}}0{{{Fj{c}}}Al{}}{AbAl}{{{Fj{c}}{Fj{c}}}BbFl}{{ce}Bb{}{}}00{{{Fj{c}}e}Al{}{{G`{}{{Fn{c}}}}}}{{{Fj{c}}Bd}Bfl}{cc{}}{{{Cj{c}}}{{Fj{c}}}An}{{{En{c}}}{{Fj{c}}}{}}{g{{Cb{ic}}}{}{}{{Gb{c}{{Fn{e}}}}}{}}{e{{Fj{c}}}{}{{G`{}{{Fn{c}}}}}}{{}Ab}{ce{}{}}{{{Fj{c}}}Bb{}}{{{Fj{c}}}{{Gd{c}}}{}}{{{Fj{c}}}{{Gf{c}}}{}}{{{Fj{c}}}Ab{}}{{}{{Fj{c}}}{}}{{{Fj{c}}}{{Bh{c}}}{}}{{{Fj{c}}c}Al{}}0{{{Fj{c}}Ab}Al{}}8{c{{Cb{e}}}{}{}}0{cCf{}}{Ab{{Fj{c}}}{}}`````````;;;;{{{Cj{Gh}}Gh}{{Gj{Al}}}}{GlGl}{GnGn}{{ce}Al{}{}}0{Abc{}}000{AbAl}0{{GlGl}Bb}{{ce}Bb{}{}}00{Gn{{Ej{GhGh}}}}{{GlBd}Bf}{{GnBd}Bf}{cc{}}{GhGl}1{{{H`{}{{Fn{c}}}}Ab}cHb}0{GlGh}{{}Ab}0`{GnEb}{ce{}{}}0{HdBb}{GnBb}{GlBb}{cBb{}}{HdAb}{{}Gl}{{}Gn}{HfAb}{{GhGh}Gn}{{HhEb}Gh}{Gl{{Bh{Gh}}}};;{c{{Cb{e}}}{}{}}000{cCf{}}0{c{{Gj{Hj}}}{{F`{Hl}}}}``````{Hn{{`{HnGh}}}}0{Hn{{`{HnI`}}}}0{g{{Cb{Ibc}}}Id{}{{Gb{c}{{Fn{e}}}}}}{Gb{{Cb{Alc}}}Id}{{{Ij{}{{If{c}}{Ih{e}}}}}e{}{{Il{}{{Fn{c}}}}}}{{{Cj{c}}}{{Cj{c}}}j}`{{InIn}In}000{{InIn}Bb}0```{{{Hb{}{{J`{c}}}}}Bb{}}{{{Hb{}{{J`{c}}}}}c{}}{{cc}B`{hEf}}0`{ce{}{}}0{Abc{}}0{AbAl}{cc{}}{{}Ab}{{{Jb{ceg}}}{{Cj{{Jd{ceg}}}}}{}{}{}}{{{Jb{ceg}}}{{En{{Jd{ceg}}}}}{}{}{}}6{{{En{{Jd{ceg}}}}}{{Jb{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jf{ceg}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jf{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Ej{{Jh{ceg}}Ab}}}{}{}{}}{{{Jb{ceg}}Eb}{{Jh{ceg}}}{}{}{}}{c{{Cb{e}}}{}{}}0{cCf{}}`````{Jj{{Cj{{Jl{c}}}}}{}}{{Jne}{}{}{{K`{{Cj{c}}}}}}0{KbBb}{{{Cj{Fh}}}Eb}{Kd{{Bh{c}}}{}}0{{Kf{Fb{Ab}}}Kf}0{{e{En{Fh}}Ab}{{Cj{g}}}{Khj}{{G`{}{{Fn{c}}}}}{Kjj}}{{Kl{Cj{{Ej{GhGh}}}}{En{Gh}}}Al}`{ce{}{}}0{{{Kn{c}}}{{Kn{c}}}An}{{ce}Al{}{}}{Abc{}}0{{{Kn{c}}}c{}}{AbAl}{{{Kn{c}}Bd}Bfl}{cc{}}{{}{{Kn{c}}}{}}{{{Kn{c}}}{}{}}{{}Ab}:{{{Kn{c}}}Bb{}}33;{c{{Cb{e}}}{}{}}0{cCf{}}``==::8{L`Eb}74>221```````>>{LbLb}{LdLd}{{{Lf{c}}}{{Lf{c}}}An}?{{{Lf{c}}{Lf{c}}}B`Kh}{{ce}B`{}{}}{Abc{}}0{{{Lf{c}}}EbFf}{AbAl}{{{Lf{c}}{Lf{c}}}BbLh}{{ce}Bb{}{}}00{cc{}}{{{Lf{c}}{Lf{c}}}BbKh}0{{{Lf{c}}e}AlLjBj}{{}Ab}{ce{}{}}{{{Lf{c}}}BbHb}447{{{Lf{c}}{Lf{c}}}{{Bh{B`}}}Kh}22{{{M`{}{{Ll{c}}{Ln{e}}}}}c{}{}}{{KhKh}B`}{{LhLh}Bb}{{KhKh}Bb}0{{Ljc}AlBj}{{{Cj{Lj}}c}AlBj}223{c{{Cb{e}}}{}{}}0{cCf{}}{{{Lf{c}}}eHb{}}`{Mbc{}}``````{{{Mf{}{{Md{c}}}}g}{{En{e}}}{}{}{{Cd{c}{{Bn{e}}}}}}0{{MhAbc}Alj}{Mj{{Ej{AbAb}}}}{{Mlc}Al{}}1{{AbLd}Mn}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",530],[10,"PartialOrd",531],[10,"Copy",532],[10,"Debug",533],[10,"Send",532],[10,"Sync",532],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[5,"Arena",59],[5,"Node",59],[1,"unit"],[10,"Clone",534],[6,"Ordering",531],[1,"bool"],[5,"Formatter",533],[8,"Result",533],[6,"Option",535],[10,"Hasher",536],[10,"Default",537],[17,"Output"],[10,"FnOnce",538],[6,"Result",539],[10,"FnMut",538],[5,"TypeId",540],[5,"SyncCounter",116],[1,"slice"],[10,"Ord",531],[5,"FastFixedCache",138],[10,"Hash",536],[10,"Eq",531],[5,"FastCachedFunc",138],[10,"Sized",532],[10,"Borrow",541],[17,"Owned"],[10,"ToOwned",542],[5,"SyncUnsafeCell",174],[1,"never"],[1,"u64"],[5,"LowContentionPool",198],[10,"IsFloat",215],[10,"FloorDivMod",221],[1,"tuple"],[5,"Arc",543],[5,"Vec",544],[10,"AsRef",545],[5,"Range",546],[5,"BytesHash",227],[10,"DirtyHash",227],[1,"u8"],[5,"UnitVec",259],[10,"PartialEq",531],[17,"Item"],[10,"IntoIterator",547],[10,"FallibleIterator",366],[5,"Iter",548],[5,"IterMut",548],[8,"IdxSize",303],[8,"PolarsResult",549],[5,"NullableIdxSize",303],[5,"ChunkId",303],[10,"Indexable",303],[10,"IsNull",387],[10,"Bounded",303],[10,"NullCount",303],[10,"ToIdx",303],[5,"File",550],[5,"Path",551],[10,"EnumerateIdxTrait",366],[1,"u32"],[10,"FromFallibleIterator",366],[10,"Error",552],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",366],[10,"Iterator",553],[10,"MinMax",380],[17,"Inner"],[5,"PartitionedHashMap",394],[5,"HashMap",554],[5,"RawEntryBuilder",554],[5,"RawEntryBuilderMut",554],[10,"Slice2Uninit",413],[20,"MaybeUninit",555],[10,"GetSaferUnchecked",413],[10,"SliceIndex",556],[10,"SortedSlice",413],[10,"Extrema",413],[10,"SliceAble",413],[10,"TotalOrd",465],[10,"FromPrimitive",557],[5,"ThreadPool",558],[5,"SyncPtr",429],[5,"MemInfo",451],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",465],[10,"TotalEq",465],[10,"TotalHash",465],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",465],[10,"UnwrapUncheckedRelease",515],[17,"ItemIn"],[10,"ConvertVec",517],[10,"ResizeFaster",517],[10,"IntoRawParts",517],[10,"PushUnchecked",517],[10,"CapacityByFactor",517],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"b":[[283,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[284,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMgBNQAAAAgACgBMAFkAAgBdAAIAYgASAHYACQCBAAAAhAAEAIwADgCdAAUApQAJALAAAQCzAAIAtwAAALsAAADAAAwAzgABANEABgDZAAoA5QAOAPUAAgD5AAsABgEUABwBBAAiAQYAKgEkAFABAABSAQAAVAEEAFsBFgBzAQAAdQEGAH0BCwCLAQUAkgECAJYBDQCmAQQArAEAAK8BBQC2AQEAugEBAL0BAAC/AQUAxgEEAM0BAADPAQMA1wEDAN0BCwDqAQMA7wEVAAYCBAAMAgMAEQIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
